{"version":3,"file":"geoarrow.umd.js","sources":["../node_modules/@math.gl/core/dist/lib/common.js","../node_modules/@math.gl/polygon/dist/polygon-utils.js","../node_modules/@math.gl/polygon/dist/polygon.js","../node_modules/@math.gl/polygon/dist/earcut.js","../src/child.ts","../src/algorithm/utils/polygon.ts","../src/algorithm/earcut.ts","../src/type.ts","../src/data.ts","../src/algorithm/utils/assert.ts","../src/algorithm/coords.ts","../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../node_modules/proj4/lib/projections/eqearth.js","../node_modules/proj4/lib/projections/bonne.js","../src/constants.ts","../src/algorithm/winding.ts","../src/algorithm/proj.ts","../node_modules/proj4/lib/index.js","../node_modules/proj4/projs.js","../src/algorithm/total-bounds.ts","../src/algorithm/area.ts","../src/algorithm/exterior.ts","../node_modules/apache-arrow/fb/union-mode.mjs","../node_modules/apache-arrow/fb/precision.mjs","../node_modules/apache-arrow/fb/date-unit.mjs","../node_modules/apache-arrow/fb/time-unit.mjs","../node_modules/apache-arrow/fb/interval-unit.mjs","../node_modules/apache-arrow/enum.mjs","../node_modules/apache-arrow/type.mjs","../src/vector.ts","../src/worker/hard-clone.ts","../node_modules/apache-arrow/util/bigint.mjs","../node_modules/apache-arrow/util/bit.mjs","../node_modules/apache-arrow/data.mjs","../src/worker/rehydrate.ts","../src/worker/transferable.ts","../node_modules/@loaders.gl/gis/dist/lib/binary-features/binary-to-geojson.js","../node_modules/@loaders.gl/wkt/dist/lib/parse-wkb-header.js","../node_modules/@loaders.gl/wkt/dist/lib/parse-wkb.js","../node_modules/@loaders.gl/wkt/dist/wkb-loader.js","../node_modules/@loaders.gl/wkt/dist/lib/utils/version.js","../src/io/wkb.ts"],"sourcesContent":["// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst RADIANS_TO_DEGREES = (1 / Math.PI) * 180;\nconst DEGREES_TO_RADIANS = (1 / 180) * Math.PI;\nconst DEFAULT_CONFIG = {\n    EPSILON: 1e-12,\n    debug: false,\n    precision: 4,\n    printTypes: false,\n    printDegrees: false,\n    printRowMajor: true,\n    _cartographicRadians: false\n};\n// Configuration is truly global as of v3.6 to ensure single config even if multiple copies of math.gl\n// Multiple copies of config can be quite tricky to debug...\nglobalThis.mathgl = globalThis.mathgl || { config: { ...DEFAULT_CONFIG } };\nexport const config = globalThis.mathgl.config;\nexport function configure(options) {\n    // Only copy existing keys\n    Object.assign(config, options);\n    return config;\n}\n/**\n * Formats a value into a string\n * @param value\n * @param param1\n * @returns\n */\nexport function formatValue(value, { precision = config.precision } = {}) {\n    value = round(value);\n    // get rid of trailing zeros\n    return `${parseFloat(value.toPrecision(precision))}`;\n}\n/**\n * Check if value is an \"array\"\n * Returns `true` if value is either an array or a typed array\n * Note: returns `false` for `ArrayBuffer` and `DataView` instances\n * @note isTypedArray and isNumericArray are often more useful in TypeScript\n */\nexport function isArray(value) {\n    return Array.isArray(value) || (ArrayBuffer.isView(value) && !(value instanceof DataView));\n}\nexport function clone(array) {\n    return 'clone' in array ? array.clone() : array.slice();\n}\nexport function toRadians(degrees) {\n    return radians(degrees);\n}\nexport function toDegrees(radians) {\n    return degrees(radians);\n}\nexport function radians(degrees, result) {\n    return map(degrees, (degrees) => degrees * DEGREES_TO_RADIANS, result);\n}\nexport function degrees(radians, result) {\n    return map(radians, (radians) => radians * RADIANS_TO_DEGREES, result);\n}\n/**\n * \"GLSL equivalent\" of `Math.sin`: Works on single values and vectors\n * @deprecated\n */\nexport function sin(radians, result) {\n    return map(radians, (angle) => Math.sin(angle), result);\n}\n/**\n * \"GLSL equivalent\" of `Math.cos`: Works on single values and vectors\n * @deprecated\n */\nexport function cos(radians, result) {\n    return map(radians, (angle) => Math.cos(angle), result);\n}\n/**\n * \"GLSL equivalent\" of `Math.tan`: Works on single values and vectors\n * @deprecated\n */\nexport function tan(radians, result) {\n    return map(radians, (angle) => Math.tan(angle), result);\n}\n/**\n * \"GLSL equivalent\" of `Math.asin`: Works on single values and vectors\n * @deprecated\n */\nexport function asin(radians, result) {\n    return map(radians, (angle) => Math.asin(angle), result);\n}\n/**\n * \"GLSL equivalent\" of `Math.acos`: Works on single values and vectors\n * @deprecated\n */\nexport function acos(radians, result) {\n    return map(radians, (angle) => Math.acos(angle), result);\n}\n/**\n * \"GLSL equivalent\" of `Math.atan`: Works on single values and vectors\n * @deprecated\n */\nexport function atan(radians, result) {\n    return map(radians, (angle) => Math.atan(angle), result);\n}\nexport function clamp(value, min, max) {\n    return map(value, (value) => Math.max(min, Math.min(max, value)));\n}\nexport function lerp(a, b, t) {\n    if (isArray(a)) {\n        return a.map((ai, i) => lerp(ai, b[i], t));\n    }\n    return t * b + (1 - t) * a;\n}\n/* eslint-disable */\n/**\n * Compares any two math objects, using `equals` method if available.\n * @param a\n * @param b\n * @param epsilon\n * @returns\n */\nexport function equals(a, b, epsilon) {\n    const oldEpsilon = config.EPSILON;\n    if (epsilon) {\n        config.EPSILON = epsilon;\n    }\n    try {\n        if (a === b) {\n            return true;\n        }\n        if (isArray(a) && isArray(b)) {\n            if (a.length !== b.length) {\n                return false;\n            }\n            for (let i = 0; i < a.length; ++i) {\n                // eslint-disable-next-line max-depth\n                if (!equals(a[i], b[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (a && a.equals) {\n            return a.equals(b);\n        }\n        if (b && b.equals) {\n            return b.equals(a);\n        }\n        if (typeof a === 'number' && typeof b === 'number') {\n            return Math.abs(a - b) <= config.EPSILON * Math.max(1, Math.abs(a), Math.abs(b));\n        }\n        return false;\n    }\n    finally {\n        config.EPSILON = oldEpsilon;\n    }\n}\nexport function exactEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a && typeof a === 'object' && b && typeof b === 'object') {\n        if (a.constructor !== b.constructor) {\n            return false;\n        }\n        if (a.exactEquals) {\n            return a.exactEquals(b);\n        }\n    }\n    if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; ++i) {\n            if (!exactEquals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n/* eslint-enable */\nexport function withEpsilon(epsilon, func) {\n    const oldPrecision = config.EPSILON;\n    config.EPSILON = epsilon;\n    let value;\n    try {\n        value = func();\n    }\n    finally {\n        config.EPSILON = oldPrecision;\n    }\n    return value;\n}\n// HELPERS\nfunction round(value) {\n    return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n// If the array has a clone function, calls it, otherwise returns a copy\nfunction duplicateArray(array) {\n    // @ts-expect-error We check for math.gl class methods\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    return array.clone ? array.clone() : new Array(array.length);\n}\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(value, func, result) {\n    if (isArray(value)) {\n        const array = value;\n        result = result || duplicateArray(array);\n        for (let i = 0; i < result.length && i < array.length; ++i) {\n            const val = typeof value === 'number' ? value : value[i];\n            result[i] = func(val, i, result);\n        }\n        return result;\n    }\n    return func(value);\n}\n//# sourceMappingURL=common.js.map","// math.gl\n// SPDX-License-Identifier: MIT and ISC\n// Copyright (c) vis.gl contributors\n/* eslint-disable max-statements, max-depth, complexity, no-unused-expressions */\nimport { equals } from '@math.gl/core';\nexport const WINDING = {\n    CLOCKWISE: 1,\n    COUNTER_CLOCKWISE: -1\n};\n/**\n * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n * Note: points are modified in-place.\n * @param points An array that represents points of the polygon.\n * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n * @param options Parameters of the polygon.\n * @return Returns true if the winding direction was changed.\n */\nexport function modifyPolygonWindingDirection(points, direction, options = {}) {\n    const windingDirection = getPolygonWindingDirection(points, options);\n    if (windingDirection !== direction) {\n        reversePolygon(points, options);\n        return true;\n    }\n    return false;\n}\n/**\n * Returns winding direction of the polygon.\n * @param points An array that represents points of the polygon.\n * @param options Parameters of the polygon.\n * @returns Winding direction of the polygon.\n */\nexport function getPolygonWindingDirection(points, options = {}) {\n    return Math.sign(getPolygonSignedArea(points, options));\n}\nexport const DimIndex = {\n    x: 0,\n    y: 1,\n    z: 2\n};\n/**\n * Returns signed area of the polygon.\n * @param points An array that represents points of the polygon.\n * @param options Parameters of the polygon.\n * @returns Signed area of the polygon.\n * https://en.wikipedia.org/wiki/Shoelace_formula\n */\nexport function getPolygonSignedArea(points, options = {}) {\n    const { start = 0, end = points.length, plane = 'xy' } = options;\n    const dim = options.size || 2;\n    let area = 0;\n    const i0 = DimIndex[plane[0]];\n    const i1 = DimIndex[plane[1]];\n    for (let i = start, j = end - dim; i < end; i += dim) {\n        area += (points[i + i0] - points[j + i0]) * (points[i + i1] + points[j + i1]);\n        j = i;\n    }\n    return area / 2;\n}\n/**\n * Calls the visitor callback for each segment in the polygon.\n * @param points An array that represents points of the polygon\n * @param visitor A callback to call for each segment.\n * @param options Parameters of the polygon.\n */\nexport function forEachSegmentInPolygon(points, visitor, options = {}) {\n    const { start = 0, end = points.length, size = 2, isClosed } = options;\n    const numPoints = (end - start) / size;\n    for (let i = 0; i < numPoints - 1; ++i) {\n        visitor(points[start + i * size], points[start + i * size + 1], points[start + (i + 1) * size], points[start + (i + 1) * size + 1], i, i + 1);\n    }\n    const endPointIndex = start + (numPoints - 1) * size;\n    const isClosedEx = isClosed ||\n        (equals(points[start], points[endPointIndex]) &&\n            equals(points[start + 1], points[endPointIndex + 1]));\n    if (!isClosedEx) {\n        visitor(points[endPointIndex], points[endPointIndex + 1], points[start], points[start + 1], numPoints - 1, 0);\n    }\n}\nfunction reversePolygon(points, options) {\n    const { start = 0, end = points.length, size = 2 } = options;\n    const numPoints = (end - start) / size;\n    const numSwaps = Math.floor(numPoints / 2);\n    for (let i = 0; i < numSwaps; ++i) {\n        const b1 = start + i * size;\n        const b2 = start + (numPoints - 1 - i) * size;\n        for (let j = 0; j < size; ++j) {\n            const tmp = points[b1 + j];\n            points[b1 + j] = points[b2 + j];\n            points[b2 + j] = tmp;\n        }\n    }\n}\n/**\n * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n * Note: points are modified in-place.\n * @param points Array of points that represent the polygon.\n * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n * @param options Parameters of the polygon.\n * @return Returns true if the winding direction was changed.\n */\nexport function modifyPolygonWindingDirectionPoints(points, direction, options = {}) {\n    const currentDirection = getPolygonWindingDirectionPoints(points, options);\n    if (currentDirection !== direction) {\n        points.reverse();\n        return true;\n    }\n    return false;\n}\n/**\n * Returns winding direction of the polygon.\n * @param points Array of points that represent the polygon.\n * @param options Parameters of the polygon.\n * @returns Winding direction of the polygon.\n */\nexport function getPolygonWindingDirectionPoints(points, options = {}) {\n    return Math.sign(getPolygonSignedAreaPoints(points, options));\n}\n/**\n * Returns signed area of the polygon.\n * @param points Array of points that represent the polygon.\n * @param options Parameters of the polygon.\n * @returns Signed area of the polygon.\n */\nexport function getPolygonSignedAreaPoints(points, options = {}) {\n    // https://en.wikipedia.org/wiki/Shoelace_formula\n    const { start = 0, end = points.length, plane = 'xy' } = options;\n    let area = 0;\n    const i0 = DimIndex[plane[0]];\n    const i1 = DimIndex[plane[1]];\n    for (let i = start, j = end - 1; i < end; ++i) {\n        area += (points[i][i0] - points[j][i0]) * (points[i][i1] + points[j][i1]);\n        j = i;\n    }\n    return area / 2;\n}\n/**\n * Calls visitor callback for each segment in the polygon.\n * @param points Array of points that represent the polygon.\n * @param visitor A callback to call for each segment.\n * @param options Parameters of the polygon.\n */\nexport function forEachSegmentInPolygonPoints(points, visitor, options = {}) {\n    const { start = 0, end = points.length, isClosed } = options;\n    for (let i = start; i < end - 1; ++i) {\n        visitor(points[i], points[i + 1], i, i + 1);\n    }\n    const isClosedEx = isClosed || equals(points[end - 1], points[0]);\n    if (!isClosedEx) {\n        visitor(points[end - 1], points[0], end - 1, 0);\n    }\n}\n//# sourceMappingURL=polygon-utils.js.map","// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable no-undef, no-console */\nimport { isArray } from '@math.gl/core';\nimport { getPolygonSignedArea, forEachSegmentInPolygon, modifyPolygonWindingDirection, getPolygonSignedAreaPoints, forEachSegmentInPolygonPoints, modifyPolygonWindingDirectionPoints } from \"./polygon-utils.js\";\nexport class Polygon {\n    constructor(points, options = {}) {\n        this.points = points;\n        this.isFlatArray = !isArray(points[0]);\n        this.options = {\n            start: options.start || 0,\n            end: options.end || points.length,\n            size: options.size || 2,\n            isClosed: options.isClosed\n        };\n        Object.freeze(this);\n    }\n    /**\n     * Returns signed area of the polygon.\n     * @returns Signed area of the polygon.\n     */\n    getSignedArea() {\n        if (this.isFlatArray)\n            return getPolygonSignedArea(this.points, this.options);\n        return getPolygonSignedAreaPoints(this.points, this.options);\n    }\n    /**\n     * Returns absolute area of the polygon.\n     * @returns Absolute area of the polygon.\n     */\n    getArea() {\n        return Math.abs(this.getSignedArea());\n    }\n    /**\n     * Returns winding direction of the polygon.\n     * @returns Winding direction of the polygon. 1 is for clockwise, -1 for counterclockwise winding direction.\n     */\n    getWindingDirection() {\n        return Math.sign(this.getSignedArea());\n    }\n    /**\n     * Calls the visitor callback for each segment in the polygon.\n     * @param visitor A callback to call for each segment.\n     */\n    forEachSegment(visitor) {\n        if (this.isFlatArray) {\n            forEachSegmentInPolygon(this.points, \n            // eslint-disable-next-line max-params\n            (x1, y1, x2, y2, i1, i2) => {\n                // TODO @igorDykhta original visitor uses arrays for each point, but with flat arrays performance degrades if we allocate points for each segment\n                visitor([x1, y1], [x2, y2], i1, i2);\n            }, this.options);\n        }\n        else {\n            forEachSegmentInPolygonPoints(this.points, visitor, this.options);\n        }\n    }\n    /**\n     * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n     * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n     * @return Returns true if the winding direction was changed.\n     */\n    modifyWindingDirection(direction) {\n        if (this.isFlatArray) {\n            return modifyPolygonWindingDirection(this.points, direction, this.options);\n        }\n        return modifyPolygonWindingDirectionPoints(this.points, direction, this.options);\n    }\n}\n//# sourceMappingURL=polygon.js.map","// math.gl\n// SPDX-License-Identifier: MIT and ISC\n// Copyright (c) vis.gl contributors\nimport { getPolygonSignedArea, DimIndex } from \"./polygon-utils.js\";\n/**\n * Computes a triangulation of a polygon\n * @param positions a flat array of the vertex positions that define the polygon.\n * @param holeIndices an array of hole indices if any (e.g. [5, 8] for a 12-vertex input would mean one hole with vertices 5–7 and another with 8–11).\n * @param dim the number of elements in each vertex. Size `2` will interpret `positions` as `[x0, y0, x1, y1, ...]` and size `3` will interpret `positions` as `[x0, y0, z0, x1, y1, z1, ...]`. Default `2`.\n * @param areas areas of outer polygon and holes as computed by `getPolygonSignedArea()`. Can be optionally supplied to speed up triangulation\n * @returns array of indices into the `positions` array that describes the triangulation of the polygon\n * Adapted from https://github.com/mapbox/earcut\n */\nexport function earcut(positions, holeIndices, dim = 2, areas, plane = 'xy') {\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : positions.length;\n    let outerNode = linkedList(positions, 0, outerLen, dim, true, areas && areas[0], plane);\n    const triangles = [];\n    if (!outerNode || outerNode.next === outerNode.prev)\n        return triangles;\n    let invSize;\n    let maxX;\n    let maxY;\n    let minX;\n    let minY;\n    let x;\n    let y;\n    if (hasHoles)\n        outerNode = eliminateHoles(positions, holeIndices, outerNode, dim, areas, plane);\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (positions.length > 80 * dim) {\n        minX = maxX = positions[0];\n        minY = maxY = positions[1];\n        for (let i = dim; i < outerLen; i += dim) {\n            x = positions[i];\n            y = positions[i + 1];\n            if (x < minX)\n                minX = x;\n            if (y < minY)\n                minY = y;\n            if (x > maxX)\n                maxX = x;\n            if (y > maxY)\n                maxY = y;\n        }\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n    return triangles;\n}\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise, area, plane) {\n    let i;\n    let last;\n    if (area === undefined) {\n        area = getPolygonSignedArea(data, { start, end, size: dim, plane });\n    }\n    let i0 = DimIndex[plane[0]];\n    let i1 = DimIndex[plane[1]];\n    // Note that the signed area calculation in math.gl\n    // has the opposite sign to that which was originally\n    // present in earcut, thus the `< 0` is reversed\n    if (clockwise === area < 0) {\n        for (i = start; i < end; i += dim)\n            last = insertNode(i, data[i + i0], data[i + i1], last);\n    }\n    else {\n        for (i = end - dim; i >= start; i -= dim)\n            last = insertNode(i, data[i + i0], data[i + i1], last);\n    }\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n    return last;\n}\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start)\n        return start;\n    if (!end)\n        end = start;\n    let p = start;\n    let again;\n    do {\n        again = false;\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next)\n                break;\n            again = true;\n        }\n        else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n    return end;\n}\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear)\n        return;\n    // interlink polygon nodes in z-order\n    if (!pass && invSize)\n        indexCurve(ear, minX, minY, invSize);\n    let stop = ear;\n    let prev;\n    let next;\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push((prev.i / dim) | 0);\n            triangles.push((ear.i / dim) | 0);\n            triangles.push((next.i / dim) | 0);\n            removeNode(ear);\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n            continue;\n        }\n        ear = next;\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n                // if this didn't work, try curing all small self-intersections locally\n            }\n            else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n                // as a last resort, try splitting the remaining polygon into two\n            }\n            else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n            break;\n        }\n    }\n}\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    const a = ear.prev;\n    const b = ear;\n    const c = ear.next;\n    if (area(a, b, c) >= 0)\n        return false; // reflex, can't be an ear\n    // now make sure we don't have other points inside the potential ear\n    const ax = a.x;\n    const bx = b.x;\n    const cx = c.x;\n    const ay = a.y;\n    const by = b.y;\n    const cy = c.y;\n    // triangle bbox; min & max are calculated like this for speed\n    const x0 = ax < bx ? (ax < cx ? ax : cx) : bx < cx ? bx : cx;\n    const y0 = ay < by ? (ay < cy ? ay : cy) : by < cy ? by : cy;\n    const x1 = ax > bx ? (ax > cx ? ax : cx) : bx > cx ? bx : cx;\n    const y1 = ay > by ? (ay > cy ? ay : cy) : by > cy ? by : cy;\n    let p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.next;\n    }\n    return true;\n}\nfunction isEarHashed(ear, minX, minY, invSize) {\n    const a = ear.prev;\n    const b = ear;\n    const c = ear.next;\n    if (area(a, b, c) >= 0)\n        return false; // reflex, can't be an ear\n    const ax = a.x;\n    const bx = b.x;\n    const cx = c.x;\n    const ay = a.y;\n    const by = b.y;\n    const cy = c.y;\n    // triangle bbox; min & max are calculated like this for speed\n    const x0 = ax < bx ? (ax < cx ? ax : cx) : bx < cx ? bx : cx;\n    const y0 = ay < by ? (ay < cy ? ay : cy) : by < cy ? by : cy;\n    const x1 = ax > bx ? (ax > cx ? ax : cx) : bx > cx ? bx : cx;\n    const y1 = ay > by ? (ay > cy ? ay : cy) : by > cy ? by : cy;\n    // z-order range for the current triangle bbox;\n    const minZ = zOrder(x0, y0, minX, minY, invSize);\n    const maxZ = zOrder(x1, y1, minX, minY, invSize);\n    let p = ear.prevZ;\n    let n = ear.nextZ;\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            p !== a &&\n            p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.prevZ;\n        if (n.x >= x0 &&\n            n.x <= x1 &&\n            n.y >= y0 &&\n            n.y <= y1 &&\n            n !== a &&\n            n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0)\n            return false;\n        n = n.nextZ;\n    }\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            p !== a &&\n            p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.prevZ;\n    }\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 &&\n            n.x <= x1 &&\n            n.y >= y0 &&\n            n.y <= y1 &&\n            n !== a &&\n            n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0)\n            return false;\n        n = n.nextZ;\n    }\n    return true;\n}\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    let p = start;\n    do {\n        const a = p.prev;\n        const b = p.next.next;\n        if (!equals(a, b) &&\n            intersects(a, p, p.next, b) &&\n            locallyInside(a, b) &&\n            locallyInside(b, a)) {\n            triangles.push((a.i / dim) | 0);\n            triangles.push((p.i / dim) | 0);\n            triangles.push((b.i / dim) | 0);\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n    return filterPoints(p);\n}\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    let a = start;\n    do {\n        let b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                let c = splitPolygon(a, b);\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim, areas, plane) {\n    const queue = [];\n    let i;\n    let len;\n    let start;\n    let end;\n    let list;\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false, areas && areas[i + 1], plane);\n        if (list === list.next)\n            list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n    queue.sort(compareX);\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n    return outerNode;\n}\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    const bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n    const bridgeReverse = splitPolygon(bridge, hole);\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    let p = outerNode;\n    const hx = hole.x;\n    const hy = hole.y;\n    let qx = -Infinity;\n    let m;\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            const x = p.x + ((hy - p.y) * (p.next.x - p.x)) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx)\n                    return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n    if (!m)\n        return null;\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n    const stop = m;\n    const mx = m.x;\n    const my = m.y;\n    let tanMin = Infinity;\n    let tan;\n    p = m;\n    do {\n        if (hx >= p.x &&\n            p.x >= mx &&\n            hx !== p.x &&\n            pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n            if (locallyInside(p, hole) &&\n                (tan < tanMin ||\n                    (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n        p = p.next;\n    } while (p !== stop);\n    return m;\n}\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    let p = start;\n    do {\n        if (p.z === 0)\n            p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n    sortLinked(p);\n}\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    let e;\n    let i;\n    let inSize = 1;\n    let numMerges;\n    let p;\n    let pSize;\n    let q;\n    let qSize;\n    let tail;\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q)\n                    break;\n            }\n            qSize = inSize;\n            while (pSize > 0 || (qSize > 0 && q)) {\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                }\n                else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n                if (tail)\n                    tail.nextZ = e;\n                else\n                    list = e;\n                e.prevZ = tail;\n                tail = e;\n            }\n            p = q;\n        }\n        tail.nextZ = null;\n        inSize *= 2;\n    } while (numMerges > 1);\n    return list;\n}\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = ((x - minX) * invSize) | 0;\n    y = ((y - minY) * invSize) | 0;\n    x = (x | (x << 8)) & 0x00ff00ff;\n    x = (x | (x << 4)) & 0x0f0f0f0f;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n    y = (y | (y << 8)) & 0x00ff00ff;\n    y = (y | (y << 4)) & 0x0f0f0f0f;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n    return x | (y << 1);\n}\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    let p = start;\n    let leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y))\n            leftmost = p;\n        p = p.next;\n    } while (p !== start);\n    return leftmost;\n}\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return ((cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n        (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n        (bx - px) * (cy - py) >= (cx - px) * (by - py));\n}\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return (a.next.i !== b.i &&\n        a.prev.i !== b.i &&\n        !intersectsPolygon(a, b) && // dones't intersect other edges\n        ((locallyInside(a, b) &&\n            locallyInside(b, a) &&\n            middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b))) || // does not create opposite-facing sectors\n            (equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0))); // special zero-length case\n}\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    const o1 = sign(area(p1, q1, p2));\n    const o2 = sign(area(p1, q1, q2));\n    const o3 = sign(area(p2, q2, p1));\n    const o4 = sign(area(p2, q2, q1));\n    if (o1 !== o2 && o3 !== o4)\n        return true; // general case\n    if (o1 === 0 && onSegment(p1, p2, q1))\n        return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1))\n        return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2))\n        return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2))\n        return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n    return false;\n}\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return (q.x <= Math.max(p.x, r.x) &&\n        q.x >= Math.min(p.x, r.x) &&\n        q.y <= Math.max(p.y, r.y) &&\n        q.y >= Math.min(p.y, r.y));\n}\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    let p = a;\n    do {\n        if (p.i !== a.i &&\n            p.next.i !== a.i &&\n            p.i !== b.i &&\n            p.next.i !== b.i &&\n            intersects(p, p.next, a, b))\n            return true;\n        p = p.next;\n    } while (p !== a);\n    return false;\n}\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0\n        ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0\n        : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    let p = a;\n    let inside = false;\n    const px = (a.x + b.x) / 2;\n    const py = (a.y + b.y) / 2;\n    do {\n        if (p.y > py !== p.next.y > py &&\n            p.next.y !== p.y &&\n            px < ((p.next.x - p.x) * (py - p.y)) / (p.next.y - p.y) + p.x)\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n    return inside;\n}\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    const a2 = new Vertex(a.i, a.x, a.y);\n    const b2 = new Vertex(b.i, b.x, b.y);\n    const an = a.next;\n    const bp = b.prev;\n    a.next = b;\n    b.prev = a;\n    a2.next = an;\n    an.prev = a2;\n    b2.next = a2;\n    a2.prev = b2;\n    bp.next = b2;\n    b2.prev = bp;\n    return b2;\n}\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    const p = new Vertex(i, x, y);\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n    }\n    else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n    if (p.prevZ)\n        p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ)\n        p.nextZ.prevZ = p.prevZ;\n}\nclass Vertex {\n    constructor(i, x, y) {\n        // previous and next vertex nodes in a polygon ring\n        this.prev = null;\n        this.next = null;\n        // z-order curve value\n        this.z = 0;\n        // previous and next nodes in z-order\n        this.prevZ = null;\n        this.nextZ = null;\n        // indicates whether this is a steiner point\n        this.steiner = false;\n        this.i = i;\n        this.x = x;\n        this.y = y;\n    }\n}\n//# sourceMappingURL=earcut.js.map","/**\n * Strongly typed accessors for children, since arrow.Data.children[] is untyped\n */\n\nimport { Data } from \"apache-arrow\";\nimport { Vector } from \"apache-arrow\";\nimport { Float } from \"apache-arrow\";\nimport {\n  LineStringData,\n  MultiLineStringData,\n  MultiPointData,\n  MultiPolygonData,\n  PointData,\n  PolygonData,\n} from \"./data\";\nimport {\n  LineStringVector,\n  MultiLineStringVector,\n  MultiPointVector,\n  MultiPolygonVector,\n  PointVector,\n  PolygonVector,\n} from \"./vector\";\n\nexport function getPointChild(input: PointData): Data<Float>;\nexport function getPointChild(input: PointVector): Vector<Float>;\n\nexport function getPointChild(\n  input: PointData | PointVector,\n): Data<Float> | Vector<Float> {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as Data<Float>;\n}\n\nexport function getLineStringChild(input: LineStringData): PointData;\nexport function getLineStringChild(input: LineStringVector): PointVector;\n\nexport function getLineStringChild(\n  input: LineStringData | LineStringVector,\n): PointData | PointVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as PointData;\n}\n\nexport function getPolygonChild(input: PolygonData): LineStringData;\nexport function getPolygonChild(input: PolygonVector): LineStringVector;\n\nexport function getPolygonChild(\n  input: PolygonData | PolygonVector,\n): LineStringData | LineStringVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as LineStringData;\n}\n\nexport function getMultiPointChild(input: MultiPointData): PointData;\nexport function getMultiPointChild(input: MultiPointVector): PointVector;\n\nexport function getMultiPointChild(\n  input: MultiPointData | MultiPointVector,\n): PointData | PointVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as PointData;\n}\n\nexport function getMultiLineStringChild(\n  input: MultiLineStringData,\n): LineStringData;\nexport function getMultiLineStringChild(\n  input: MultiLineStringVector,\n): LineStringVector;\n\nexport function getMultiLineStringChild(\n  input: MultiLineStringData | MultiLineStringVector,\n): LineStringData | LineStringVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as LineStringData;\n}\n\nexport function getMultiPolygonChild(input: MultiPolygonData): PolygonData;\nexport function getMultiPolygonChild(input: MultiPolygonVector): PolygonVector;\n\nexport function getMultiPolygonChild(\n  input: MultiPolygonData | MultiPolygonVector,\n): PolygonData | PolygonVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as PolygonData;\n}\n","import { PolygonData } from \"../../data\";\nimport { Polygon } from \"@math.gl/polygon\";\nimport {\n  getLineStringChild,\n  getPointChild,\n  getPolygonChild,\n} from \"../../child\";\n\nexport function makeMathGlPolygon(\n  data: PolygonData,\n  geomIndex: number,\n): Polygon {\n  const geomOffsets = data.valueOffsets;\n  const ringsData = getPolygonChild(data);\n  const ringOffsets = ringsData.valueOffsets;\n\n  const pointData = getLineStringChild(ringsData);\n  const dim = pointData.type.listSize;\n  const flatCoordData = getPointChild(pointData);\n\n  const ringBegin = geomOffsets[geomIndex];\n  const ringEnd = geomOffsets[geomIndex + 1];\n\n  const coordsBegin = ringOffsets[ringBegin];\n  const coordsEnd = ringOffsets[ringEnd];\n\n  const slicedFlatCoords = flatCoordData.values.subarray(\n    coordsBegin * dim,\n    coordsEnd * dim,\n  );\n  return new Polygon(slicedFlatCoords, {\n    size: dim,\n    isClosed: true,\n  });\n}\n","import { earcut as _earcut } from \"@math.gl/polygon\";\nimport { PolygonData } from \"../data\";\nimport { PolygonVector } from \"../vector\";\nimport { getLineStringChild, getPointChild, getPolygonChild } from \"../child\";\n\n/**\n * Run earcut on polygon input\n */\nexport function earcut(input: PolygonData): Uint32Array;\nexport function earcut(input: PolygonVector): Uint32Array[];\n\nexport function earcut(\n  input: PolygonData | PolygonVector,\n): Uint32Array | Uint32Array[] {\n  if (\"data\" in input) {\n    return input.data.map((data) => earcut(data));\n  }\n\n  const trianglesResults: number[][] = [];\n  let outputSize = 0;\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    const triangles = earcutSinglePolygon(input, geomIndex);\n    trianglesResults.push(triangles);\n    outputSize += triangles.length;\n  }\n\n  const outputArray = new Uint32Array(outputSize);\n  let idx = 0;\n  for (const triangles of trianglesResults) {\n    for (const value of triangles) {\n      outputArray[idx] = value;\n      idx += 1;\n    }\n  }\n\n  return outputArray;\n}\n\nfunction earcutSinglePolygon(data: PolygonData, geomIndex: number): number[] {\n  const geomOffsets = data.valueOffsets;\n  const rings = getPolygonChild(data);\n  const ringOffsets = rings.valueOffsets;\n\n  const coords = getLineStringChild(rings);\n  const dim = coords.type.listSize;\n  const flatCoords = getPointChild(coords);\n\n  const ringBegin = geomOffsets[geomIndex];\n  const ringEnd = geomOffsets[geomIndex + 1];\n\n  const coordsBegin = ringOffsets[ringBegin];\n  const coordsEnd = ringOffsets[ringEnd];\n\n  const slicedFlatCoords = flatCoords.values.subarray(\n    coordsBegin * dim,\n    coordsEnd * dim,\n  );\n\n  const initialCoordIndex = ringOffsets[ringBegin];\n  const holeIndices = [];\n  for (let holeRingIdx = ringBegin + 1; holeRingIdx < ringEnd; holeRingIdx++) {\n    holeIndices.push(ringOffsets[holeRingIdx] - initialCoordIndex);\n  }\n  const triangles = _earcut(slicedFlatCoords, holeIndices, dim);\n\n  for (let i = 0; i < triangles.length; i++) {\n    triangles[i] += initialCoordIndex;\n  }\n\n  return triangles;\n}\n","import {\n  Binary,\n  Struct,\n  Float,\n  List,\n  FixedSizeList,\n  DataType,\n} from \"apache-arrow\";\n\n// Note: this apparently has to be arrow.Float and not arrow.Float64 to ensure\n// that recreating a data instance with arrow.makeData type checks using the\n// input's data type.\nexport type InterleavedCoord = FixedSizeList<Float>;\nexport type SeparatedCoord = Struct<{\n  x: Float;\n  y: Float;\n}>;\n// TODO: support separated coords\nexport type Coord = InterleavedCoord; // | SeparatedCoord;\nexport type Point = Coord;\nexport type LineString = List<Coord>;\nexport type Polygon = List<List<Coord>>;\nexport type MultiPoint = List<Coord>;\nexport type MultiLineString = List<List<Coord>>;\nexport type MultiPolygon = List<List<List<Coord>>>;\nexport type GeoArrowType =\n  | Point\n  | LineString\n  | Polygon\n  | MultiPoint\n  | MultiLineString\n  | MultiPolygon;\nexport type WKB = Binary;\n\n/** Check that the given type is a Point data type */\nexport function isPoint(type: DataType): type is Point {\n  if (DataType.isFixedSizeList(type)) {\n    // Check list size\n    if (![2, 3, 4].includes(type.listSize)) {\n      return false;\n    }\n\n    // Check child of FixedSizeList is floating type\n    if (!DataType.isFloat(type.children[0])) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (DataType.isStruct(type)) {\n    // Check number of children\n    if (![2, 3, 4].includes(type.children.length)) {\n      return false;\n    }\n\n    // Check that children have correct field names\n    if (\n      !type.children.every((field) => [\"x\", \"y\", \"z\", \"m\"].includes(field.name))\n    ) {\n      return false;\n    }\n\n    if (!type.children.every((field) => DataType.isFloat(field))) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nexport function isLineString(type: DataType): type is LineString {\n  // Check the outer type is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a point type\n  if (!isPoint(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isPolygon(type: DataType): type is Polygon {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a linestring vector\n  if (!isLineString(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isMultiPoint(type: DataType): type is MultiPoint {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a point vector\n  if (!isPoint(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isMultiLineString(type: DataType): type is MultiLineString {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a linestring vector\n  if (!isLineString(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isMultiPolygon(type: DataType): type is MultiPolygon {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a polygon vector\n  if (!isPolygon(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n","import { Data } from \"apache-arrow\";\nimport {\n  WKB,\n  Point,\n  LineString,\n  Polygon,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n  isPoint,\n  isLineString,\n  isPolygon,\n  isMultiPoint,\n  isMultiLineString,\n  isMultiPolygon,\n} from \"./type\";\n\nexport type PointData = Data<Point>;\nexport type LineStringData = Data<LineString>;\nexport type PolygonData = Data<Polygon>;\nexport type MultiPointData = Data<MultiPoint>;\nexport type MultiLineStringData = Data<MultiLineString>;\nexport type MultiPolygonData = Data<MultiPolygon>;\nexport type GeoArrowData =\n  | PointData\n  | LineStringData\n  | PolygonData\n  | MultiPointData\n  | MultiLineStringData\n  | MultiPolygonData;\nexport type WKBData = Data<WKB>;\n\nexport function isPointData(data: Data): data is PointData {\n  return isPoint(data.type);\n}\n\nexport function isLineStringData(data: Data): data is LineStringData {\n  return isLineString(data.type);\n}\n\nexport function isPolygonData(data: Data): data is PolygonData {\n  return isPolygon(data.type);\n}\n\nexport function isMultiPointData(data: Data): data is MultiPointData {\n  return isMultiPoint(data.type);\n}\n\nexport function isMultiLineStringData(data: Data): data is MultiLineStringData {\n  return isMultiLineString(data.type);\n}\n\nexport function isMultiPolygonData(data: Data): data is MultiPolygonData {\n  return isMultiPolygon(data.type);\n}\n","export function assert(condition: boolean, message?: string) {\n  if (!condition) {\n    throw new Error(`assertion failed ${message}`);\n  }\n}\n\nexport function assertFalse(message?: string): never {\n  throw new Error(`assertion failed ${message}`);\n}\n","import * as arrow from \"apache-arrow\";\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from \"../type\";\nimport {\n  GeoArrowData,\n  LineStringData,\n  MultiLineStringData,\n  MultiPointData,\n  MultiPolygonData,\n  PointData,\n  PolygonData,\n  isLineStringData,\n  isMultiLineStringData,\n  isMultiPointData,\n  isMultiPolygonData,\n  isPointData,\n  isPolygonData,\n} from \"../data\";\nimport {\n  getLineStringChild,\n  getMultiPolygonChild,\n  getPointChild,\n  getPolygonChild,\n} from \"../child\";\nimport { assert, assertFalse } from \"./utils/assert\";\n\n// For now, simplify our lives by focusing on 2D\ntype MapCoordsCallback = (x: number, y: number) => [number, number];\n\nexport function mapCoords(\n  input: PointData,\n  callback: MapCoordsCallback,\n): PointData;\nexport function mapCoords(\n  input: LineStringData,\n  callback: MapCoordsCallback,\n): LineStringData;\nexport function mapCoords(\n  input: PolygonData,\n  callback: MapCoordsCallback,\n): PolygonData;\nexport function mapCoords(\n  input: MultiPointData,\n  callback: MapCoordsCallback,\n): MultiPointData;\nexport function mapCoords(\n  input: MultiLineStringData,\n  callback: MapCoordsCallback,\n): MultiLineStringData;\nexport function mapCoords(\n  input: MultiPolygonData,\n  callback: MapCoordsCallback,\n): MultiPolygonData;\n\n// TODO: ideally I could use <T extends GeoArrowType> here...\nexport function mapCoords(\n  input: GeoArrowData,\n  callback: MapCoordsCallback,\n): GeoArrowData {\n  if (isPointData(input)) {\n    return mapCoords0(input, callback);\n  }\n  if (isLineStringData(input)) {\n    return mapCoords1(input, callback);\n  }\n  if (isPolygonData(input)) {\n    return mapCoords2(input, callback);\n  }\n  if (isMultiPointData(input)) {\n    return mapCoords1(input, callback);\n  }\n  if (isMultiLineStringData(input)) {\n    return mapCoords2(input, callback);\n  }\n  if (isMultiPolygonData(input)) {\n    return mapCoords3(input, callback);\n  }\n\n  assertFalse();\n}\n\nexport function mapCoords0<T extends Point>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  assert(input.type.listSize === 2, \"expected 2D\");\n  const coordsData = getPointChild(input);\n  const flatCoords = coordsData.values;\n\n  const outputCoords = new Float64Array(flatCoords.length);\n  for (let coordIdx = 0; coordIdx < input.length; coordIdx++) {\n    const x = flatCoords[coordIdx * 2];\n    const y = flatCoords[coordIdx * 2 + 1];\n    const [newX, newY] = callback(x, y);\n    outputCoords[coordIdx * 2] = newX;\n    outputCoords[coordIdx * 2 + 1] = newY;\n  }\n\n  const newCoordsData = arrow.makeData({\n    type: coordsData.type,\n    length: coordsData.length,\n    nullCount: coordsData.nullCount,\n    nullBitmap: coordsData.nullBitmap,\n    data: outputCoords,\n  });\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newCoordsData,\n  });\n}\n\n/**\n * NOTE: the callback must be infallible as this does not take geometry validity\n * into effect for operating on coords\n */\nexport function mapCoords1<T extends LineString | MultiPoint>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  const pointData = getLineStringChild(input);\n  const newPointData = mapCoords0(pointData, callback);\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newPointData,\n    valueOffsets: input.valueOffsets,\n  });\n}\n\n/**\n * NOTE: the callback must be infallible as this does not take geometry validity\n * into effect for operating on coords\n */\nexport function mapCoords2<T extends Polygon | MultiLineString>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  const linestringData = getPolygonChild(input);\n  const newLinestringData = mapCoords1(linestringData, callback);\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newLinestringData,\n    valueOffsets: input.valueOffsets,\n  });\n}\n\n/**\n * NOTE: the callback must be infallible as this does not take geometry validity\n * into effect for operating on coords\n */\nexport function mapCoords3<T extends MultiPolygon>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  const polygonData = getMultiPolygonChild(input);\n  const newPolygonData = mapCoords2(polygonData, callback);\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newPolygonData,\n    valueOffsets: input.valueOffsets,\n  });\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  'mm': {to_meter: 0.001},\n  'cm': {to_meter: 0.01},\n  'ft': {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937},\n  'fath': {to_meter: 1.8288},\n  'kmi': {to_meter: 1852},\n  'us-ch': {to_meter: 20.1168402336805},\n  'us-mi': {to_meter: 1609.34721869444},\n  'km': {to_meter: 1000},\n  'ind-ft': {to_meter: 0.30479841},\n  'ind-yd': {to_meter: 0.91439523},\n  'mi': {to_meter: 1609.344},\n  'yd': {to_meter: 0.9144},\n  'ch': {to_meter: 20.1168},\n  'link': {to_meter: 0.201168},\n  'dm': {to_meter: 0.01},\n  'in': {to_meter: 0.0254},\n  'ind-ch': {to_meter: 20.11669506},\n  'us-in': {to_meter: 0.025400050800101},\n  'us-yd': {to_meter: 0.914401828803658}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r: function(v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), \"+proj=utm +zone=\" + i + \" +datum=WGS84 +units=m\");\n    defs('EPSG:' + (32700 + i), \"+proj=utm +zone=\" + i + \" +south +datum=WGS84 +units=m\");\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var datums = {\n  wgs84: {\n    towgs84: \"0,0,0\",\n    ellipse: \"WGS84\",\n    datumName: \"WGS84\"\n  },\n  ch1903: {\n    towgs84: \"674.374,15.056,405.346\",\n    ellipse: \"bessel\",\n    datumName: \"swiss\"\n  },\n  ggrs87: {\n    towgs84: \"-199.87,74.79,246.62\",\n    ellipse: \"GRS80\",\n    datumName: \"Greek_Geodetic_Reference_System_1987\"\n  },\n  nad83: {\n    towgs84: \"0,0,0\",\n    ellipse: \"GRS80\",\n    datumName: \"North_American_Datum_1983\"\n  },\n  nad27: {\n    nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n    ellipse: \"clrk66\",\n    datumName: \"North_American_Datum_1927\"\n  },\n  potsdam: {\n    towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n    ellipse: \"bessel\",\n    datumName: \"Potsdam Rauenberg 1950 DHDN\"\n  },\n  carthage: {\n    towgs84: \"-263.0,6.0,431.0\",\n    ellipse: \"clark80\",\n    datumName: \"Carthage 1934 Tunisia\"\n  },\n  hermannskogel: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Hermannskogel\"\n  },\n  mgi: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Militar-Geographische Institut\",\n  },\n  osni52: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"airy\",\n    datumName: \"Irish National\"\n  },\n  ire65: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"mod_airy\",\n    datumName: \"Ireland 1965\"\n  },\n  rassadiran: {\n    towgs84: \"-133.63,-157.5,-158.62\",\n    ellipse: \"intl\",\n    datumName: \"Rassadiran\"\n  },\n  nzgd49: {\n    towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n    ellipse: \"intl\",\n    datumName: \"New Zealand Geodetic Datum 1949\"\n  },\n  osgb36: {\n    towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n    ellipse: \"airy\",\n    datumName: \"Ordnance Survey of Great Britain 1936\"\n  },\n  s_jtsk: {\n    towgs84: \"589,76,480\",\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n    ellipse: \"intl\",\n    datumName: \"Reseau National Belge 1972\"\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.slice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from \"../common/adjust_lon\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n  paramLatSq = paramLat * paramLat,\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat) /\n  (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n      NITER = 12,\n      paramLat = p.y,\n      paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n        break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)) /\n          Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"eqearth\", \"Equal Earth\", \"Equal_Earth\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lat from \"../common/adjust_lat\";\nimport adjust_lon from \"../common/adjust_lon\";\nimport hypot from \"../common/hypot\";\nimport pj_enfn from \"../common/pj_enfn\";\nimport pj_inv_mlfn from \"../common/pj_inv_mlfn\";\nimport pj_mlfn from \"../common/pj_mlfn\";\nimport { HALF_PI } from \"../constants/values\";\n\nvar EPS10 = 1e-10;\n\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    }\n    else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  }\n  else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = [\"bonne\", \"Bonne (Werner lat_1=90)\"];\nexport default {\n  init: init,\n  names: names\n};","/**\n * Enum holding GeoArrow extension type names\n */\nexport enum EXTENSION_NAME {\n  POINT = \"geoarrow.point\",\n  LINESTRING = \"geoarrow.linestring\",\n  POLYGON = \"geoarrow.polygon\",\n  MULTIPOINT = \"geoarrow.multipoint\",\n  MULTILINESTRING = \"geoarrow.multilinestring\",\n  MULTIPOLYGON = \"geoarrow.multipolygon\",\n}\n","import * as arrow from \"apache-arrow\";\nimport { PolygonData } from \"../data\";\nimport { PolygonVector } from \"../vector\";\nimport { makeMathGlPolygon } from \"./utils/polygon\";\nimport { WINDING as _WINDING } from \"@math.gl/polygon\";\n\nexport enum Winding {\n  CLOCKWISE = _WINDING.CLOCKWISE,\n  COUNTER_CLOCKWISE = _WINDING.COUNTER_CLOCKWISE,\n}\n\n/**\n * Compute the winding direction of the polygon input.\n *\n * The result is a boolean Data or Vector, where `true` means **Clockwise**\n * winding order and `false` means **Counter Clockwise** winding order.\n */\nexport function windingDirection(input: PolygonData): arrow.Data<arrow.Bool>;\nexport function windingDirection(\n  input: PolygonVector,\n): arrow.Vector<arrow.Bool>;\n\nexport function windingDirection(\n  input: PolygonData | PolygonVector,\n): arrow.Data<arrow.Bool> | arrow.Vector<arrow.Bool> {\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((polygonData) => windingDirection(polygonData)),\n    );\n  }\n\n  let builder = new arrow.BoolBuilder({\n    type: new arrow.Bool(),\n    nullValues: [null],\n  });\n  // Force-allocate once for length of buffer\n  builder.set(input.length - 1, null);\n\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    if (!input.getValid(geomIndex)) {\n      builder.setValid(geomIndex, false);\n      continue;\n    }\n\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    let winding = polygon.getWindingDirection();\n    builder.set(geomIndex, winding === Winding.CLOCKWISE);\n  }\n\n  return builder.finish().flush();\n}\n\n/**\n * **Mutate** the existing Polygon data or vector with the desired winding\n */\nexport function modifyWindingDirection(\n  input: PolygonData,\n  winding: Winding,\n): void;\nexport function modifyWindingDirection(\n  input: PolygonVector,\n  winding: Winding,\n): void;\n\nexport function modifyWindingDirection(\n  input: PolygonData | PolygonVector,\n  winding: Winding,\n): void {\n  if (\"data\" in input) {\n    input.data.forEach((polygonData) =>\n      modifyWindingDirection(polygonData, winding),\n    );\n    return;\n  }\n\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    // This polygon is a reference onto the PolygonData, so mutating it will\n    // mutate the PolygonData\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    polygon.modifyWindingDirection(winding);\n  }\n}\n","import * as arrow from \"apache-arrow\";\nimport proj4 from \"proj4\";\nimport { GeoArrowType } from \"../type\";\nimport { mapCoords } from \"./coords\";\n\n/**\n * Reproject using proj4\n */\nexport function reproject<T extends GeoArrowType>(\n  input: arrow.Data<T>,\n  fromProjection: string,\n  toProjection: string,\n): arrow.Data<T>;\nexport function reproject<T extends GeoArrowType>(\n  input: arrow.Vector<T>,\n  fromProjection: string,\n  toProjection: string,\n): arrow.Vector<T>;\n\nexport function reproject<T extends GeoArrowType>(\n  input: arrow.Data<T> | arrow.Vector<T>,\n  fromProjection: string,\n  toProjection: string,\n): arrow.Data<T> | arrow.Vector<T> {\n  const projectionFn = proj4(fromProjection, toProjection);\n  // Check if an arrow.Vector\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((data) => reprojectData(data, projectionFn)),\n    );\n  }\n\n  return reprojectData(input, projectionFn);\n}\n\n/**\n * Reproject a single Data instance\n */\nfunction reprojectData<T extends GeoArrowType>(\n  input: arrow.Data<T>,\n  projectionFn: proj4.Converter,\n): arrow.Data<T> {\n  // Avoid extra object creation\n  const stack = [0, 0];\n  const callback = (x: number, y: number) => {\n    stack[0] = x;\n    stack[1] = y;\n    return projectionFn.forward(stack) as [number, number];\n  };\n\n  // @ts-expect-error I have a mismatch between generic T extends GeoArrowType\n  // and concrete GeoArrowData typing\n  return mapCoords(input, callback);\n}\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}","import * as arrow from \"apache-arrow\";\nimport {\n  LineStringVector,\n  MultiPolygonVector,\n  PointVector,\n  PolygonVector,\n} from \"../vector.js\";\nimport { PointData } from \"../data.js\";\nimport {\n  getLineStringChild,\n  getMultiPolygonChild,\n  getPointChild,\n  getPolygonChild,\n} from \"../child.js\";\nimport { EXTENSION_NAME } from \"../constants.js\";\n\nclass Bbox {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n\n  constructor() {\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = -Infinity;\n    this.maxY = -Infinity;\n  }\n\n  updateBbox(other: Bbox) {\n    if (other.minX < this.minX) {\n      this.minX = other.minX;\n    }\n    if (other.minY < this.minY) {\n      this.minY = other.minY;\n    }\n    if (other.maxX > this.maxX) {\n      this.maxX = other.maxX;\n    }\n    if (other.maxY > this.maxY) {\n      this.maxY = other.maxY;\n    }\n  }\n\n  updateCoord(x: number, y: number) {\n    if (x < this.minX) {\n      this.minX = x;\n    }\n    if (y < this.minY) {\n      this.minY = y;\n    }\n    if (x > this.maxX) {\n      this.maxX = x;\n    }\n    if (y > this.maxY) {\n      this.maxY = y;\n    }\n  }\n}\n\nexport function totalBounds(vector: arrow.Vector, field: arrow.Field): Bbox {\n  switch (field.metadata.get(\"ARROW:extension:name\")) {\n    case EXTENSION_NAME.POINT:\n      return totalBoundsNest0(vector);\n    case EXTENSION_NAME.LINESTRING:\n    case EXTENSION_NAME.MULTIPOINT:\n      return totalBoundsNest1(vector);\n    case EXTENSION_NAME.POLYGON:\n    case EXTENSION_NAME.MULTILINESTRING:\n      return totalBoundsNest2(vector);\n    case EXTENSION_NAME.MULTIPOLYGON:\n      return totalBoundsNest3(vector);\n    default:\n      throw new Error(\"Unknown ext type name\");\n  }\n}\n\nfunction coordsBbox(data: PointData): Bbox {\n  const coordsData = getPointChild(data);\n  const flatCoords = coordsData.values;\n  const bbox = new Bbox();\n\n  for (let coordIdx = 0; coordIdx < data.length; coordIdx++) {\n    const x = flatCoords[coordIdx * 2];\n    const y = flatCoords[coordIdx * 2 + 1];\n    bbox.updateCoord(x, y);\n  }\n\n  return bbox;\n}\n\nfunction totalBoundsNest0(vector: PointVector): Bbox {\n  const bbox = new Bbox();\n  for (const data of vector.data) {\n    bbox.updateBbox(coordsBbox(data));\n  }\n\n  return bbox;\n}\n\nfunction totalBoundsNest1(vector: LineStringVector): Bbox {\n  const pointVector = getLineStringChild(vector);\n  return totalBoundsNest0(pointVector);\n}\n\nfunction totalBoundsNest2(vector: PolygonVector): Bbox {\n  const lineStringVector = getPolygonChild(vector);\n  return totalBoundsNest1(lineStringVector);\n}\n\nfunction totalBoundsNest3(vector: MultiPolygonVector): Bbox {\n  const polygonVector = getMultiPolygonChild(vector);\n  return totalBoundsNest2(polygonVector);\n}\n","import * as arrow from \"apache-arrow\";\nimport { PolygonData } from \"../data\";\nimport { PolygonVector } from \"../vector\";\nimport { makeMathGlPolygon } from \"./utils/polygon\";\n\n/**\n * Compute the unsigned area of the polygon input.\n */\nexport function area(input: PolygonData): arrow.Data<arrow.Float>;\nexport function area(input: PolygonVector): arrow.Vector<arrow.Float>;\n\nexport function area(\n  input: PolygonData | PolygonVector,\n): arrow.Data<arrow.Float> | arrow.Vector<arrow.Float> {\n  if (\"data\" in input) {\n    return new arrow.Vector(input.data.map((polygonData) => area(polygonData)));\n  }\n\n  const result = new Float64Array(input.length);\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    result[geomIndex] = polygon.getArea();\n  }\n\n  return arrow.makeData({\n    type: new arrow.Float(arrow.Precision.DOUBLE),\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    data: result,\n  });\n}\n\n/**\n * Compute the signed area of the polygon input.\n */\nexport function signedArea(input: PolygonData): arrow.Data<arrow.Float>;\nexport function signedArea(input: PolygonVector): arrow.Vector<arrow.Float>;\n\nexport function signedArea(\n  input: PolygonData | PolygonVector,\n): arrow.Data<arrow.Float> | arrow.Vector<arrow.Float> {\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((polygonData) => signedArea(polygonData)),\n    );\n  }\n\n  const result = new Float64Array(input.length);\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    result[geomIndex] = polygon.getSignedArea();\n  }\n\n  return arrow.makeData({\n    type: new arrow.Float(arrow.Precision.DOUBLE),\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    data: result,\n  });\n}\n","import * as arrow from \"apache-arrow\";\nimport {\n  LineStringVector,\n  MultiLineStringVector,\n  MultiPolygonVector,\n  PolygonVector,\n} from \"../vector\";\nimport {\n  LineStringData,\n  MultiLineStringData,\n  MultiPolygonData,\n  PolygonData,\n} from \"../data\";\nimport { getMultiPolygonChild, getPolygonChild } from \"../child\";\n\n/**\n * Get the exterior of a PolygonVector or PolygonData\n */\nexport function getPolygonExterior(input: PolygonVector): LineStringVector;\nexport function getPolygonExterior(input: PolygonData): LineStringData;\n\nexport function getPolygonExterior(\n  input: PolygonVector | PolygonData,\n): LineStringVector | LineStringData {\n  if (\"data\" in input) {\n    return new arrow.Vector(input.data.map((data) => getPolygonExterior(data)));\n  }\n\n  return getPolygonChild(input);\n}\n\n/**\n * Get the exterior of a MultiPolygonVector or MultiPolygonData\n */\nexport function getMultiPolygonExterior(\n  input: MultiPolygonVector,\n): MultiLineStringVector;\nexport function getMultiPolygonExterior(\n  input: MultiPolygonData,\n): MultiLineStringData;\n\nexport function getMultiPolygonExterior(\n  input: MultiPolygonVector | MultiPolygonData,\n): MultiLineStringVector | MultiLineStringData {\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((data) => getMultiPolygonExterior(data)),\n    );\n  }\n\n  return getMultiPolygonChild(input);\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var UnionMode;\n(function (UnionMode) {\n    UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n    UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n})(UnionMode || (UnionMode = {}));\n\n//# sourceMappingURL=union-mode.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var Precision;\n(function (Precision) {\n    Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n    Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n    Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n})(Precision || (Precision = {}));\n\n//# sourceMappingURL=precision.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var DateUnit;\n(function (DateUnit) {\n    DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n    DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n})(DateUnit || (DateUnit = {}));\n\n//# sourceMappingURL=date-unit.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n    TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n    TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n    TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n})(TimeUnit || (TimeUnit = {}));\n\n//# sourceMappingURL=time-unit.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var IntervalUnit;\n(function (IntervalUnit) {\n    IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n    IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n    IntervalUnit[IntervalUnit[\"MONTH_DAY_NANO\"] = 2] = \"MONTH_DAY_NANO\";\n})(IntervalUnit || (IntervalUnit = {}));\n\n//# sourceMappingURL=interval-unit.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport { MetadataVersion } from './fb/metadata-version.mjs';\nexport { UnionMode } from './fb/union-mode.mjs';\nexport { Precision } from './fb/precision.mjs';\nexport { DateUnit } from './fb/date-unit.mjs';\nexport { TimeUnit } from './fb/time-unit.mjs';\nexport { IntervalUnit } from './fb/interval-unit.mjs';\nexport { MessageHeader } from './fb/message-header.mjs';\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only non-negative enum values are written to an Arrow IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport var Type;\n(function (Type) {\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    Type[Type[\"Float\"] = 3] = \"Float\";\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    Type[Type[\"List\"] = 12] = \"List\";\n    Type[Type[\"Struct\"] = 13] = \"Struct\";\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    Type[Type[\"Duration\"] = 18] = \"Duration\";\n    Type[Type[\"LargeBinary\"] = 19] = \"LargeBinary\";\n    Type[Type[\"LargeUtf8\"] = 20] = \"LargeUtf8\";\n    Type[Type[\"Dictionary\"] = -1] = \"Dictionary\";\n    Type[Type[\"Int8\"] = -2] = \"Int8\";\n    Type[Type[\"Int16\"] = -3] = \"Int16\";\n    Type[Type[\"Int32\"] = -4] = \"Int32\";\n    Type[Type[\"Int64\"] = -5] = \"Int64\";\n    Type[Type[\"Uint8\"] = -6] = \"Uint8\";\n    Type[Type[\"Uint16\"] = -7] = \"Uint16\";\n    Type[Type[\"Uint32\"] = -8] = \"Uint32\";\n    Type[Type[\"Uint64\"] = -9] = \"Uint64\";\n    Type[Type[\"Float16\"] = -10] = \"Float16\";\n    Type[Type[\"Float32\"] = -11] = \"Float32\";\n    Type[Type[\"Float64\"] = -12] = \"Float64\";\n    Type[Type[\"DateDay\"] = -13] = \"DateDay\";\n    Type[Type[\"DateMillisecond\"] = -14] = \"DateMillisecond\";\n    Type[Type[\"TimestampSecond\"] = -15] = \"TimestampSecond\";\n    Type[Type[\"TimestampMillisecond\"] = -16] = \"TimestampMillisecond\";\n    Type[Type[\"TimestampMicrosecond\"] = -17] = \"TimestampMicrosecond\";\n    Type[Type[\"TimestampNanosecond\"] = -18] = \"TimestampNanosecond\";\n    Type[Type[\"TimeSecond\"] = -19] = \"TimeSecond\";\n    Type[Type[\"TimeMillisecond\"] = -20] = \"TimeMillisecond\";\n    Type[Type[\"TimeMicrosecond\"] = -21] = \"TimeMicrosecond\";\n    Type[Type[\"TimeNanosecond\"] = -22] = \"TimeNanosecond\";\n    Type[Type[\"DenseUnion\"] = -23] = \"DenseUnion\";\n    Type[Type[\"SparseUnion\"] = -24] = \"SparseUnion\";\n    Type[Type[\"IntervalDayTime\"] = -25] = \"IntervalDayTime\";\n    Type[Type[\"IntervalYearMonth\"] = -26] = \"IntervalYearMonth\";\n    Type[Type[\"DurationSecond\"] = -27] = \"DurationSecond\";\n    Type[Type[\"DurationMillisecond\"] = -28] = \"DurationMillisecond\";\n    Type[Type[\"DurationMicrosecond\"] = -29] = \"DurationMicrosecond\";\n    Type[Type[\"DurationNanosecond\"] = -30] = \"DurationNanosecond\";\n})(Type || (Type = {}));\nexport var BufferType;\n(function (BufferType) {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    BufferType[BufferType[\"OFFSET\"] = 0] = \"OFFSET\";\n    /**\n     * actual data, either fixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    BufferType[BufferType[\"DATA\"] = 1] = \"DATA\";\n    /**\n     * Bit vector indicating if each value is null\n     */\n    BufferType[BufferType[\"VALIDITY\"] = 2] = \"VALIDITY\";\n    /**\n     * Type vector used in Union type\n     */\n    BufferType[BufferType[\"TYPE\"] = 3] = \"TYPE\";\n})(BufferType || (BufferType = {}));\n\n//# sourceMappingURL=enum.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x;\nimport { bigIntToNumber } from './util/bigint.mjs';\nimport { Type, Precision, UnionMode, DateUnit, TimeUnit, IntervalUnit } from './enum.mjs';\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport class DataType {\n    /** @nocollapse */ static isNull(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Null; }\n    /** @nocollapse */ static isInt(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Int; }\n    /** @nocollapse */ static isFloat(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Float; }\n    /** @nocollapse */ static isBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Binary; }\n    /** @nocollapse */ static isLargeBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.LargeBinary; }\n    /** @nocollapse */ static isUtf8(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Utf8; }\n    /** @nocollapse */ static isLargeUtf8(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.LargeUtf8; }\n    /** @nocollapse */ static isBool(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Bool; }\n    /** @nocollapse */ static isDecimal(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Decimal; }\n    /** @nocollapse */ static isDate(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Date; }\n    /** @nocollapse */ static isTime(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Time; }\n    /** @nocollapse */ static isTimestamp(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Interval; }\n    /** @nocollapse */ static isDuration(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Duration; }\n    /** @nocollapse */ static isList(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.List; }\n    /** @nocollapse */ static isStruct(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Struct; }\n    /** @nocollapse */ static isUnion(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Map; }\n    /** @nocollapse */ static isDictionary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Dictionary; }\n    /** @nocollapse */ static isDenseUnion(x) { return DataType.isUnion(x) && x.mode === UnionMode.Dense; }\n    /** @nocollapse */ static isSparseUnion(x) { return DataType.isUnion(x) && x.mode === UnionMode.Sparse; }\n    constructor(typeId) {\n        this.typeId = typeId;\n    }\n}\n_a = Symbol.toStringTag;\nDataType[_a] = ((proto) => {\n    proto.children = null;\n    proto.ArrayType = Array;\n    proto.OffsetArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'DataType';\n})(DataType.prototype);\n/** @ignore */\nexport class Null extends DataType {\n    constructor() {\n        super(Type.Null);\n    }\n    toString() { return `Null`; }\n}\n_b = Symbol.toStringTag;\nNull[_b] = ((proto) => proto[Symbol.toStringTag] = 'Null')(Null.prototype);\n/** @ignore */\nclass Int_ extends DataType {\n    constructor(isSigned, bitWidth) {\n        super(Type.Int);\n        this.isSigned = isSigned;\n        this.bitWidth = bitWidth;\n    }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? BigInt64Array : BigUint64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n}\n_c = Symbol.toStringTag;\nInt_[_c] = ((proto) => {\n    proto.isSigned = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Int';\n})(Int_.prototype);\nexport { Int_ as Int };\n/** @ignore */\nexport class Int8 extends Int_ {\n    constructor() { super(true, 8); }\n    get ArrayType() { return Int8Array; }\n}\n/** @ignore */\nexport class Int16 extends Int_ {\n    constructor() { super(true, 16); }\n    get ArrayType() { return Int16Array; }\n}\n/** @ignore */\nexport class Int32 extends Int_ {\n    constructor() { super(true, 32); }\n    get ArrayType() { return Int32Array; }\n}\n/** @ignore */\nexport class Int64 extends Int_ {\n    constructor() { super(true, 64); }\n    get ArrayType() { return BigInt64Array; }\n}\n/** @ignore */\nexport class Uint8 extends Int_ {\n    constructor() { super(false, 8); }\n    get ArrayType() { return Uint8Array; }\n}\n/** @ignore */\nexport class Uint16 extends Int_ {\n    constructor() { super(false, 16); }\n    get ArrayType() { return Uint16Array; }\n}\n/** @ignore */\nexport class Uint32 extends Int_ {\n    constructor() { super(false, 32); }\n    get ArrayType() { return Uint32Array; }\n}\n/** @ignore */\nexport class Uint64 extends Int_ {\n    constructor() { super(false, 64); }\n    get ArrayType() { return BigUint64Array; }\n}\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: BigInt64Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: BigUint64Array });\n/** @ignore */\nexport class Float extends DataType {\n    constructor(precision) {\n        super(Type.Float);\n        this.precision = precision;\n    }\n    get ArrayType() {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `Float${(this.precision << 5) || 16}`; }\n}\n_d = Symbol.toStringTag;\nFloat[_d] = ((proto) => {\n    proto.precision = null;\n    return proto[Symbol.toStringTag] = 'Float';\n})(Float.prototype);\n/** @ignore */\nexport class Float16 extends Float {\n    constructor() { super(Precision.HALF); }\n}\n/** @ignore */\nexport class Float32 extends Float {\n    constructor() { super(Precision.SINGLE); }\n}\n/** @ignore */\nexport class Float64 extends Float {\n    constructor() { super(Precision.DOUBLE); }\n}\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n/** @ignore */\nexport class Binary extends DataType {\n    constructor() {\n        super(Type.Binary);\n    }\n    toString() { return `Binary`; }\n}\n_e = Symbol.toStringTag;\nBinary[_e] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Binary';\n})(Binary.prototype);\n/** @ignore */\nexport class LargeBinary extends DataType {\n    constructor() {\n        super(Type.LargeBinary);\n    }\n    toString() { return `LargeBinary`; }\n}\n_f = Symbol.toStringTag;\nLargeBinary[_f] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    proto.OffsetArrayType = BigInt64Array;\n    return proto[Symbol.toStringTag] = 'LargeBinary';\n})(LargeBinary.prototype);\n/** @ignore */\nexport class Utf8 extends DataType {\n    constructor() {\n        super(Type.Utf8);\n    }\n    toString() { return `Utf8`; }\n}\n_g = Symbol.toStringTag;\nUtf8[_g] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Utf8';\n})(Utf8.prototype);\n/** @ignore */\nexport class LargeUtf8 extends DataType {\n    constructor() {\n        super(Type.LargeUtf8);\n    }\n    toString() { return `LargeUtf8`; }\n}\n_h = Symbol.toStringTag;\nLargeUtf8[_h] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    proto.OffsetArrayType = BigInt64Array;\n    return proto[Symbol.toStringTag] = 'LargeUtf8';\n})(LargeUtf8.prototype);\n/** @ignore */\nexport class Bool extends DataType {\n    constructor() {\n        super(Type.Bool);\n    }\n    toString() { return `Bool`; }\n}\n_j = Symbol.toStringTag;\nBool[_j] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Bool';\n})(Bool.prototype);\n/** @ignore */\nexport class Decimal extends DataType {\n    constructor(scale, precision, bitWidth = 128) {\n        super(Type.Decimal);\n        this.scale = scale;\n        this.precision = precision;\n        this.bitWidth = bitWidth;\n    }\n    toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n}\n_k = Symbol.toStringTag;\nDecimal[_k] = ((proto) => {\n    proto.scale = null;\n    proto.precision = null;\n    proto.ArrayType = Uint32Array;\n    return proto[Symbol.toStringTag] = 'Decimal';\n})(Decimal.prototype);\n/** @ignore */\nexport class Date_ extends DataType {\n    constructor(unit) {\n        super(Type.Date);\n        this.unit = unit;\n    }\n    toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n}\n_l = Symbol.toStringTag;\nDate_[_l] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Date';\n})(Date_.prototype);\n/** @ignore */\nexport class DateDay extends Date_ {\n    constructor() { super(DateUnit.DAY); }\n}\n/** @ignore */\nexport class DateMillisecond extends Date_ {\n    constructor() { super(DateUnit.MILLISECOND); }\n}\n/** @ignore */\nclass Time_ extends DataType {\n    constructor(unit, bitWidth) {\n        super(Type.Time);\n        this.unit = unit;\n        this.bitWidth = bitWidth;\n    }\n    toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 32: return Int32Array;\n            case 64: return BigInt64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n}\n_m = Symbol.toStringTag;\nTime_[_m] = ((proto) => {\n    proto.unit = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Time';\n})(Time_.prototype);\nexport { Time_ as Time };\n/** @ignore */\nexport class TimeSecond extends Time_ {\n    constructor() { super(TimeUnit.SECOND, 32); }\n}\n/** @ignore */\nexport class TimeMillisecond extends Time_ {\n    constructor() { super(TimeUnit.MILLISECOND, 32); }\n}\n/** @ignore */\nexport class TimeMicrosecond extends Time_ {\n    constructor() { super(TimeUnit.MICROSECOND, 64); }\n}\n/** @ignore */\nexport class TimeNanosecond extends Time_ {\n    constructor() { super(TimeUnit.NANOSECOND, 64); }\n}\n/** @ignore */\nclass Timestamp_ extends DataType {\n    constructor(unit, timezone) {\n        super(Type.Timestamp);\n        this.unit = unit;\n        this.timezone = timezone;\n    }\n    toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n}\n_o = Symbol.toStringTag;\nTimestamp_[_o] = ((proto) => {\n    proto.unit = null;\n    proto.timezone = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Timestamp';\n})(Timestamp_.prototype);\nexport { Timestamp_ as Timestamp };\n/** @ignore */\nexport class TimestampSecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.SECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MILLISECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MICROSECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.NANOSECOND, timezone); }\n}\n/** @ignore */\nclass Interval_ extends DataType {\n    constructor(unit) {\n        super(Type.Interval);\n        this.unit = unit;\n    }\n    toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n}\n_p = Symbol.toStringTag;\nInterval_[_p] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Interval';\n})(Interval_.prototype);\nexport { Interval_ as Interval };\n/** @ignore */\nexport class IntervalDayTime extends Interval_ {\n    constructor() { super(IntervalUnit.DAY_TIME); }\n}\n/** @ignore */\nexport class IntervalYearMonth extends Interval_ {\n    constructor() { super(IntervalUnit.YEAR_MONTH); }\n}\n/** @ignore */\nexport class Duration extends DataType {\n    constructor(unit) {\n        super(Type.Duration);\n        this.unit = unit;\n    }\n    toString() { return `Duration<${TimeUnit[this.unit]}>`; }\n}\n_q = Symbol.toStringTag;\nDuration[_q] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = BigInt64Array;\n    return proto[Symbol.toStringTag] = 'Duration';\n})(Duration.prototype);\n/** @ignore */\nexport class DurationSecond extends Duration {\n    constructor() { super(TimeUnit.SECOND); }\n}\n/** @ignore */\nexport class DurationMillisecond extends Duration {\n    constructor() { super(TimeUnit.MILLISECOND); }\n}\n/** @ignore */\nexport class DurationMicrosecond extends Duration {\n    constructor() { super(TimeUnit.MICROSECOND); }\n}\n/** @ignore */\nexport class DurationNanosecond extends Duration {\n    constructor() { super(TimeUnit.NANOSECOND); }\n}\n/** @ignore */\nexport class List extends DataType {\n    constructor(child) {\n        super(Type.List);\n        this.children = [child];\n    }\n    toString() { return `List<${this.valueType}>`; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n}\n_r = Symbol.toStringTag;\nList[_r] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'List';\n})(List.prototype);\n/** @ignore */\nexport class Struct extends DataType {\n    constructor(children) {\n        super(Type.Struct);\n        this.children = children;\n    }\n    toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\n_s = Symbol.toStringTag;\nStruct[_s] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'Struct';\n})(Struct.prototype);\n/** @ignore */\nclass Union_ extends DataType {\n    constructor(mode, typeIds, children) {\n        super(Type.Union);\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex, Object.create(null));\n    }\n    toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)}>`;\n    }\n}\n_t = Symbol.toStringTag;\nUnion_[_t] = ((proto) => {\n    proto.mode = null;\n    proto.typeIds = null;\n    proto.children = null;\n    proto.typeIdToChildIndex = null;\n    proto.ArrayType = Int8Array;\n    return proto[Symbol.toStringTag] = 'Union';\n})(Union_.prototype);\nexport { Union_ as Union };\n/** @ignore */\nexport class DenseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n/** @ignore */\nexport class SparseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n/** @ignore */\nexport class FixedSizeBinary extends DataType {\n    constructor(byteWidth) {\n        super(Type.FixedSizeBinary);\n        this.byteWidth = byteWidth;\n    }\n    toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n}\n_u = Symbol.toStringTag;\nFixedSizeBinary[_u] = ((proto) => {\n    proto.byteWidth = null;\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n})(FixedSizeBinary.prototype);\n/** @ignore */\nexport class FixedSizeList extends DataType {\n    constructor(listSize, child) {\n        super(Type.FixedSizeList);\n        this.listSize = listSize;\n        this.children = [child];\n    }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n    toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n}\n_v = Symbol.toStringTag;\nFixedSizeList[_v] = ((proto) => {\n    proto.children = null;\n    proto.listSize = null;\n    return proto[Symbol.toStringTag] = 'FixedSizeList';\n})(FixedSizeList.prototype);\n/** @ignore */\nexport class Map_ extends DataType {\n    constructor(entries, keysSorted = false) {\n        var _y, _z, _0;\n        super(Type.Map);\n        this.children = [entries];\n        this.keysSorted = keysSorted;\n        // ARROW-8716\n        // https://github.com/apache/arrow/issues/17168\n        if (entries) {\n            entries['name'] = 'entries';\n            if ((_y = entries === null || entries === void 0 ? void 0 : entries.type) === null || _y === void 0 ? void 0 : _y.children) {\n                const key = (_z = entries === null || entries === void 0 ? void 0 : entries.type) === null || _z === void 0 ? void 0 : _z.children[0];\n                if (key) {\n                    key['name'] = 'key';\n                }\n                const val = (_0 = entries === null || entries === void 0 ? void 0 : entries.type) === null || _0 === void 0 ? void 0 : _0.children[1];\n                if (val) {\n                    val['name'] = 'value';\n                }\n            }\n        }\n    }\n    get keyType() { return this.children[0].type.children[0].type; }\n    get valueType() { return this.children[0].type.children[1].type; }\n    get childType() { return this.children[0].type; }\n    toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\n_w = Symbol.toStringTag;\nMap_[_w] = ((proto) => {\n    proto.children = null;\n    proto.keysSorted = null;\n    return proto[Symbol.toStringTag] = 'Map_';\n})(Map_.prototype);\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n/** @ignore */\nexport class Dictionary extends DataType {\n    constructor(dictionary, indices, id, isOrdered) {\n        super(Type.Dictionary);\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : bigIntToNumber(id);\n    }\n    get children() { return this.dictionary.children; }\n    get valueType() { return this.dictionary; }\n    get ArrayType() { return this.dictionary.ArrayType; }\n    toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n}\n_x = Symbol.toStringTag;\nDictionary[_x] = ((proto) => {\n    proto.id = null;\n    proto.indices = null;\n    proto.isOrdered = null;\n    proto.dictionary = null;\n    return proto[Symbol.toStringTag] = 'Dictionary';\n})(Dictionary.prototype);\n/** @ignore */\nexport function strideForType(type) {\n    const t = type;\n    switch (type.typeId) {\n        case Type.Decimal: return type.bitWidth / 32;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + t.unit;\n        case Type.Interval: return 1 + t.unit;\n        // case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        // case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return t.listSize;\n        case Type.FixedSizeBinary: return t.byteWidth;\n        default: return 1;\n    }\n}\n\n//# sourceMappingURL=type.mjs.map\n","import { Vector } from \"apache-arrow\";\nimport {\n  Point,\n  LineString,\n  Polygon,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n  isPoint,\n  isLineString,\n  isPolygon,\n  isMultiPoint,\n  isMultiLineString,\n  isMultiPolygon,\n} from \"./type\";\n\nexport type PointVector = Vector<Point>;\nexport type LineStringVector = Vector<LineString>;\nexport type PolygonVector = Vector<Polygon>;\nexport type MultiPointVector = Vector<MultiPoint>;\nexport type MultiLineStringVector = Vector<MultiLineString>;\nexport type MultiPolygonVector = Vector<MultiPolygon>;\nexport type GeoArrowVector =\n  | PointVector\n  | LineStringVector\n  | PolygonVector\n  | MultiPointVector\n  | MultiLineStringVector\n  | MultiPolygonVector;\n\nexport function isPointVector(vector: Vector): vector is PointVector {\n  return isPoint(vector.type);\n}\n\nexport function isLineStringVector(vector: Vector): vector is LineStringVector {\n  return isLineString(vector.type);\n}\n\nexport function isPolygonVector(vector: Vector): vector is PolygonVector {\n  return isPolygon(vector.type);\n}\n\nexport function isMultiPointVector(vector: Vector): vector is MultiPointVector {\n  return isMultiPoint(vector.type);\n}\n\nexport function isMultiLineStringVector(\n  vector: Vector,\n): vector is MultiLineStringVector {\n  return isMultiLineString(vector.type);\n}\n\nexport function isMultiPolygonVector(\n  vector: Vector,\n): vector is MultiPolygonVector {\n  return isMultiPolygon(vector.type);\n}\n","import { Data } from \"apache-arrow\";\nimport { DataType } from \"apache-arrow\";\nimport { Vector } from \"apache-arrow\";\nimport { BufferType } from \"apache-arrow\";\nimport type { Buffers } from \"apache-arrow/data\";\n\ntype TypedArray =\n  | Uint8Array\n  | Uint8ClampedArray\n  | Uint16Array\n  | Uint32Array\n  | Int8Array\n  | Int16Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n\n/**\n * Clone an Arrow JS Data or Vector, detaching from an existing ArrayBuffer if\n * it is shared with other.\n *\n * The purpose of this function is to enable transferring a `Data` instance,\n * e.g. to a web worker, without neutering any other data.\n *\n * Any internal buffers that are a slice of a larger `ArrayBuffer` (i.e. where\n * the typed array's `byteOffset` is not `0` and where its `byteLength` does not\n * match its `array.buffer.byteLength`) are copied into new `ArrayBuffers`.\n *\n * If `force` is `true`, always clone internal buffers, even if not shared. If\n * the default, `false`, any internal buffers that are **not** a slice of a\n * larger `ArrayBuffer` will not be copied.\n */\nexport function hardClone<T extends DataType>(\n  input: Data<T>,\n  force?: boolean,\n): Data<T>;\nexport function hardClone<T extends DataType>(\n  input: Vector<T>,\n  force?: boolean,\n): Vector<T>;\n\nexport function hardClone<T extends DataType>(\n  data: Data<T> | Vector<T>,\n  force: boolean = false,\n): Data<T> | Vector<T> {\n  // Check if `data` is an arrow.Vector\n  if (\"data\" in data) {\n    return new Vector(data.data.map((data) => hardClone(data, force)));\n  }\n\n  // Clone each of the children, recursively\n  const clonedChildren: Data[] = [];\n  for (const childData of data.children) {\n    clonedChildren.push(hardClone(childData, force));\n  }\n\n  // Clone the dictionary if there is one\n  let clonedDictionary: Vector | undefined = undefined;\n  if (data.dictionary !== undefined) {\n    clonedDictionary = hardClone(data.dictionary, force);\n  }\n\n  // Buffers can have up to four entries. Each of these can be `undefined` for\n  // one or more array types.\n  //\n  // - OFFSET: value offsets for variable size list types\n  // - DATA: the underlying data\n  // - VALIDITY: the null buffer. This may be empty or undefined if all elements\n  //   are non-null/valid.\n  // - TYPE: type ids for a union type.\n  const clonedBuffers: Buffers<T> = {\n    [BufferType.OFFSET]: cloneBuffer(data.buffers[BufferType.OFFSET], force),\n    [BufferType.DATA]: cloneBuffer(data.buffers[BufferType.DATA], force),\n    [BufferType.VALIDITY]: cloneBuffer(\n      data.buffers[BufferType.VALIDITY],\n      force,\n    ),\n    [BufferType.TYPE]: cloneBuffer(data.buffers[BufferType.TYPE], force),\n  };\n\n  // Note: the data.offset is passed on so that a sliced Data instance will not\n  // be \"un-sliced\". However keep in mind that this means we're cloning the\n  // _original backing buffer_, not only the portion of the Data that was\n  // sliced.\n  return new Data(\n    data.type,\n    data.offset,\n    data.length,\n    // @ts-expect-error _nullCount is protected. We're using it here to mimic\n    // `Data.clone`\n    data._nullCount,\n    clonedBuffers,\n    clonedChildren,\n    clonedDictionary,\n  );\n}\n\n/**\n * Test whether an Data instance is a slice of a larger `ArrayBuffer`.\n */\nexport function isShared<T extends DataType>(\n  data: Data<T> | Vector<T>,\n): boolean {\n  // Loop over arrow.Vector\n  if (\"data\" in data) {\n    return data.data.some((data) => isShared(data));\n  }\n\n  // Check child data\n  for (const childData of data.children) {\n    if (isShared(childData)) {\n      return true;\n    }\n  }\n\n  // Check dictionary\n  if (data.dictionary !== undefined) {\n    if (isShared(data.dictionary)) {\n      return true;\n    }\n  }\n\n  const bufferTypes = [\n    BufferType.OFFSET,\n    BufferType.DATA,\n    BufferType.VALIDITY,\n    BufferType.TYPE,\n  ];\n  for (const bufferType of bufferTypes) {\n    if (\n      data.buffers[bufferType] !== undefined &&\n      isTypedArraySliced(data.buffers[bufferType])\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the current typed array is a partial slice on a larger\n * ArrayBuffer\n */\nfunction isTypedArraySliced(arr: TypedArray): boolean {\n  return !(arr.byteOffset === 0 && arr.byteLength === arr.buffer.byteLength);\n}\n\n/**\n * If a slice of a larger ArrayBuffer, clone to a fresh `ArrayBuffer`.\n *\n * If `force` is `true`, always clone the array, even if not shared.\n */\nfunction cloneBuffer<A extends TypedArray | undefined>(\n  arr: A,\n  force: boolean,\n): A {\n  // Not all buffer types are defined for every type of Arrow array. E.g.\n  // `arrow.BufferType.TYPE` is only defined for the Union type.\n  if (arr === undefined) {\n    return arr;\n  }\n\n  // The current array is not a part of a larger ArrayBuffer, don't clone it\n  if (!force && !isTypedArraySliced(arr)) {\n    return arr;\n  }\n\n  // Note: TypedArray.slice() **copies** into a new ArrayBuffer\n\n  // @ts-expect-error 'Uint8Array' is assignable to the constraint of type 'A',\n  // but 'A' could be instantiated with a different subtype of constraint\n  // 'TypedArray'\n  // We know from arr.slice that it will always return the same\n  return arr.slice();\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/**\n * Converts an integer as a number or bigint to a number, throwing an error if the input cannot safely be represented as a number.\n */\nexport function bigIntToNumber(number) {\n    if (typeof number === 'bigint' && (number < Number.MIN_SAFE_INTEGER || number > Number.MAX_SAFE_INTEGER)) {\n        throw new TypeError(`${number} is not safe to convert to a number.`);\n    }\n    return Number(number);\n}\n\n//# sourceMappingURL=bigint.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport function getBool(_data, _index, byte, bit) {\n    return (byte & 1 << bit) !== 0;\n}\n/** @ignore */\nexport function getBit(_data, _index, byte, bit) {\n    return (byte & 1 << bit) >> bit;\n}\n/** @ignore */\nexport function setBool(bytes, index, value) {\n    return value ?\n        !!(bytes[index >> 3] |= (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false;\n}\n/** @ignore */\nexport function truncateBitmap(offset, length, bitmap) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(new BitIterator(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n/** @ignore */\nexport function packBools(values) {\n    const xs = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) {\n        xs[i++] = byte;\n    }\n    const b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n/** @ignore */\nexport class BitIterator {\n    constructor(bytes, begin, length, context, get) {\n        this.bytes = bytes;\n        this.length = length;\n        this.context = context;\n        this.get = get;\n        this.bit = begin % 8;\n        this.byteIndex = begin >> 3;\n        this.byte = bytes[this.byteIndex++];\n        this.index = 0;\n    }\n    next() {\n        if (this.index < this.length) {\n            if (this.bit === 8) {\n                this.bit = 0;\n                this.byte = this.bytes[this.byteIndex++];\n            }\n            return {\n                value: this.get(this.context, this.index++, this.byte, this.bit++)\n            };\n        }\n        return { done: true, value: null };\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data, lhs, rhs) {\n    if (rhs - lhs <= 0) {\n        return 0;\n    }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of new BitIterator(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n    // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n    popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3));\n}\n/** @ignore */\nexport function popcnt_array(arr, byteOffset, byteLength) {\n    let cnt = 0, pos = Math.trunc(byteOffset);\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len = byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n/** @ignore */\nexport function popcnt_uint32(uint32) {\n    let i = Math.trunc(uint32);\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n\n//# sourceMappingURL=bit.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from './vector.mjs';\nimport { BufferType, Type, UnionMode } from './enum.mjs';\nimport { DataType, strideForType } from './type.mjs';\nimport { popcnt_bit_range, truncateBitmap } from './util/bit.mjs';\n/** @ignore */ export const kUnknownNullCount = -1;\n/**\n * Data structure underlying {@link Vector}s. Use the convenience method {@link makeData}.\n */\nexport class Data {\n    get typeId() { return this.type.typeId; }\n    get ArrayType() { return this.type.ArrayType; }\n    get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];\n    }\n    get nullable() {\n        if (this._nullCount !== 0) {\n            const { type } = this;\n            if (DataType.isSparseUnion(type)) {\n                return this.children.some((child) => child.nullable);\n            }\n            else if (DataType.isDenseUnion(type)) {\n                return this.children.some((child) => child.nullable);\n            }\n            return this.nullBitmap && this.nullBitmap.byteLength > 0;\n        }\n        return true;\n    }\n    get byteLength() {\n        let byteLength = 0;\n        const { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values && (byteLength += values.byteLength);\n        nullBitmap && (byteLength += nullBitmap.byteLength);\n        typeIds && (byteLength += typeIds.byteLength);\n        return this.children.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n    get nullCount() {\n        if (DataType.isUnion(this.type)) {\n            return this.children.reduce((nullCount, child) => nullCount + child.nullCount, 0);\n        }\n        let nullCount = this._nullCount;\n        let nullBitmap;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n    constructor(type, offset, length, nullCount, buffers, children = [], dictionary) {\n        this.type = type;\n        this.children = children;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        let buffer;\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        }\n        else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = buffers[0]) && (this.valueOffsets = buffer);\n                (buffer = buffers[1]) && (this.values = buffer);\n                (buffer = buffers[2]) && (this.nullBitmap = buffer);\n                (buffer = buffers[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n    getValid(index) {\n        const { type } = this;\n        if (DataType.isUnion(type)) {\n            const union = type;\n            const child = this.children[union.typeIdToChildIndex[this.typeIds[index]]];\n            const indexInChild = union.mode === UnionMode.Dense ? this.valueOffsets[index] : index;\n            return child.getValid(indexInChild);\n        }\n        if (this.nullable && this.nullCount > 0) {\n            const pos = this.offset + index;\n            const val = this.nullBitmap[pos >> 3];\n            return (val & (1 << (pos % 8))) !== 0;\n        }\n        return true;\n    }\n    setValid(index, value) {\n        let prev;\n        const { type } = this;\n        if (DataType.isUnion(type)) {\n            const union = type;\n            const child = this.children[union.typeIdToChildIndex[this.typeIds[index]]];\n            const indexInChild = union.mode === UnionMode.Dense ? this.valueOffsets[index] : index;\n            prev = child.getValid(indexInChild);\n            child.setValid(indexInChild, value);\n        }\n        else {\n            let { nullBitmap } = this;\n            const { offset, length } = this;\n            const idx = offset + index;\n            const mask = 1 << (idx % 8);\n            const byteOffset = idx >> 3;\n            // If no null bitmap, initialize one on the fly\n            if (!nullBitmap || nullBitmap.byteLength <= byteOffset) {\n                nullBitmap = new Uint8Array((((offset + length) + 63) & ~63) >> 3).fill(255);\n                // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n                if (this.nullCount > 0) {\n                    nullBitmap.set(truncateBitmap(offset, length, this.nullBitmap), 0);\n                }\n                Object.assign(this, { nullBitmap, _nullCount: -1 });\n            }\n            const byte = nullBitmap[byteOffset];\n            prev = (byte & mask) !== 0;\n            value ?\n                (nullBitmap[byteOffset] = byte | mask) :\n                (nullBitmap[byteOffset] = byte & ~mask);\n        }\n        if (prev !== !!value) {\n            // Update `_nullCount` if the new value is different from the old value.\n            this._nullCount = this.nullCount + (value ? -1 : 1);\n        }\n        return value;\n    }\n    clone(type = this.type, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers = this, children = this.children) {\n        return new Data(type, offset, length, nullCount, buffers, children, this.dictionary);\n    }\n    slice(offset, length) {\n        const { stride, typeId, children } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone(this.type, this.offset + offset, length, nullCount, buffers, \n        // Don't slice children if we have value offsets (the variable-width types)\n        (children.length === 0 || this.valueOffsets) ? children : this._sliceChildren(children, childStride * offset, childStride * length));\n    }\n    _changeLengthAndBackfillNullBitmap(newLength) {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n    _sliceBuffers(offset, length, stride, typeId) {\n        let arr;\n        const { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n            // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n            (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n    _sliceChildren(children, offset, length) {\n        return children.map((child) => child.slice(offset, length));\n    }\n}\nData.prototype.children = Object.freeze([]);\nimport { Visitor } from './visitor.mjs';\nimport { toArrayBufferView, toBigInt64Array, toInt32Array, toUint8Array } from './util/buffer.mjs';\nclass MakeDataVisitor extends Visitor {\n    visit(props) {\n        return this.getVisitFn(props['type']).call(this, props);\n    }\n    visitNull(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['length']: length = 0, } = props;\n        return new Data(type, offset, length, length);\n    }\n    visitBool(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length >> 3, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitInt(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitFloat(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitUtf8(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitLargeUtf8(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toBigInt64Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitBinary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitLargeBinary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toBigInt64Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitFixedSizeBinary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitDate(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitTimestamp(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitTime(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitDecimal(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitList(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap], [child]);\n    }\n    visitStruct(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['children']: children = [] } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const { length = children.reduce((len, { length }) => Math.max(len, length), 0), nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap], children);\n    }\n    visitUnion(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['children']: children = [] } = props;\n        const typeIds = toArrayBufferView(type.ArrayType, props['typeIds']);\n        const { ['length']: length = typeIds.length, ['nullCount']: nullCount = -1, } = props;\n        if (DataType.isSparseUnion(type)) {\n            return new Data(type, offset, length, nullCount, [undefined, undefined, undefined, typeIds], children);\n        }\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, undefined, typeIds], children);\n    }\n    visitDictionary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.indices.ArrayType, props['data']);\n        const { ['dictionary']: dictionary = new Vector([new MakeDataVisitor().visit({ type: type.dictionary })]) } = props;\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap], [], dictionary);\n    }\n    visitInterval(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitDuration(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitFixedSizeList(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child = new MakeDataVisitor().visit({ type: type.valueType }) } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const { ['length']: length = child.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap], [child]);\n    }\n    visitMap(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child = new MakeDataVisitor().visit({ type: type.childType }) } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap], [child]);\n    }\n}\nconst makeDataVisitor = new MakeDataVisitor();\nexport function makeData(props) {\n    return makeDataVisitor.visit(props);\n}\n\n//# sourceMappingURL=data.mjs.map\n","import {\n  DataType,\n  Null,\n  Int,\n  Float,\n  Binary,\n  Utf8,\n  Bool,\n  Decimal,\n  Date_,\n  Time,\n  Timestamp,\n  Interval,\n  List,\n  Struct,\n  Union,\n  FixedSizeBinary,\n  FixedSizeList,\n  Map_,\n  Duration,\n} from \"apache-arrow/type\";\nimport { BufferType, Type } from \"apache-arrow\";\nimport { Data } from \"apache-arrow/data\";\nimport { Vector } from \"apache-arrow\";\nimport { Field } from \"apache-arrow\";\nimport type { Buffers } from \"apache-arrow/data\";\nimport { Polygon, isPolygon } from \"../type\";\nimport { PolygonData } from \"../data\";\n\n// Typedefs that include only the information kept from a structuredClone\ntype PostMessageDataType = Pick<DataType, \"children\" | \"typeId\">;\ntype PostMessageField = Pick<Field, \"name\" | \"nullable\" | \"metadata\"> & {\n  type: PostMessageDataType;\n};\ntype PostMessageData<T extends DataType> = Pick<\n  Data<T>,\n  | \"type\"\n  | \"length\"\n  | \"offset\"\n  | \"stride\"\n  | \"children\"\n  | \"dictionary\"\n  | \"values\"\n  | \"typeIds\"\n  | \"nullBitmap\"\n  | \"valueOffsets\"\n> & {\n  type: PostMessageDataType;\n};\ntype PostMessageVector<T extends DataType> = Pick<\n  Vector,\n  \"data\" | \"length\" | \"stride\" | \"numChildren\"\n> & { type: PostMessageDataType };\n\nfunction rehydrateType<T extends Type>(type: PostMessageDataType): DataType<T> {\n  switch (type.typeId) {\n    case Type.Null:\n      return new Null() as DataType<T>;\n    case Type.Int:\n      // @ts-expect-error\n      return new Int(type.isSigned, type.bitWidth);\n    case Type.Float:\n      // @ts-expect-error\n      return new Float(type.precision);\n    case Type.Binary:\n      // @ts-expect-error\n      return new Binary();\n    case Type.Utf8:\n      // @ts-expect-error\n      return new Utf8();\n    case Type.Bool:\n      // @ts-expect-error\n      return new Bool();\n    case Type.Decimal:\n      // @ts-expect-error\n      return new Decimal(type.scale, type.precision, type.bitWidth);\n    case Type.Date:\n      // @ts-expect-error\n      return new Date_(type.unit);\n    // return new Date\n    case Type.Time:\n      // @ts-expect-error\n      return new Time(type.unit, type.bitWidth);\n    case Type.Timestamp:\n      // @ts-expect-error\n      return new Timestamp(type.unit, type.timezone);\n    case Type.Interval:\n      // @ts-expect-error\n      return new Interval(type.unit);\n    case Type.List: {\n      const children = type.children.map(rehydrateField);\n      if (children.length > 1) throw new Error(\"expected 1 field\");\n      // @ts-expect-error\n      return new List(children[0]);\n    }\n    case Type.Struct: {\n      const children = type.children.map(rehydrateField);\n      // @ts-expect-error\n      return new Struct(children);\n    }\n    case Type.Union: {\n      const children = type.children.map(rehydrateField);\n      // @ts-expect-error\n      return new Union(type.mode, type.typeIds, children);\n    }\n    case Type.FixedSizeBinary:\n      // @ts-expect-error\n      return new FixedSizeBinary(type.byteWidth);\n    case Type.FixedSizeList: {\n      const children = type.children.map(rehydrateField);\n      if (children.length > 1) throw new Error(\"expected 1 field\");\n      // @ts-expect-error\n      return new FixedSizeList(type.listSize, children[0]);\n    }\n    case Type.Map: {\n      const children = type.children.map(rehydrateField);\n      if (children.length > 1) throw new Error(\"expected 1 field\");\n      const entries = children[0];\n      // @ts-expect-error\n      return new Map_(entries, type.keysSorted);\n    }\n    case Type.Duration:\n      // @ts-expect-error\n      return new Duration(type.unit);\n    default:\n      throw new Error(`unknown type ${type}`);\n  }\n}\n\nfunction rehydrateField(field: PostMessageField): Field {\n  const type = rehydrateType(field.type);\n  return new Field(field.name, type, field.nullable, field.metadata);\n}\n\n/**\n * Rehydrate a `Data` object that has been `structuredClone`'d or\n * `postMessage`'d. The `Data` **must** have been prepared with\n * `preparePostMessage` to be accurately recreated.\n */\nexport function rehydrateData<T extends DataType>(\n  data: PostMessageData<T>,\n): Data<T> {\n  const children = data.children.map((childData) => rehydrateData(childData));\n  const dictionary = data.dictionary\n    ? rehydrateVector(data.dictionary)\n    : undefined;\n\n  // data.buffers is a getter, so we need to recreate Buffers from the\n  // attributes on data\n  const buffers: Buffers<T> = {\n    [BufferType.OFFSET]: data.valueOffsets,\n    [BufferType.DATA]: data.values,\n    [BufferType.VALIDITY]: data.nullBitmap,\n    [BufferType.TYPE]: data.typeIds,\n  };\n\n  // @ts-expect-error\n  return new Data(\n    rehydrateType(data.type),\n    data.offset,\n    data.length,\n    // @ts-expect-error\n    data._nullCount,\n    buffers,\n    children,\n    dictionary,\n  );\n}\n\n/**\n * Rehydrate a `Vector` object that has been `structuredClone`'d or\n * `postMessage`'d. The `Vector` **must** have been prepared with\n * `preparePostMessage` to be accurately recreated.\n */\nexport function rehydrateVector<T extends DataType>(\n  vector: PostMessageVector<T>,\n): Vector<T> {\n  return new Vector(vector.data.map((data) => rehydrateData(data)));\n}\n\nexport function rehydratePolygonData(\n  data: PostMessageData<Polygon>,\n): PolygonData {\n  if (!isPolygon(data.type)) {\n    throw new Error(\"Expected PolygonData\");\n  }\n\n  // @ts-expect-error\n  // For now, we allow this, even though we never fully recreate the prototypes\n  // on the JS side.\n  return data;\n}\n","import { DataType } from \"apache-arrow\";\nimport { BufferType } from \"apache-arrow\";\nimport { Data } from \"apache-arrow\";\nimport { Vector } from \"apache-arrow\";\nimport { hardClone } from \"./hard-clone\";\n\n/**\n * Prepare a `Data` or `Vector` for a `postMessage` or `structuredClone`.\n */\nexport function preparePostMessage<T extends DataType>(\n  input: Data<T>,\n  forceClone?: boolean,\n): [Data<T>, ArrayBuffer[]];\nexport function preparePostMessage<T extends DataType>(\n  input: Vector<T>,\n  forceClone?: boolean,\n): [Vector<T>, ArrayBuffer[]];\n\nexport function preparePostMessage<T extends DataType>(\n  input: Data<T> | Vector<T>,\n  forceClone: boolean = false,\n): [Data<T> | Vector<T>, ArrayBuffer[]] {\n  // Check if `input` is an arrow.Vector\n  if (\"data\" in input) {\n    const postMessageDatas: Data<T>[] = [];\n    const transferArrayBuffers: ArrayBuffer[] = [];\n    for (const data of input.data) {\n      const [postMessageData, arrayBuffers] = preparePostMessage(data);\n      postMessageDatas.push(postMessageData);\n      transferArrayBuffers.push(...arrayBuffers);\n    }\n    const vector = new Vector(postMessageDatas);\n    return [vector, transferArrayBuffers];\n  }\n\n  // Force clone into non-shared backing ArrayBuffers\n  // Note: this only clones if necessary, unless forceClone is `true`.\n  input = hardClone(input, forceClone);\n\n  const transferArrayBuffers: ArrayBuffer[] = [];\n\n  // Handle children\n  for (let childIdx = 0; childIdx < input.children.length; childIdx++) {\n    const childData = input.children[childIdx];\n    const [postMessageData, arrayBuffers] = preparePostMessage(childData);\n    input.children[childIdx] = postMessageData;\n    transferArrayBuffers.push(...arrayBuffers);\n  }\n\n  // Handle dictionary\n  if (input.dictionary !== undefined) {\n    const [postMessageVector, arrayBuffers] = preparePostMessage(\n      input.dictionary,\n    );\n    input.dictionary = postMessageVector;\n    transferArrayBuffers.push(...arrayBuffers);\n  }\n\n  // Get references to the underlying buffers.\n\n  // We don't use a loop over these four to ensure accurate typing (well, typing\n  // doesn't seem to work on `DATA` and `TYPE`.)\n  if (input.buffers[BufferType.OFFSET] !== undefined) {\n    // @ts-expect-error\n    transferArrayBuffers.push(input.buffers[BufferType.OFFSET].buffer);\n  }\n  if (input.buffers[BufferType.DATA] !== undefined) {\n    // @ts-expect-error\n    transferArrayBuffers.push(input.buffers[BufferType.DATA].buffer);\n  }\n  if (input.buffers[BufferType.VALIDITY] !== undefined) {\n    transferArrayBuffers.push(input.buffers[BufferType.VALIDITY].buffer);\n  }\n  if (input.buffers[BufferType.TYPE] !== undefined) {\n    // @ts-expect-error\n    transferArrayBuffers.push(input.buffers[BufferType.TYPE].buffer);\n  }\n\n  return [input, transferArrayBuffers];\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Convert binary geometry representation to GeoJSON\n * @param data   geometry data in binary representation\n * @param options\n * @param options.type  Input data type: Point, LineString, or Polygon\n * @param options.featureId  Global feature id. If specified, only a single feature is extracted\n * @return GeoJSON objects\n */\nexport function binaryToGeojson(data, options) {\n    const globalFeatureId = options?.globalFeatureId;\n    if (globalFeatureId !== undefined) {\n        return getSingleFeature(data, globalFeatureId);\n    }\n    return parseFeatures(data, options?.type);\n}\n/**\n * Return a single feature from a binary geometry representation as GeoJSON\n * @param data   geometry data in binary representation\n * @return GeoJSON feature\n */\nfunction getSingleFeature(data, globalFeatureId) {\n    const dataArray = normalizeInput(data);\n    for (const data of dataArray) {\n        let lastIndex = 0;\n        let lastValue = data.featureIds.value[0];\n        // Scan through data until we find matching feature\n        for (let i = 0; i < data.featureIds.value.length; i++) {\n            const currValue = data.featureIds.value[i];\n            if (currValue === lastValue) {\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n            if (globalFeatureId === data.globalFeatureIds.value[lastIndex]) {\n                return parseFeature(data, lastIndex, i);\n            }\n            lastIndex = i;\n            lastValue = currValue;\n        }\n        if (globalFeatureId === data.globalFeatureIds.value[lastIndex]) {\n            return parseFeature(data, lastIndex, data.featureIds.value.length);\n        }\n    }\n    throw new Error(`featureId:${globalFeatureId} not found`);\n}\nfunction parseFeatures(data, type) {\n    const dataArray = normalizeInput(data, type);\n    return parseFeatureCollection(dataArray);\n}\n/** Parse input binary data and return a valid GeoJSON geometry object */\nexport function binaryToGeometry(data, startIndex, endIndex) {\n    switch (data.type) {\n        case 'Point':\n            return pointToGeoJson(data, startIndex, endIndex);\n        case 'LineString':\n            return lineStringToGeoJson(data, startIndex, endIndex);\n        case 'Polygon':\n            return polygonToGeoJson(data, startIndex, endIndex);\n        default:\n            const unexpectedInput = data;\n            throw new Error(`Unsupported geometry type: ${unexpectedInput?.type}`);\n    }\n}\n// Normalize features\n// Return an array of data objects, each of which have a type key\nfunction normalizeInput(data, type) {\n    const features = [];\n    if (data.points) {\n        data.points.type = 'Point';\n        features.push(data.points);\n    }\n    if (data.lines) {\n        data.lines.type = 'LineString';\n        features.push(data.lines);\n    }\n    if (data.polygons) {\n        data.polygons.type = 'Polygon';\n        features.push(data.polygons);\n    }\n    return features;\n}\n/** Parse input binary data and return an array of GeoJSON Features */\nfunction parseFeatureCollection(dataArray) {\n    const features = [];\n    for (const data of dataArray) {\n        if (data.featureIds.value.length === 0) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        let lastIndex = 0;\n        let lastValue = data.featureIds.value[0];\n        // Need to deduce start, end indices of each feature\n        for (let i = 0; i < data.featureIds.value.length; i++) {\n            const currValue = data.featureIds.value[i];\n            if (currValue === lastValue) {\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n            features.push(parseFeature(data, lastIndex, i));\n            lastIndex = i;\n            lastValue = currValue;\n        }\n        // Last feature\n        features.push(parseFeature(data, lastIndex, data.featureIds.value.length));\n    }\n    return features;\n}\n/** Parse input binary data and return a single GeoJSON Feature */\nfunction parseFeature(data, startIndex, endIndex) {\n    const geometry = binaryToGeometry(data, startIndex, endIndex);\n    const properties = parseProperties(data, startIndex, endIndex);\n    const fields = parseFields(data, startIndex, endIndex);\n    return { type: 'Feature', geometry, properties, ...fields };\n}\n/** Parse input binary data and return an object of fields */\nfunction parseFields(data, startIndex = 0, endIndex) {\n    return data.fields && data.fields[data.featureIds.value[startIndex]];\n}\n/** Parse input binary data and return an object of properties */\nfunction parseProperties(data, startIndex = 0, endIndex) {\n    const properties = Object.assign({}, data.properties[data.featureIds.value[startIndex]]);\n    for (const key in data.numericProps) {\n        properties[key] = data.numericProps[key].value[startIndex];\n    }\n    return properties;\n}\n/** Parse binary data of type Polygon */\nfunction polygonToGeoJson(data, startIndex = -Infinity, endIndex = Infinity) {\n    const { positions } = data;\n    const polygonIndices = data.polygonIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n    const primitivePolygonIndices = data.primitivePolygonIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n    const multi = polygonIndices.length > 2;\n    // Polygon\n    if (!multi) {\n        const coordinates = [];\n        for (let i = 0; i < primitivePolygonIndices.length - 1; i++) {\n            const startRingIndex = primitivePolygonIndices[i];\n            const endRingIndex = primitivePolygonIndices[i + 1];\n            const ringCoordinates = ringToGeoJson(positions, startRingIndex, endRingIndex);\n            coordinates.push(ringCoordinates);\n        }\n        return { type: 'Polygon', coordinates };\n    }\n    // MultiPolygon\n    const coordinates = [];\n    for (let i = 0; i < polygonIndices.length - 1; i++) {\n        const startPolygonIndex = polygonIndices[i];\n        const endPolygonIndex = polygonIndices[i + 1];\n        const polygonCoordinates = polygonToGeoJson(data, startPolygonIndex, endPolygonIndex).coordinates;\n        coordinates.push(polygonCoordinates);\n    }\n    return { type: 'MultiPolygon', coordinates };\n}\n/** Parse binary data of type LineString */\nfunction lineStringToGeoJson(data, startIndex = -Infinity, endIndex = Infinity) {\n    const { positions } = data;\n    const pathIndices = data.pathIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n    const multi = pathIndices.length > 2;\n    if (!multi) {\n        const coordinates = ringToGeoJson(positions, pathIndices[0], pathIndices[1]);\n        return { type: 'LineString', coordinates };\n    }\n    const coordinates = [];\n    for (let i = 0; i < pathIndices.length - 1; i++) {\n        const ringCoordinates = ringToGeoJson(positions, pathIndices[i], pathIndices[i + 1]);\n        coordinates.push(ringCoordinates);\n    }\n    return { type: 'MultiLineString', coordinates };\n}\n/** Parse binary data of type Point */\nfunction pointToGeoJson(data, startIndex, endIndex) {\n    const { positions } = data;\n    const coordinates = ringToGeoJson(positions, startIndex, endIndex);\n    const multi = coordinates.length > 1;\n    if (multi) {\n        return { type: 'MultiPoint', coordinates };\n    }\n    return { type: 'Point', coordinates: coordinates[0] };\n}\n/**\n * Parse a linear ring of positions to a GeoJSON linear ring\n *\n * @param positions Positions TypedArray\n * @param startIndex Start index to include in ring\n * @param endIndex End index to include in ring\n * @returns GeoJSON ring\n */\nfunction ringToGeoJson(positions, startIndex, endIndex) {\n    startIndex = startIndex || 0;\n    endIndex = endIndex || positions.value.length / positions.size;\n    const ringCoordinates = [];\n    for (let j = startIndex; j < endIndex; j++) {\n        const coord = Array();\n        for (let k = j * positions.size; k < (j + 1) * positions.size; k++) {\n            coord.push(Number(positions.value[k]));\n        }\n        ringCoordinates.push(coord);\n    }\n    return ringCoordinates;\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst EWKB_FLAG_Z = 0x80000000;\nconst EWKB_FLAG_M = 0x40000000;\nconst EWKB_FLAG_SRID = 0x20000000;\nconst MAX_SRID = 10000; // TBD: Assume no more than 10K SRIDs are defined\n/**\n * Integer code for geometry types in WKB and related formats\n * Reference: https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry#Well-known_binary\n */\nexport var WKBGeometryType;\n(function (WKBGeometryType) {\n    WKBGeometryType[WKBGeometryType[\"Point\"] = 1] = \"Point\";\n    WKBGeometryType[WKBGeometryType[\"LineString\"] = 2] = \"LineString\";\n    WKBGeometryType[WKBGeometryType[\"Polygon\"] = 3] = \"Polygon\";\n    WKBGeometryType[WKBGeometryType[\"MultiPoint\"] = 4] = \"MultiPoint\";\n    WKBGeometryType[WKBGeometryType[\"MultiLineString\"] = 5] = \"MultiLineString\";\n    WKBGeometryType[WKBGeometryType[\"MultiPolygon\"] = 6] = \"MultiPolygon\";\n    WKBGeometryType[WKBGeometryType[\"GeometryCollection\"] = 7] = \"GeometryCollection\";\n})(WKBGeometryType || (WKBGeometryType = {}));\n/** Sanity checks that first to 5-9 bytes could represent a supported WKB dialect header */\nexport function isWKB(arrayBuffer) {\n    const dataView = new DataView(arrayBuffer);\n    let byteOffset = 0;\n    const endianness = dataView.getUint8(byteOffset);\n    byteOffset += 1;\n    // Check valid endianness (only 0 or 1 are allowed)\n    if (endianness > 1) {\n        return false;\n    }\n    const littleEndian = endianness === 1;\n    const geometry = dataView.getUint32(byteOffset, littleEndian);\n    byteOffset += 4;\n    // check valid geometry type (we don't support extension geometries)\n    const geometryType = geometry & 0x07;\n    if (geometryType === 0 || geometryType > 7) {\n        return false;\n    }\n    const geometryFlags = geometry - geometryType;\n    // Accept iso-wkb flags\n    if (geometryFlags === 0 ||\n        geometryFlags === 1000 ||\n        geometryFlags === 2000 ||\n        geometryFlags === 3000) {\n        return true;\n    }\n    // Accept ewkb flags but reject otherwise\n    if ((geometryFlags & ~(EWKB_FLAG_Z | EWKB_FLAG_M | EWKB_FLAG_SRID)) !== 0) {\n        return false;\n    }\n    if (geometryFlags & EWKB_FLAG_SRID) {\n        const srid = dataView.getUint32(byteOffset, littleEndian);\n        byteOffset += 4;\n        if (srid > MAX_SRID) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Parses header and provides a byteOffset to start of geometry data\n * @param dataView\n * @param target optionally supply a WKBHeader object to avoid creating a new object for every call\n * @returns a header object describing the WKB data\n */\n// eslint-disable-next-line max-statements\nexport function parseWKBHeader(dataView, target) {\n    const wkbHeader = Object.assign(target || {}, {\n        type: 'wkb',\n        geometryType: 1,\n        dimensions: 2,\n        coordinates: 'xy',\n        littleEndian: true,\n        byteOffset: 0\n    });\n    // Check endianness of data\n    wkbHeader.littleEndian = dataView.getUint8(wkbHeader.byteOffset) === 1;\n    wkbHeader.byteOffset++;\n    // 4-digit code representing dimension and type of geometry\n    const geometryCode = dataView.getUint32(wkbHeader.byteOffset, wkbHeader.littleEndian);\n    wkbHeader.byteOffset += 4;\n    wkbHeader.geometryType = (geometryCode & 0x7);\n    // Check if iso-wkb variant: iso-wkb adds 1000, 2000 or 3000 to the geometry code\n    const isoType = (geometryCode - wkbHeader.geometryType) / 1000;\n    switch (isoType) {\n        case 0:\n            break;\n        case 1:\n            wkbHeader.type = 'iso-wkb';\n            wkbHeader.dimensions = 3;\n            wkbHeader.coordinates = 'xyz';\n            break;\n        case 2:\n            wkbHeader.type = 'iso-wkb';\n            wkbHeader.dimensions = 3;\n            wkbHeader.coordinates = 'xym';\n            break;\n        case 3:\n            wkbHeader.type = 'iso-wkb';\n            wkbHeader.dimensions = 4;\n            wkbHeader.coordinates = 'xyzm';\n            break;\n        default:\n            throw new Error(`WKB: Unsupported iso-wkb type: ${isoType}`);\n    }\n    // Check if EWKB variant. Uses bitmasks for Z&M dimensions as well as optional SRID field\n    const ewkbZ = geometryCode & EWKB_FLAG_Z;\n    const ewkbM = geometryCode & EWKB_FLAG_M;\n    const ewkbSRID = geometryCode & EWKB_FLAG_SRID;\n    if (ewkbZ && ewkbM) {\n        wkbHeader.type = 'ewkb';\n        wkbHeader.dimensions = 4;\n        wkbHeader.coordinates = 'xyzm';\n    }\n    else if (ewkbZ) {\n        wkbHeader.type = 'ewkb';\n        wkbHeader.dimensions = 3;\n        wkbHeader.coordinates = 'xyz';\n    }\n    else if (ewkbM) {\n        wkbHeader.type = 'ewkb';\n        wkbHeader.dimensions = 3;\n        wkbHeader.coordinates = 'xym';\n    }\n    // If SRID present read four more bytes\n    if (ewkbSRID) {\n        wkbHeader.type = 'ewkb';\n        // 4-digit code representing dimension and type of geometry\n        wkbHeader.srid = dataView.getUint32(wkbHeader.byteOffset, wkbHeader.littleEndian);\n        wkbHeader.byteOffset += 4;\n    }\n    return wkbHeader;\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { binaryToGeometry } from '@loaders.gl/gis';\nimport { parseWKBHeader, WKBGeometryType } from \"./parse-wkb-header.js\";\nexport function parseWKB(arrayBuffer, options) {\n    const binaryGeometry = parseWKBToBinary(arrayBuffer, options);\n    const shape = options?.wkb?.shape || 'binary-geometry';\n    switch (shape) {\n        case 'binary-geometry':\n            return binaryGeometry;\n        case 'geojson-geometry':\n            return binaryToGeometry(binaryGeometry);\n        case 'geometry':\n            // eslint-disable-next-line no-console\n            console.error('WKBLoader: \"geometry\" shape is deprecated, use \"binary-geometry\" instead');\n            return binaryToGeometry(binaryGeometry);\n        default:\n            throw new Error(shape);\n    }\n}\nexport function parseWKBToBinary(arrayBuffer, options) {\n    const dataView = new DataView(arrayBuffer);\n    const wkbHeader = parseWKBHeader(dataView);\n    const { geometryType, dimensions, littleEndian } = wkbHeader;\n    const offset = wkbHeader.byteOffset;\n    switch (geometryType) {\n        case WKBGeometryType.Point:\n            const point = parsePoint(dataView, offset, dimensions, littleEndian);\n            return point.geometry;\n        case WKBGeometryType.LineString:\n            const line = parseLineString(dataView, offset, dimensions, littleEndian);\n            return line.geometry;\n        case WKBGeometryType.Polygon:\n            const polygon = parsePolygon(dataView, offset, dimensions, littleEndian);\n            return polygon.geometry;\n        case WKBGeometryType.MultiPoint:\n            const multiPoint = parseMultiPoint(dataView, offset, dimensions, littleEndian);\n            multiPoint.type = 'Point';\n            return multiPoint;\n        case WKBGeometryType.MultiLineString:\n            const multiLine = parseMultiLineString(dataView, offset, dimensions, littleEndian);\n            multiLine.type = 'LineString';\n            return multiLine;\n        case WKBGeometryType.MultiPolygon:\n            const multiPolygon = parseMultiPolygon(dataView, offset, dimensions, littleEndian);\n            multiPolygon.type = 'Polygon';\n            return multiPolygon;\n        // case WKBGeometryType.GeometryCollection:\n        // TODO: handle GeometryCollections\n        // return parseGeometryCollection(dataView, offset, dimensions, littleEndian);\n        default:\n            throw new Error(`WKB: Unsupported geometry type: ${geometryType}`);\n    }\n}\n// Primitives; parse point and linear ring\nfunction parsePoint(dataView, offset, dimension, littleEndian) {\n    const positions = new Float64Array(dimension);\n    for (let i = 0; i < dimension; i++) {\n        positions[i] = dataView.getFloat64(offset, littleEndian);\n        offset += 8;\n    }\n    return {\n        geometry: { type: 'Point', positions: { value: positions, size: dimension } },\n        offset\n    };\n}\nfunction parseLineString(dataView, offset, dimension, littleEndian) {\n    const nPoints = dataView.getUint32(offset, littleEndian);\n    offset += 4;\n    // Instantiate array\n    const positions = new Float64Array(nPoints * dimension);\n    for (let i = 0; i < nPoints * dimension; i++) {\n        positions[i] = dataView.getFloat64(offset, littleEndian);\n        offset += 8;\n    }\n    const pathIndices = [0];\n    if (nPoints > 0) {\n        pathIndices.push(nPoints);\n    }\n    return {\n        geometry: {\n            type: 'LineString',\n            positions: { value: positions, size: dimension },\n            pathIndices: { value: new Uint32Array(pathIndices), size: 1 }\n        },\n        offset\n    };\n}\n// https://stackoverflow.com/a/55261098\nconst cumulativeSum = (sum) => (value) => (sum += value);\nfunction parsePolygon(dataView, offset, dimension, littleEndian) {\n    const nRings = dataView.getUint32(offset, littleEndian);\n    offset += 4;\n    const rings = [];\n    for (let i = 0; i < nRings; i++) {\n        const parsed = parseLineString(dataView, offset, dimension, littleEndian);\n        const { positions } = parsed.geometry;\n        offset = parsed.offset;\n        rings.push(positions.value);\n    }\n    const concatenatedPositions = new Float64Array(concatTypedArrays(rings).buffer);\n    const polygonIndices = [0];\n    if (concatenatedPositions.length > 0) {\n        polygonIndices.push(concatenatedPositions.length / dimension);\n    }\n    const primitivePolygonIndices = rings.map((l) => l.length / dimension).map(cumulativeSum(0));\n    primitivePolygonIndices.unshift(0);\n    return {\n        geometry: {\n            type: 'Polygon',\n            positions: { value: concatenatedPositions, size: dimension },\n            polygonIndices: {\n                value: new Uint32Array(polygonIndices),\n                size: 1\n            },\n            primitivePolygonIndices: { value: new Uint32Array(primitivePolygonIndices), size: 1 }\n        },\n        offset\n    };\n}\nfunction parseMultiPoint(dataView, offset, dimension, littleEndian) {\n    const nPoints = dataView.getUint32(offset, littleEndian);\n    offset += 4;\n    const binaryPointGeometries = [];\n    for (let i = 0; i < nPoints; i++) {\n        // Byte order for point\n        const littleEndianPoint = dataView.getUint8(offset) === 1;\n        offset++;\n        // Assert point type\n        if (dataView.getUint32(offset, littleEndianPoint) % 1000 !== 1) {\n            throw new Error('WKB: Inner geometries of MultiPoint not of type Point');\n        }\n        offset += 4;\n        const parsed = parsePoint(dataView, offset, dimension, littleEndianPoint);\n        offset = parsed.offset;\n        binaryPointGeometries.push(parsed.geometry);\n    }\n    return concatenateBinaryPointGeometries(binaryPointGeometries, dimension);\n}\nfunction parseMultiLineString(dataView, offset, dimension, littleEndian) {\n    const nLines = dataView.getUint32(offset, littleEndian);\n    offset += 4;\n    const binaryLineGeometries = [];\n    for (let i = 0; i < nLines; i++) {\n        // Byte order for line\n        const littleEndianLine = dataView.getUint8(offset) === 1;\n        offset++;\n        // Assert type LineString\n        if (dataView.getUint32(offset, littleEndianLine) % 1000 !== 2) {\n            throw new Error('WKB: Inner geometries of MultiLineString not of type LineString');\n        }\n        offset += 4;\n        const parsed = parseLineString(dataView, offset, dimension, littleEndianLine);\n        offset = parsed.offset;\n        binaryLineGeometries.push(parsed.geometry);\n    }\n    return concatenateBinaryLineGeometries(binaryLineGeometries, dimension);\n}\nfunction parseMultiPolygon(dataView, offset, dimension, littleEndian) {\n    const nPolygons = dataView.getUint32(offset, littleEndian);\n    offset += 4;\n    const binaryPolygonGeometries = [];\n    for (let i = 0; i < nPolygons; i++) {\n        // Byte order for polygon\n        const littleEndianPolygon = dataView.getUint8(offset) === 1;\n        offset++;\n        // Assert type Polygon\n        if (dataView.getUint32(offset, littleEndianPolygon) % 1000 !== 3) {\n            throw new Error('WKB: Inner geometries of MultiPolygon not of type Polygon');\n        }\n        offset += 4;\n        const parsed = parsePolygon(dataView, offset, dimension, littleEndianPolygon);\n        offset = parsed.offset;\n        binaryPolygonGeometries.push(parsed.geometry);\n    }\n    return concatenateBinaryPolygonGeometries(binaryPolygonGeometries, dimension);\n}\n// TODO - move to loaders.gl/schema/gis\nfunction concatenateBinaryPointGeometries(binaryPointGeometries, dimension) {\n    const positions = binaryPointGeometries.map((geometry) => geometry.positions.value);\n    const concatenatedPositions = new Float64Array(concatTypedArrays(positions).buffer);\n    return {\n        type: 'Point',\n        positions: { value: concatenatedPositions, size: dimension }\n    };\n}\nfunction concatenateBinaryLineGeometries(binaryLineGeometries, dimension) {\n    const lines = binaryLineGeometries.map((geometry) => geometry.positions.value);\n    const concatenatedPositions = new Float64Array(concatTypedArrays(lines).buffer);\n    const pathIndices = lines.map((line) => line.length / dimension).map(cumulativeSum(0));\n    pathIndices.unshift(0);\n    return {\n        type: 'LineString',\n        positions: { value: concatenatedPositions, size: dimension },\n        pathIndices: { value: new Uint32Array(pathIndices), size: 1 }\n    };\n}\nfunction concatenateBinaryPolygonGeometries(binaryPolygonGeometries, dimension) {\n    const polygons = [];\n    const primitivePolygons = [];\n    for (const binaryPolygon of binaryPolygonGeometries) {\n        const { positions, primitivePolygonIndices } = binaryPolygon;\n        polygons.push(positions.value);\n        primitivePolygons.push(primitivePolygonIndices.value);\n    }\n    const concatenatedPositions = new Float64Array(concatTypedArrays(polygons).buffer);\n    const polygonIndices = polygons.map((p) => p.length / dimension).map(cumulativeSum(0));\n    polygonIndices.unshift(0);\n    // Combine primitivePolygonIndices from each individual polygon\n    const primitivePolygonIndices = [0];\n    for (const primitivePolygon of primitivePolygons) {\n        primitivePolygonIndices.push(...primitivePolygon\n            .filter((x) => x > 0)\n            .map((x) => x + primitivePolygonIndices[primitivePolygonIndices.length - 1]));\n    }\n    return {\n        type: 'Polygon',\n        positions: { value: concatenatedPositions, size: dimension },\n        polygonIndices: { value: new Uint32Array(polygonIndices), size: 1 },\n        primitivePolygonIndices: { value: new Uint32Array(primitivePolygonIndices), size: 1 }\n    };\n}\n// TODO: remove copy; import from typed-array-utils\n// modules/math/src/geometry/typed-arrays/typed-array-utils.js\nfunction concatTypedArrays(arrays) {\n    let byteLength = 0;\n    for (let i = 0; i < arrays.length; ++i) {\n        byteLength += arrays[i].byteLength;\n    }\n    const buffer = new Uint8Array(byteLength);\n    let byteOffset = 0;\n    for (let i = 0; i < arrays.length; ++i) {\n        const data = new Uint8Array(arrays[i].buffer);\n        byteLength = data.length;\n        for (let j = 0; j < byteLength; ++j) {\n            buffer[byteOffset++] = data[j];\n        }\n    }\n    return buffer;\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { VERSION } from \"./lib/utils/version.js\";\nimport { parseWKB } from \"./lib/parse-wkb.js\";\nimport { isWKB } from \"./lib/parse-wkb-header.js\";\n/**\n * Worker loader for WKB (Well-Known Binary)\n */\nexport const WKBWorkerLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'WKB',\n    id: 'wkb',\n    module: 'wkt',\n    version: VERSION,\n    worker: true,\n    category: 'geometry',\n    extensions: ['wkb'],\n    mimeTypes: [],\n    // TODO can we define static, serializable tests, eg. some binary strings?\n    tests: [isWKB],\n    options: {\n        wkb: {\n            shape: 'binary-geometry' // 'geojson-geometry'\n        }\n    }\n};\n/**\n * Loader for WKB (Well-Known Binary)\n */\nexport const WKBLoader = {\n    ...WKBWorkerLoader,\n    parse: async (arrayBuffer) => parseWKB(arrayBuffer),\n    parseSync: parseWKB\n};\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n","import { makeData, Data } from \"apache-arrow\";\nimport {\n  GeoArrowData,\n  LineStringData,\n  PointData,\n  PolygonData,\n  WKBData,\n} from \"../data\";\nimport { WKBLoader } from \"@loaders.gl/wkt\";\nimport type {\n  BinaryGeometry,\n  BinaryPointGeometry,\n  BinaryLineGeometry,\n  BinaryPolygonGeometry,\n} from \"@loaders.gl/schema\";\nimport { assert, assertFalse } from \"../algorithm/utils/assert\";\nimport { FixedSizeList, Float64, List } from \"apache-arrow\";\nimport { Field } from \"apache-arrow\";\n\nexport enum WKBType {\n  Point,\n  LineString,\n  Polygon,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n}\n\n/**\n * Parse an Arrow array of WKB\n *\n * @return  {[type]}  [return description]\n */\nexport function parseWkb(\n  data: WKBData,\n  type: WKBType,\n  dim: number,\n): GeoArrowData {\n  const parsedGeometries: BinaryGeometry[] = [];\n\n  for (const item of iterBinary(data)) {\n    if (item === null) {\n      throw new Error(\"Null entries are not currently supported\");\n    }\n    const arrayBuffer = copyViewToArrayBuffer(item);\n    const parsed = WKBLoader.parseSync(arrayBuffer, {\n      wkb: { shape: \"binary-geometry\" },\n    }) as BinaryGeometry;\n    parsedGeometries.push(parsed);\n  }\n\n  switch (type) {\n    case WKBType.Point:\n      return repackPoints(parsedGeometries as BinaryPointGeometry[], dim);\n\n    case WKBType.LineString:\n      return repackLineStrings(parsedGeometries as BinaryLineGeometry[], dim);\n\n    case WKBType.Polygon:\n      const repackedPolygons = repackPolygons(\n        parsedGeometries as BinaryPolygonGeometry[],\n        dim,\n      );\n      console.log(\"here\");\n      console.log(repackedPolygons instanceof Data);\n\n      return repackedPolygons;\n\n    default:\n      assertFalse(\"Not yet implemented for this geometry type\");\n  }\n}\n\nfunction* iterBinary(data: WKBData): IterableIterator<Uint8Array | null> {\n  const values = data.values;\n  const valueOffsets = data.valueOffsets;\n  for (let i = 0; i < data.length; i++) {\n    if (!data.getValid(i)) {\n      yield null;\n    } else {\n      const startOffset = valueOffsets[i];\n      const endOffset = valueOffsets[i + 1];\n      yield values.subarray(startOffset, endOffset);\n    }\n  }\n}\n\n// TODO: update loaders.gl parseWKB to accept Uint8Array, not just ArrayBuffer.\nfunction copyViewToArrayBuffer(view: Uint8Array): ArrayBuffer {\n  const buffer = new ArrayBuffer(view.byteLength);\n  new Uint8Array(buffer).set(view);\n  return buffer;\n}\n\nfunction repackPoints(geoms: BinaryPointGeometry[], dim: number): PointData {\n  const geomLength = geoms.length;\n  const coords = new Float64Array(geomLength * dim);\n  let coordOffset = 0;\n  for (const geom of geoms) {\n    assert(geom.positions.value instanceof Float64Array);\n    coords.set(geom.positions.value, coordOffset * dim);\n    coordOffset += 1;\n  }\n\n  const coordsData = makeData({\n    type: new Float64(),\n    data: coords,\n  });\n  return makeData({\n    type: new FixedSizeList(\n      dim,\n      new Field(coordFieldName(dim), new Float64(), false),\n    ),\n    child: coordsData,\n  });\n}\n\ntype LineStringCapacity = {\n  coordCapacty: number;\n  geomCapacity: number;\n};\n\nfunction repackLineStrings(\n  geoms: BinaryLineGeometry[],\n  dim: number,\n): LineStringData {\n  const capacity = inferLineStringCapacity(geoms);\n  const coords = new Float64Array(capacity.coordCapacty * dim);\n  const geomOffsets = new Int32Array(capacity.geomCapacity + 1);\n\n  let geomIndex = 0;\n  let coordOffset = 0;\n  for (const geom of geoms) {\n    assert(geom.positions.value instanceof Float64Array);\n    const numCoords = geom.positions.value.length / geom.positions.size;\n    coords.set(geom.positions.value, coordOffset * dim);\n    geomIndex += 1;\n    coordOffset += numCoords;\n\n    // Note this is after we've added one\n    geomOffsets[geomIndex] = coordOffset;\n  }\n\n  const coordsData = makeData({\n    type: new Float64(),\n    data: coords,\n  });\n  const verticesData = makeData({\n    type: new FixedSizeList(\n      dim,\n      new Field(coordFieldName(dim), coordsData.type, false),\n    ),\n    child: coordsData,\n  });\n  return makeData({\n    type: new List(new Field(\"vertices\", verticesData.type, false)),\n    valueOffsets: geomOffsets,\n    child: verticesData,\n  });\n}\n\nfunction inferLineStringCapacity(\n  geoms: BinaryLineGeometry[],\n): LineStringCapacity {\n  let capacity: LineStringCapacity = {\n    coordCapacty: 0,\n    geomCapacity: 0,\n  };\n\n  // TODO: check geom.pathIndices to validate that we have a LineString and not\n  // a multi line string\n  for (const geom of geoms) {\n    capacity.geomCapacity += 1;\n    capacity.coordCapacty += geom.positions.value.length / geom.positions.size;\n  }\n\n  return capacity;\n}\n\ntype PolygonCapacity = {\n  coordCapacty: number;\n  /** This is what loaders.gl calls `primitivePolygonIndices` */\n  ringCapacity: number;\n  geomCapacity: number;\n};\n\nfunction repackPolygons(\n  geoms: BinaryPolygonGeometry[],\n  dim: number,\n): PolygonData {\n  const capacity = inferPolygonCapacity(geoms);\n  const coords = new Float64Array(capacity.coordCapacty * dim);\n  const ringOffsets = new Int32Array(capacity.ringCapacity + 1);\n  const geomOffsets = new Int32Array(capacity.geomCapacity + 1);\n\n  let geomIndex = 0;\n  let coordOffset = 0;\n  let ringOffset = 0;\n\n  for (const geom of geoms) {\n    assert(geom.positions.value instanceof Float64Array);\n    const numCoords = geom.positions.value.length / geom.positions.size;\n\n    coords.set(geom.positions.value, coordOffset * dim);\n    coordOffset += numCoords;\n\n    for (\n      let ringIdx = 0;\n      ringIdx < geom.primitivePolygonIndices.value.length - 1;\n      ringIdx++\n    ) {\n      ringOffsets[ringOffset + 1] =\n        (geom.primitivePolygonIndices.value[ringOffset + 1] -\n          geom.primitivePolygonIndices.value[ringOffset]) /\n        geom.positions.size;\n      ringOffset += 1;\n    }\n\n    geomOffsets[geomIndex + 1] = ringOffset;\n    geomIndex += 1;\n  }\n\n  const coordsData = makeData({\n    type: new Float64(),\n    data: coords,\n  });\n  const verticesData = makeData({\n    type: new FixedSizeList(\n      dim,\n      new Field(coordFieldName(dim), coordsData.type, false),\n    ),\n    child: coordsData,\n  });\n\n  const ringsData = makeData({\n    type: new List(new Field(\"vertices\", verticesData.type, false)),\n    valueOffsets: ringOffsets,\n    child: verticesData,\n  });\n\n  return makeData({\n    type: new List(new Field(\"rings\", ringsData.type, false)),\n    valueOffsets: geomOffsets,\n    child: ringsData,\n  });\n}\n\nfunction inferPolygonCapacity(geoms: BinaryPolygonGeometry[]): PolygonCapacity {\n  let capacity: PolygonCapacity = {\n    coordCapacty: 0,\n    ringCapacity: 0,\n    geomCapacity: 0,\n  };\n\n  // TODO: check geom.polygonIndices to validate that we have a Polygon and not\n  // a MultiPolygon\n  for (const geom of geoms) {\n    capacity.geomCapacity += 1;\n    assert(\n      geom.primitivePolygonIndices.value.length >= 1,\n      \"Expected primitivePolygonIndices to always have length at least 1\",\n    );\n    capacity.ringCapacity += geom.primitivePolygonIndices.value.length - 1;\n    capacity.coordCapacty += geom.positions.value.length / geom.positions.size;\n  }\n\n  return capacity;\n}\n\nfunction coordFieldName(dim: number): \"xy\" | \"xyz\" {\n  if (dim === 2) {\n    return \"xy\";\n  } else if (dim === 3) {\n    return \"xyz\";\n  } else {\n    assertFalse(\"expected dimension of 2 or 3\");\n  }\n}\n"],"names":["globalThis","mathgl","config","EPSILON","debug","precision","printTypes","printDegrees","printRowMajor","_cartographicRadians","isArray","value","Array","ArrayBuffer","isView","DataView","equals","a","b","epsilon","oldEpsilon","length","i","Math","abs","max","WINDING","modifyPolygonWindingDirection","points","direction","options","windingDirection","sign","getPolygonSignedArea","getPolygonWindingDirection","start","end","size","numPoints","numSwaps","floor","b1","b2","j","tmp","reversePolygon","DimIndex","x","y","z","plane","dim","area","i0","i1","modifyPolygonWindingDirectionPoints","currentDirection","getPolygonSignedAreaPoints","getPolygonWindingDirectionPoints","reverse","Polygon","constructor","this","isFlatArray","isClosed","Object","freeze","getSignedArea","getArea","getWindingDirection","forEachSegment","visitor","endPointIndex","forEachSegmentInPolygon","x1","y1","x2","y2","i2","forEachSegmentInPolygonPoints","modifyWindingDirection","earcut","positions","holeIndices","areas","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","invSize","maxX","maxY","minX","minY","data","queue","len","list","steiner","push","getLeftmost","sort","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","last","undefined","insertNode","removeNode","filterPoints","again","p","ear","pass","zOrder","prevZ","nextZ","e","numMerges","pSize","q","qSize","tail","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","c","ax","bx","cx","ay","by","cy","x0","y0","pointInTriangle","minZ","maxZ","n","intersects","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","m","qx","Infinity","mx","my","tan","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","px","py","intersectsPolygon","inside","middleInside","r","p1","p2","q1","q2","o1","o2","o3","o4","onSegment","min","num","a2","Vertex","an","bp","getPointChild","input","getChildAt","children","getLineStringChild","getPolygonChild","getMultiPolygonChild","makeMathGlPolygon","geomIndex","geomOffsets","valueOffsets","ringsData","ringOffsets","pointData","type","listSize","flatCoordData","ringBegin","ringEnd","coordsBegin","coordsEnd","slicedFlatCoords","values","subarray","earcutSinglePolygon","rings","coords","flatCoords","initialCoordIndex","holeRingIdx","_earcut","isPoint","DataType","isFixedSizeList","includes","isFloat","isStruct","every","field","name","isLineString","isList","isPolygon","isMultiPoint","isMultiLineString","isMultiPolygon","isPointData","isLineStringData","isPolygonData","isMultiPointData","isMultiLineStringData","isMultiPolygonData","assert","condition","message","Error","assertFalse","mapCoords","callback","mapCoords0","mapCoords1","mapCoords2","polygonData","newPolygonData","arrow","makeData","nullCount","nullBitmap","child","mapCoords3","coordsData","outputCoords","Float64Array","coordIdx","newX","newY","newCoordsData","newPointData","newLinestringData","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","units","mm","to_meter","cm","ft","fath","kmi","km","mi","yd","ch","link","dm","in","ignoredChar","match","obj","key","testkey","keys","lkey","toLowerCase","replace","projStr","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","reduce","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","y_0","k_0","k0","k","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","whitespace","latin","keyword","endThings","digets","Parser","text","level","place","root","stack","currentObject","state","mapit","unshift","thing","out","newObj","item","sExpr","shift","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","output","knownTypes","d2r","cleanWKT","wkt","ii","setPropertiesFromWkt","AUTHORITY","authority","title","projName","local","PROJECTION","AXIS","axisOrder","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","slice","sphere","ellps","TOWGS84","isFinite","forEach","outName","inName","rename","lisp","defs","that","arguments","def","charAt","parseProj","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","globals","codeWords","codes","parse","code","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","extend","destination","source","property","msfnz","eccent","sinphi","cosphi","con","sqrt","adjust_lon","tsfnz","phi","com","pow","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","cos","forward","lon","lat","inverse","exp","names","projStore","add","projections","get","exports$1","ellipseName","datums","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","mgi","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","String","fromCharCode","Uint8Array","buffer","mapNodes","nodes","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","error","json","parseCode","ourProj","datumDef","Datum","sphere_","Ellipsoid","dc_sphere","ecc","ep2","getNadgrids","datumObj","datum_type","grids","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","checkParams","datum_transform","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","Number","NaN","attemptedGrids","outer","subgrids","jj","subgrid","del","ll","lim","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","inx","indx","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","adjust_axis","crs","denorm","xin","yin","zin","common","array","checkCoord","TypeError","transform","enforceAxis","hasZ","toPoint","checkSanity","checkNotWGS","transformer","from","to","transformedArray","concat","checkProj","oProj","proj4","fromProj","toProj","coord","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","getLetter100kID","encode","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","round","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","s","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","acos","tan_phi","d","ds","f","g","temp","h","asin","sinh","hypot","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens_cmplx","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hr","hi1","hr1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","omerc","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","krovak","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","tl","asq","cl","dd","nl1","rl1","tl1","dl","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","cea","iqsfnz","eqc","dlat","poly","el","bl","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu","C_y","C_x","moll","delta_theta","eqdc","ml1","ml2","vandg","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","ortho","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","robin","f_df","max_err","iters","upd","newton_rapshon","poly3_der","geocent","azi","degrees","tilt","tpers","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","geos","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","A1","A2","A3","A4","eqearth","paramLat","paramLatSq","paramLatPow6","EPS10","e_fwd","am1","e_inv","s_fwd","cphi1","s_inv","EXTENSION_NAME","Winding","bonne","reprojectData","projectionFn","defaultDatum","Proj","nadgrid","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","version","includedProjections","Bbox","updateBbox","other","updateCoord","coordsBbox","totalBoundsNest0","vector","totalBoundsNest1","totalBoundsNest2","_WINDING","Vector","polygon","Float","Precision","DOUBLE","trianglesResults","outputSize","outputArray","Uint32Array","idx","getMultiPolygonExterior","getPolygonExterior","winding","fromProjection","toProjection","signedArea","metadata","POINT","LINESTRING","MULTIPOINT","POLYGON","MULTILINESTRING","MULTIPOLYGON","polygonVector","totalBoundsNest3","builder","BoolBuilder","Bool","nullValues","getValid","setValid","CLOCKWISE","finish","flush","UnionMode","DateUnit","TimeUnit","IntervalUnit","Type","BufferType","_a","_b","_c","_d","_e","_g","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","proto","hardClone","force","clonedChildren","childData","clonedDictionary","dictionary","clonedBuffers","OFFSET","cloneBuffer","buffers","DATA","VALIDITY","TYPE","Data","_nullCount","isTypedArraySliced","arr","byteOffset","byteLength","typeId","Null","isInt","Int","isBinary","Binary","isLargeBinary","LargeBinary","isUtf8","Utf8","isLargeUtf8","LargeUtf8","isBool","isDecimal","Decimal","isDate","Date","isTime","Time","isTimestamp","Timestamp","isInterval","Interval","isDuration","Duration","List","Struct","isUnion","Union","isFixedSizeBinary","FixedSizeBinary","FixedSizeList","isMap","Map","isDictionary","Dictionary","isDenseUnion","Dense","isSparseUnion","Sparse","Symbol","toStringTag","ArrayType","OffsetArrayType","Int32Array","super","toString","Int_","isSigned","bitWidth","Int8Array","Int16Array","Uint16Array","BigInt64Array","BigUint64Array","HALF","SINGLE","Float32Array","scale","Date_","Time_","Timestamp_","timezone","Interval_","valueType","valueField","join","Union_","typeIds","typeIdToChildIndex","create","byteWidth","Map_","entries","keysSorted","_y","_z","_0","keyType","childType","getId","atomicDictionaryId","indices","id","isOrdered","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","bigIntToNumber","getBool","_data","_index","byte","bit","getBit","truncateBitmap","bitmap","alignedSize","bytes","xs","packBools","BitIterator","begin","context","byteIndex","done","iterator","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","cnt","pos","trunc","popcnt_uint32","getUint32","getUint16","getUint8","popcnt_array","uint32","nullable","stride","strideForType","union","indexInChild","mask","fill","assign","clone","childStride","_sliceBuffers","_sliceChildren","_changeLengthAndBackfillNullBitmap","newLength","rehydrateType","rehydrateField","Field","rehydrateData","rehydrateVector","isShared","bufferTypes","bufferType","preparePostMessage","forceClone","postMessageDatas","transferArrayBuffers","postMessageData","arrayBuffers","childIdx","postMessageVector","binaryToGeometry","startIndex","endIndex","coordinates","ringToGeoJson","pointToGeoJson","pathIndices","ringCoordinates","lineStringToGeoJson","polygonToGeoJson","unexpectedInput","polygonIndices","primitivePolygonIndices","polygonCoordinates","EWKB_FLAG_Z","EWKB_FLAG_M","EWKB_FLAG_SRID","WKBGeometryType","parseWKB","arrayBuffer","binaryGeometry","dataView","wkbHeader","geometryType","dimensions","littleEndian","geometryCode","isoType","ewkbZ","ewkbM","ewkbSRID","srid","parseWKBHeader","parsePoint","geometry","LineString","parseLineString","parsePolygon","MultiPoint","multiPoint","dimension","nPoints","binaryPointGeometries","littleEndianPoint","parsed","concatTypedArrays","concatenateBinaryPointGeometries","parseMultiPoint","MultiLineString","multiLine","nLines","binaryLineGeometries","littleEndianLine","lines","concatenatedPositions","line","cumulativeSum","concatenateBinaryLineGeometries","parseMultiLineString","MultiPolygon","multiPolygon","nPolygons","binaryPolygonGeometries","littleEndianPolygon","polygons","primitivePolygons","binaryPolygon","primitivePolygon","concatenateBinaryPolygonGeometries","parseMultiPolygon","parseWKBToBinary","wkb","nRings","l","arrays","WKBLoader","dataType","batchType","module","worker","category","extensions","mimeTypes","tests","endianness","geometryFlags","async","parseSync","WKBType","copyViewToArrayBuffer","coordFieldName","parsedGeometries","startOffset","endOffset","iterBinary","geoms","geomLength","coordOffset","geom","Float64","repackPoints","capacity","coordCapacty","geomCapacity","inferLineStringCapacity","numCoords","verticesData","repackLineStrings","repackedPolygons","ringCapacity","inferPolygonCapacity","ringOffset","ringIdx","repackPolygons"],"mappings":"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","x_google_ignoreList":[0,1,2,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,106,110,111,112,113,114,115,116,119,120,121,124,125,126,127,128]}