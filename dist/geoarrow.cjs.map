{"version":3,"file":"geoarrow.cjs","sources":["../node_modules/@math.gl/core/dist/lib/common.js","../node_modules/@math.gl/polygon/dist/polygon-utils.js","../node_modules/@math.gl/polygon/dist/polygon.js","../node_modules/@math.gl/polygon/dist/earcut.js","../src/child.ts","../src/algorithm/utils/polygon.ts","../src/algorithm/area.ts","../src/algorithm/earcut.ts","../src/algorithm/exterior.ts","../src/type.ts","../src/data.ts","../src/algorithm/utils/assert.ts","../src/algorithm/coords.ts","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../node_modules/proj4/lib/projections/eqearth.js","../node_modules/proj4/lib/projections/bonne.js","../node_modules/proj4/projs.js","../node_modules/proj4/lib/index.js","../src/algorithm/proj.ts","../src/constants.ts","../src/algorithm/total-bounds.ts","../src/algorithm/winding.ts","../src/vector.ts","../src/worker/hard-clone.ts","../src/worker/transferable.ts","../node_modules/apache-arrow/util/bigint.mjs","../node_modules/apache-arrow/fb/union-mode.mjs","../node_modules/apache-arrow/fb/precision.mjs","../node_modules/apache-arrow/fb/date-unit.mjs","../node_modules/apache-arrow/fb/time-unit.mjs","../node_modules/apache-arrow/fb/interval-unit.mjs","../node_modules/apache-arrow/enum.mjs","../node_modules/apache-arrow/type.mjs","../node_modules/apache-arrow/util/bit.mjs","../node_modules/apache-arrow/data.mjs","../src/worker/rehydrate.ts","../node_modules/@loaders.gl/wkt/dist/lib/utils/version.js","../node_modules/@loaders.gl/gis/dist/lib/binary-features/binary-to-geojson.js","../node_modules/@loaders.gl/wkt/dist/lib/parse-wkb-header.js","../node_modules/@loaders.gl/wkt/dist/lib/parse-wkb.js","../node_modules/@loaders.gl/wkt/dist/wkb-loader.js","../src/io/wkb.ts"],"sourcesContent":["// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst RADIANS_TO_DEGREES = (1 / Math.PI) * 180;\nconst DEGREES_TO_RADIANS = (1 / 180) * Math.PI;\nconst DEFAULT_CONFIG = {\n    EPSILON: 1e-12,\n    debug: false,\n    precision: 4,\n    printTypes: false,\n    printDegrees: false,\n    printRowMajor: true,\n    _cartographicRadians: false\n};\n// Configuration is truly global as of v3.6 to ensure single config even if multiple copies of math.gl\n// Multiple copies of config can be quite tricky to debug...\nglobalThis.mathgl = globalThis.mathgl || { config: { ...DEFAULT_CONFIG } };\nexport const config = globalThis.mathgl.config;\nexport function configure(options) {\n    // Only copy existing keys\n    Object.assign(config, options);\n    return config;\n}\n/**\n * Formats a value into a string\n * @param value\n * @param param1\n * @returns\n */\nexport function formatValue(value, { precision = config.precision } = {}) {\n    value = round(value);\n    // get rid of trailing zeros\n    return `${parseFloat(value.toPrecision(precision))}`;\n}\n/**\n * Check if value is an \"array\"\n * Returns `true` if value is either an array or a typed array\n * Note: returns `false` for `ArrayBuffer` and `DataView` instances\n * @note isTypedArray and isNumericArray are often more useful in TypeScript\n */\nexport function isArray(value) {\n    return Array.isArray(value) || (ArrayBuffer.isView(value) && !(value instanceof DataView));\n}\nexport function clone(array) {\n    return 'clone' in array ? array.clone() : array.slice();\n}\nexport function toRadians(degrees) {\n    return radians(degrees);\n}\nexport function toDegrees(radians) {\n    return degrees(radians);\n}\nexport function radians(degrees, result) {\n    return map(degrees, (degrees) => degrees * DEGREES_TO_RADIANS, result);\n}\nexport function degrees(radians, result) {\n    return map(radians, (radians) => radians * RADIANS_TO_DEGREES, result);\n}\n/**\n * \"GLSL equivalent\" of `Math.sin`: Works on single values and vectors\n * @deprecated\n */\nexport function sin(radians, result) {\n    return map(radians, (angle) => Math.sin(angle), result);\n}\n/**\n * \"GLSL equivalent\" of `Math.cos`: Works on single values and vectors\n * @deprecated\n */\nexport function cos(radians, result) {\n    return map(radians, (angle) => Math.cos(angle), result);\n}\n/**\n * \"GLSL equivalent\" of `Math.tan`: Works on single values and vectors\n * @deprecated\n */\nexport function tan(radians, result) {\n    return map(radians, (angle) => Math.tan(angle), result);\n}\n/**\n * \"GLSL equivalent\" of `Math.asin`: Works on single values and vectors\n * @deprecated\n */\nexport function asin(radians, result) {\n    return map(radians, (angle) => Math.asin(angle), result);\n}\n/**\n * \"GLSL equivalent\" of `Math.acos`: Works on single values and vectors\n * @deprecated\n */\nexport function acos(radians, result) {\n    return map(radians, (angle) => Math.acos(angle), result);\n}\n/**\n * \"GLSL equivalent\" of `Math.atan`: Works on single values and vectors\n * @deprecated\n */\nexport function atan(radians, result) {\n    return map(radians, (angle) => Math.atan(angle), result);\n}\nexport function clamp(value, min, max) {\n    return map(value, (value) => Math.max(min, Math.min(max, value)));\n}\nexport function lerp(a, b, t) {\n    if (isArray(a)) {\n        return a.map((ai, i) => lerp(ai, b[i], t));\n    }\n    return t * b + (1 - t) * a;\n}\n/* eslint-disable */\n/**\n * Compares any two math objects, using `equals` method if available.\n * @param a\n * @param b\n * @param epsilon\n * @returns\n */\nexport function equals(a, b, epsilon) {\n    const oldEpsilon = config.EPSILON;\n    if (epsilon) {\n        config.EPSILON = epsilon;\n    }\n    try {\n        if (a === b) {\n            return true;\n        }\n        if (isArray(a) && isArray(b)) {\n            if (a.length !== b.length) {\n                return false;\n            }\n            for (let i = 0; i < a.length; ++i) {\n                // eslint-disable-next-line max-depth\n                if (!equals(a[i], b[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (a && a.equals) {\n            return a.equals(b);\n        }\n        if (b && b.equals) {\n            return b.equals(a);\n        }\n        if (typeof a === 'number' && typeof b === 'number') {\n            return Math.abs(a - b) <= config.EPSILON * Math.max(1, Math.abs(a), Math.abs(b));\n        }\n        return false;\n    }\n    finally {\n        config.EPSILON = oldEpsilon;\n    }\n}\nexport function exactEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a && typeof a === 'object' && b && typeof b === 'object') {\n        if (a.constructor !== b.constructor) {\n            return false;\n        }\n        if (a.exactEquals) {\n            return a.exactEquals(b);\n        }\n    }\n    if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; ++i) {\n            if (!exactEquals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n/* eslint-enable */\nexport function withEpsilon(epsilon, func) {\n    const oldPrecision = config.EPSILON;\n    config.EPSILON = epsilon;\n    let value;\n    try {\n        value = func();\n    }\n    finally {\n        config.EPSILON = oldPrecision;\n    }\n    return value;\n}\n// HELPERS\nfunction round(value) {\n    return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n// If the array has a clone function, calls it, otherwise returns a copy\nfunction duplicateArray(array) {\n    // @ts-expect-error We check for math.gl class methods\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    return array.clone ? array.clone() : new Array(array.length);\n}\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(value, func, result) {\n    if (isArray(value)) {\n        const array = value;\n        result = result || duplicateArray(array);\n        for (let i = 0; i < result.length && i < array.length; ++i) {\n            const val = typeof value === 'number' ? value : value[i];\n            result[i] = func(val, i, result);\n        }\n        return result;\n    }\n    return func(value);\n}\n//# sourceMappingURL=common.js.map","// math.gl\n// SPDX-License-Identifier: MIT and ISC\n// Copyright (c) vis.gl contributors\n/* eslint-disable max-statements, max-depth, complexity, no-unused-expressions */\nimport { equals } from '@math.gl/core';\nexport const WINDING = {\n    CLOCKWISE: 1,\n    COUNTER_CLOCKWISE: -1\n};\n/**\n * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n * Note: points are modified in-place.\n * @param points An array that represents points of the polygon.\n * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n * @param options Parameters of the polygon.\n * @return Returns true if the winding direction was changed.\n */\nexport function modifyPolygonWindingDirection(points, direction, options = {}) {\n    const windingDirection = getPolygonWindingDirection(points, options);\n    if (windingDirection !== direction) {\n        reversePolygon(points, options);\n        return true;\n    }\n    return false;\n}\n/**\n * Returns winding direction of the polygon.\n * @param points An array that represents points of the polygon.\n * @param options Parameters of the polygon.\n * @returns Winding direction of the polygon.\n */\nexport function getPolygonWindingDirection(points, options = {}) {\n    return Math.sign(getPolygonSignedArea(points, options));\n}\nexport const DimIndex = {\n    x: 0,\n    y: 1,\n    z: 2\n};\n/**\n * Returns signed area of the polygon.\n * @param points An array that represents points of the polygon.\n * @param options Parameters of the polygon.\n * @returns Signed area of the polygon.\n * https://en.wikipedia.org/wiki/Shoelace_formula\n */\nexport function getPolygonSignedArea(points, options = {}) {\n    const { start = 0, end = points.length, plane = 'xy' } = options;\n    const dim = options.size || 2;\n    let area = 0;\n    const i0 = DimIndex[plane[0]];\n    const i1 = DimIndex[plane[1]];\n    for (let i = start, j = end - dim; i < end; i += dim) {\n        area += (points[i + i0] - points[j + i0]) * (points[i + i1] + points[j + i1]);\n        j = i;\n    }\n    return area / 2;\n}\n/**\n * Calls the visitor callback for each segment in the polygon.\n * @param points An array that represents points of the polygon\n * @param visitor A callback to call for each segment.\n * @param options Parameters of the polygon.\n */\nexport function forEachSegmentInPolygon(points, visitor, options = {}) {\n    const { start = 0, end = points.length, size = 2, isClosed } = options;\n    const numPoints = (end - start) / size;\n    for (let i = 0; i < numPoints - 1; ++i) {\n        visitor(points[start + i * size], points[start + i * size + 1], points[start + (i + 1) * size], points[start + (i + 1) * size + 1], i, i + 1);\n    }\n    const endPointIndex = start + (numPoints - 1) * size;\n    const isClosedEx = isClosed ||\n        (equals(points[start], points[endPointIndex]) &&\n            equals(points[start + 1], points[endPointIndex + 1]));\n    if (!isClosedEx) {\n        visitor(points[endPointIndex], points[endPointIndex + 1], points[start], points[start + 1], numPoints - 1, 0);\n    }\n}\nfunction reversePolygon(points, options) {\n    const { start = 0, end = points.length, size = 2 } = options;\n    const numPoints = (end - start) / size;\n    const numSwaps = Math.floor(numPoints / 2);\n    for (let i = 0; i < numSwaps; ++i) {\n        const b1 = start + i * size;\n        const b2 = start + (numPoints - 1 - i) * size;\n        for (let j = 0; j < size; ++j) {\n            const tmp = points[b1 + j];\n            points[b1 + j] = points[b2 + j];\n            points[b2 + j] = tmp;\n        }\n    }\n}\n/**\n * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n * Note: points are modified in-place.\n * @param points Array of points that represent the polygon.\n * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n * @param options Parameters of the polygon.\n * @return Returns true if the winding direction was changed.\n */\nexport function modifyPolygonWindingDirectionPoints(points, direction, options = {}) {\n    const currentDirection = getPolygonWindingDirectionPoints(points, options);\n    if (currentDirection !== direction) {\n        points.reverse();\n        return true;\n    }\n    return false;\n}\n/**\n * Returns winding direction of the polygon.\n * @param points Array of points that represent the polygon.\n * @param options Parameters of the polygon.\n * @returns Winding direction of the polygon.\n */\nexport function getPolygonWindingDirectionPoints(points, options = {}) {\n    return Math.sign(getPolygonSignedAreaPoints(points, options));\n}\n/**\n * Returns signed area of the polygon.\n * @param points Array of points that represent the polygon.\n * @param options Parameters of the polygon.\n * @returns Signed area of the polygon.\n */\nexport function getPolygonSignedAreaPoints(points, options = {}) {\n    // https://en.wikipedia.org/wiki/Shoelace_formula\n    const { start = 0, end = points.length, plane = 'xy' } = options;\n    let area = 0;\n    const i0 = DimIndex[plane[0]];\n    const i1 = DimIndex[plane[1]];\n    for (let i = start, j = end - 1; i < end; ++i) {\n        area += (points[i][i0] - points[j][i0]) * (points[i][i1] + points[j][i1]);\n        j = i;\n    }\n    return area / 2;\n}\n/**\n * Calls visitor callback for each segment in the polygon.\n * @param points Array of points that represent the polygon.\n * @param visitor A callback to call for each segment.\n * @param options Parameters of the polygon.\n */\nexport function forEachSegmentInPolygonPoints(points, visitor, options = {}) {\n    const { start = 0, end = points.length, isClosed } = options;\n    for (let i = start; i < end - 1; ++i) {\n        visitor(points[i], points[i + 1], i, i + 1);\n    }\n    const isClosedEx = isClosed || equals(points[end - 1], points[0]);\n    if (!isClosedEx) {\n        visitor(points[end - 1], points[0], end - 1, 0);\n    }\n}\n//# sourceMappingURL=polygon-utils.js.map","// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable no-undef, no-console */\nimport { isArray } from '@math.gl/core';\nimport { getPolygonSignedArea, forEachSegmentInPolygon, modifyPolygonWindingDirection, getPolygonSignedAreaPoints, forEachSegmentInPolygonPoints, modifyPolygonWindingDirectionPoints } from \"./polygon-utils.js\";\nexport class Polygon {\n    constructor(points, options = {}) {\n        this.points = points;\n        this.isFlatArray = !isArray(points[0]);\n        this.options = {\n            start: options.start || 0,\n            end: options.end || points.length,\n            size: options.size || 2,\n            isClosed: options.isClosed\n        };\n        Object.freeze(this);\n    }\n    /**\n     * Returns signed area of the polygon.\n     * @returns Signed area of the polygon.\n     */\n    getSignedArea() {\n        if (this.isFlatArray)\n            return getPolygonSignedArea(this.points, this.options);\n        return getPolygonSignedAreaPoints(this.points, this.options);\n    }\n    /**\n     * Returns absolute area of the polygon.\n     * @returns Absolute area of the polygon.\n     */\n    getArea() {\n        return Math.abs(this.getSignedArea());\n    }\n    /**\n     * Returns winding direction of the polygon.\n     * @returns Winding direction of the polygon. 1 is for clockwise, -1 for counterclockwise winding direction.\n     */\n    getWindingDirection() {\n        return Math.sign(this.getSignedArea());\n    }\n    /**\n     * Calls the visitor callback for each segment in the polygon.\n     * @param visitor A callback to call for each segment.\n     */\n    forEachSegment(visitor) {\n        if (this.isFlatArray) {\n            forEachSegmentInPolygon(this.points, \n            // eslint-disable-next-line max-params\n            (x1, y1, x2, y2, i1, i2) => {\n                // TODO @igorDykhta original visitor uses arrays for each point, but with flat arrays performance degrades if we allocate points for each segment\n                visitor([x1, y1], [x2, y2], i1, i2);\n            }, this.options);\n        }\n        else {\n            forEachSegmentInPolygonPoints(this.points, visitor, this.options);\n        }\n    }\n    /**\n     * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n     * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n     * @return Returns true if the winding direction was changed.\n     */\n    modifyWindingDirection(direction) {\n        if (this.isFlatArray) {\n            return modifyPolygonWindingDirection(this.points, direction, this.options);\n        }\n        return modifyPolygonWindingDirectionPoints(this.points, direction, this.options);\n    }\n}\n//# sourceMappingURL=polygon.js.map","// math.gl\n// SPDX-License-Identifier: MIT and ISC\n// Copyright (c) vis.gl contributors\nimport { getPolygonSignedArea, DimIndex } from \"./polygon-utils.js\";\n/**\n * Computes a triangulation of a polygon\n * @param positions a flat array of the vertex positions that define the polygon.\n * @param holeIndices an array of hole indices if any (e.g. [5, 8] for a 12-vertex input would mean one hole with vertices 5–7 and another with 8–11).\n * @param dim the number of elements in each vertex. Size `2` will interpret `positions` as `[x0, y0, x1, y1, ...]` and size `3` will interpret `positions` as `[x0, y0, z0, x1, y1, z1, ...]`. Default `2`.\n * @param areas areas of outer polygon and holes as computed by `getPolygonSignedArea()`. Can be optionally supplied to speed up triangulation\n * @returns array of indices into the `positions` array that describes the triangulation of the polygon\n * Adapted from https://github.com/mapbox/earcut\n */\nexport function earcut(positions, holeIndices, dim = 2, areas, plane = 'xy') {\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : positions.length;\n    let outerNode = linkedList(positions, 0, outerLen, dim, true, areas && areas[0], plane);\n    const triangles = [];\n    if (!outerNode || outerNode.next === outerNode.prev)\n        return triangles;\n    let invSize;\n    let maxX;\n    let maxY;\n    let minX;\n    let minY;\n    let x;\n    let y;\n    if (hasHoles)\n        outerNode = eliminateHoles(positions, holeIndices, outerNode, dim, areas, plane);\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (positions.length > 80 * dim) {\n        minX = maxX = positions[0];\n        minY = maxY = positions[1];\n        for (let i = dim; i < outerLen; i += dim) {\n            x = positions[i];\n            y = positions[i + 1];\n            if (x < minX)\n                minX = x;\n            if (y < minY)\n                minY = y;\n            if (x > maxX)\n                maxX = x;\n            if (y > maxY)\n                maxY = y;\n        }\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n    return triangles;\n}\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise, area, plane) {\n    let i;\n    let last;\n    if (area === undefined) {\n        area = getPolygonSignedArea(data, { start, end, size: dim, plane });\n    }\n    let i0 = DimIndex[plane[0]];\n    let i1 = DimIndex[plane[1]];\n    // Note that the signed area calculation in math.gl\n    // has the opposite sign to that which was originally\n    // present in earcut, thus the `< 0` is reversed\n    if (clockwise === area < 0) {\n        for (i = start; i < end; i += dim)\n            last = insertNode(i, data[i + i0], data[i + i1], last);\n    }\n    else {\n        for (i = end - dim; i >= start; i -= dim)\n            last = insertNode(i, data[i + i0], data[i + i1], last);\n    }\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n    return last;\n}\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start)\n        return start;\n    if (!end)\n        end = start;\n    let p = start;\n    let again;\n    do {\n        again = false;\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next)\n                break;\n            again = true;\n        }\n        else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n    return end;\n}\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear)\n        return;\n    // interlink polygon nodes in z-order\n    if (!pass && invSize)\n        indexCurve(ear, minX, minY, invSize);\n    let stop = ear;\n    let prev;\n    let next;\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push((prev.i / dim) | 0);\n            triangles.push((ear.i / dim) | 0);\n            triangles.push((next.i / dim) | 0);\n            removeNode(ear);\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n            continue;\n        }\n        ear = next;\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n                // if this didn't work, try curing all small self-intersections locally\n            }\n            else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n                // as a last resort, try splitting the remaining polygon into two\n            }\n            else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n            break;\n        }\n    }\n}\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    const a = ear.prev;\n    const b = ear;\n    const c = ear.next;\n    if (area(a, b, c) >= 0)\n        return false; // reflex, can't be an ear\n    // now make sure we don't have other points inside the potential ear\n    const ax = a.x;\n    const bx = b.x;\n    const cx = c.x;\n    const ay = a.y;\n    const by = b.y;\n    const cy = c.y;\n    // triangle bbox; min & max are calculated like this for speed\n    const x0 = ax < bx ? (ax < cx ? ax : cx) : bx < cx ? bx : cx;\n    const y0 = ay < by ? (ay < cy ? ay : cy) : by < cy ? by : cy;\n    const x1 = ax > bx ? (ax > cx ? ax : cx) : bx > cx ? bx : cx;\n    const y1 = ay > by ? (ay > cy ? ay : cy) : by > cy ? by : cy;\n    let p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.next;\n    }\n    return true;\n}\nfunction isEarHashed(ear, minX, minY, invSize) {\n    const a = ear.prev;\n    const b = ear;\n    const c = ear.next;\n    if (area(a, b, c) >= 0)\n        return false; // reflex, can't be an ear\n    const ax = a.x;\n    const bx = b.x;\n    const cx = c.x;\n    const ay = a.y;\n    const by = b.y;\n    const cy = c.y;\n    // triangle bbox; min & max are calculated like this for speed\n    const x0 = ax < bx ? (ax < cx ? ax : cx) : bx < cx ? bx : cx;\n    const y0 = ay < by ? (ay < cy ? ay : cy) : by < cy ? by : cy;\n    const x1 = ax > bx ? (ax > cx ? ax : cx) : bx > cx ? bx : cx;\n    const y1 = ay > by ? (ay > cy ? ay : cy) : by > cy ? by : cy;\n    // z-order range for the current triangle bbox;\n    const minZ = zOrder(x0, y0, minX, minY, invSize);\n    const maxZ = zOrder(x1, y1, minX, minY, invSize);\n    let p = ear.prevZ;\n    let n = ear.nextZ;\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            p !== a &&\n            p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.prevZ;\n        if (n.x >= x0 &&\n            n.x <= x1 &&\n            n.y >= y0 &&\n            n.y <= y1 &&\n            n !== a &&\n            n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0)\n            return false;\n        n = n.nextZ;\n    }\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            p !== a &&\n            p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.prevZ;\n    }\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 &&\n            n.x <= x1 &&\n            n.y >= y0 &&\n            n.y <= y1 &&\n            n !== a &&\n            n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0)\n            return false;\n        n = n.nextZ;\n    }\n    return true;\n}\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    let p = start;\n    do {\n        const a = p.prev;\n        const b = p.next.next;\n        if (!equals(a, b) &&\n            intersects(a, p, p.next, b) &&\n            locallyInside(a, b) &&\n            locallyInside(b, a)) {\n            triangles.push((a.i / dim) | 0);\n            triangles.push((p.i / dim) | 0);\n            triangles.push((b.i / dim) | 0);\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n    return filterPoints(p);\n}\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    let a = start;\n    do {\n        let b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                let c = splitPolygon(a, b);\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim, areas, plane) {\n    const queue = [];\n    let i;\n    let len;\n    let start;\n    let end;\n    let list;\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false, areas && areas[i + 1], plane);\n        if (list === list.next)\n            list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n    queue.sort(compareX);\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n    return outerNode;\n}\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    const bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n    const bridgeReverse = splitPolygon(bridge, hole);\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    let p = outerNode;\n    const hx = hole.x;\n    const hy = hole.y;\n    let qx = -Infinity;\n    let m;\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            const x = p.x + ((hy - p.y) * (p.next.x - p.x)) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx)\n                    return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n    if (!m)\n        return null;\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n    const stop = m;\n    const mx = m.x;\n    const my = m.y;\n    let tanMin = Infinity;\n    let tan;\n    p = m;\n    do {\n        if (hx >= p.x &&\n            p.x >= mx &&\n            hx !== p.x &&\n            pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n            if (locallyInside(p, hole) &&\n                (tan < tanMin ||\n                    (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n        p = p.next;\n    } while (p !== stop);\n    return m;\n}\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    let p = start;\n    do {\n        if (p.z === 0)\n            p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n    sortLinked(p);\n}\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    let e;\n    let i;\n    let inSize = 1;\n    let numMerges;\n    let p;\n    let pSize;\n    let q;\n    let qSize;\n    let tail;\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q)\n                    break;\n            }\n            qSize = inSize;\n            while (pSize > 0 || (qSize > 0 && q)) {\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                }\n                else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n                if (tail)\n                    tail.nextZ = e;\n                else\n                    list = e;\n                e.prevZ = tail;\n                tail = e;\n            }\n            p = q;\n        }\n        tail.nextZ = null;\n        inSize *= 2;\n    } while (numMerges > 1);\n    return list;\n}\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = ((x - minX) * invSize) | 0;\n    y = ((y - minY) * invSize) | 0;\n    x = (x | (x << 8)) & 0x00ff00ff;\n    x = (x | (x << 4)) & 0x0f0f0f0f;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n    y = (y | (y << 8)) & 0x00ff00ff;\n    y = (y | (y << 4)) & 0x0f0f0f0f;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n    return x | (y << 1);\n}\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    let p = start;\n    let leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y))\n            leftmost = p;\n        p = p.next;\n    } while (p !== start);\n    return leftmost;\n}\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return ((cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n        (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n        (bx - px) * (cy - py) >= (cx - px) * (by - py));\n}\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return (a.next.i !== b.i &&\n        a.prev.i !== b.i &&\n        !intersectsPolygon(a, b) && // dones't intersect other edges\n        ((locallyInside(a, b) &&\n            locallyInside(b, a) &&\n            middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b))) || // does not create opposite-facing sectors\n            (equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0))); // special zero-length case\n}\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    const o1 = sign(area(p1, q1, p2));\n    const o2 = sign(area(p1, q1, q2));\n    const o3 = sign(area(p2, q2, p1));\n    const o4 = sign(area(p2, q2, q1));\n    if (o1 !== o2 && o3 !== o4)\n        return true; // general case\n    if (o1 === 0 && onSegment(p1, p2, q1))\n        return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1))\n        return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2))\n        return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2))\n        return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n    return false;\n}\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return (q.x <= Math.max(p.x, r.x) &&\n        q.x >= Math.min(p.x, r.x) &&\n        q.y <= Math.max(p.y, r.y) &&\n        q.y >= Math.min(p.y, r.y));\n}\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    let p = a;\n    do {\n        if (p.i !== a.i &&\n            p.next.i !== a.i &&\n            p.i !== b.i &&\n            p.next.i !== b.i &&\n            intersects(p, p.next, a, b))\n            return true;\n        p = p.next;\n    } while (p !== a);\n    return false;\n}\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0\n        ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0\n        : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    let p = a;\n    let inside = false;\n    const px = (a.x + b.x) / 2;\n    const py = (a.y + b.y) / 2;\n    do {\n        if (p.y > py !== p.next.y > py &&\n            p.next.y !== p.y &&\n            px < ((p.next.x - p.x) * (py - p.y)) / (p.next.y - p.y) + p.x)\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n    return inside;\n}\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    const a2 = new Vertex(a.i, a.x, a.y);\n    const b2 = new Vertex(b.i, b.x, b.y);\n    const an = a.next;\n    const bp = b.prev;\n    a.next = b;\n    b.prev = a;\n    a2.next = an;\n    an.prev = a2;\n    b2.next = a2;\n    a2.prev = b2;\n    bp.next = b2;\n    b2.prev = bp;\n    return b2;\n}\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    const p = new Vertex(i, x, y);\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n    }\n    else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n    if (p.prevZ)\n        p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ)\n        p.nextZ.prevZ = p.prevZ;\n}\nclass Vertex {\n    constructor(i, x, y) {\n        // previous and next vertex nodes in a polygon ring\n        this.prev = null;\n        this.next = null;\n        // z-order curve value\n        this.z = 0;\n        // previous and next nodes in z-order\n        this.prevZ = null;\n        this.nextZ = null;\n        // indicates whether this is a steiner point\n        this.steiner = false;\n        this.i = i;\n        this.x = x;\n        this.y = y;\n    }\n}\n//# sourceMappingURL=earcut.js.map","/**\n * Strongly typed accessors for children, since arrow.Data.children[] is untyped\n */\n\nimport { Data } from \"apache-arrow\";\nimport { Vector } from \"apache-arrow\";\nimport { Float } from \"apache-arrow\";\nimport {\n  LineStringData,\n  MultiLineStringData,\n  MultiPointData,\n  MultiPolygonData,\n  PointData,\n  PolygonData,\n} from \"./data\";\nimport {\n  LineStringVector,\n  MultiLineStringVector,\n  MultiPointVector,\n  MultiPolygonVector,\n  PointVector,\n  PolygonVector,\n} from \"./vector\";\n\nexport function getPointChild(input: PointData): Data<Float>;\nexport function getPointChild(input: PointVector): Vector<Float>;\n\nexport function getPointChild(\n  input: PointData | PointVector,\n): Data<Float> | Vector<Float> {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as Data<Float>;\n}\n\nexport function getLineStringChild(input: LineStringData): PointData;\nexport function getLineStringChild(input: LineStringVector): PointVector;\n\nexport function getLineStringChild(\n  input: LineStringData | LineStringVector,\n): PointData | PointVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as PointData;\n}\n\nexport function getPolygonChild(input: PolygonData): LineStringData;\nexport function getPolygonChild(input: PolygonVector): LineStringVector;\n\nexport function getPolygonChild(\n  input: PolygonData | PolygonVector,\n): LineStringData | LineStringVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as LineStringData;\n}\n\nexport function getMultiPointChild(input: MultiPointData): PointData;\nexport function getMultiPointChild(input: MultiPointVector): PointVector;\n\nexport function getMultiPointChild(\n  input: MultiPointData | MultiPointVector,\n): PointData | PointVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as PointData;\n}\n\nexport function getMultiLineStringChild(\n  input: MultiLineStringData,\n): LineStringData;\nexport function getMultiLineStringChild(\n  input: MultiLineStringVector,\n): LineStringVector;\n\nexport function getMultiLineStringChild(\n  input: MultiLineStringData | MultiLineStringVector,\n): LineStringData | LineStringVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as LineStringData;\n}\n\nexport function getMultiPolygonChild(input: MultiPolygonData): PolygonData;\nexport function getMultiPolygonChild(input: MultiPolygonVector): PolygonVector;\n\nexport function getMultiPolygonChild(\n  input: MultiPolygonData | MultiPolygonVector,\n): PolygonData | PolygonVector {\n  if (\"data\" in input) {\n    return input.getChildAt(0)!;\n  }\n\n  return input.children[0] as PolygonData;\n}\n","import { PolygonData } from \"../../data\";\nimport { Polygon } from \"@math.gl/polygon\";\nimport {\n  getLineStringChild,\n  getPointChild,\n  getPolygonChild,\n} from \"../../child\";\n\nexport function makeMathGlPolygon(\n  data: PolygonData,\n  geomIndex: number,\n): Polygon {\n  const geomOffsets = data.valueOffsets;\n  const ringsData = getPolygonChild(data);\n  const ringOffsets = ringsData.valueOffsets;\n\n  const pointData = getLineStringChild(ringsData);\n  const dim = pointData.type.listSize;\n  const flatCoordData = getPointChild(pointData);\n\n  const ringBegin = geomOffsets[geomIndex];\n  const ringEnd = geomOffsets[geomIndex + 1];\n\n  const coordsBegin = ringOffsets[ringBegin];\n  const coordsEnd = ringOffsets[ringEnd];\n\n  const slicedFlatCoords = flatCoordData.values.subarray(\n    coordsBegin * dim,\n    coordsEnd * dim,\n  );\n  return new Polygon(slicedFlatCoords, {\n    size: dim,\n    isClosed: true,\n  });\n}\n","import * as arrow from \"apache-arrow\";\nimport { PolygonData } from \"../data\";\nimport { PolygonVector } from \"../vector\";\nimport { makeMathGlPolygon } from \"./utils/polygon\";\n\n/**\n * Compute the unsigned area of the polygon input.\n */\nexport function area(input: PolygonData): arrow.Data<arrow.Float>;\nexport function area(input: PolygonVector): arrow.Vector<arrow.Float>;\n\nexport function area(\n  input: PolygonData | PolygonVector,\n): arrow.Data<arrow.Float> | arrow.Vector<arrow.Float> {\n  if (\"data\" in input) {\n    return new arrow.Vector(input.data.map((polygonData) => area(polygonData)));\n  }\n\n  const result = new Float64Array(input.length);\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    result[geomIndex] = polygon.getArea();\n  }\n\n  return arrow.makeData({\n    type: new arrow.Float(arrow.Precision.DOUBLE),\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    data: result,\n  });\n}\n\n/**\n * Compute the signed area of the polygon input.\n */\nexport function signedArea(input: PolygonData): arrow.Data<arrow.Float>;\nexport function signedArea(input: PolygonVector): arrow.Vector<arrow.Float>;\n\nexport function signedArea(\n  input: PolygonData | PolygonVector,\n): arrow.Data<arrow.Float> | arrow.Vector<arrow.Float> {\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((polygonData) => signedArea(polygonData)),\n    );\n  }\n\n  const result = new Float64Array(input.length);\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    result[geomIndex] = polygon.getSignedArea();\n  }\n\n  return arrow.makeData({\n    type: new arrow.Float(arrow.Precision.DOUBLE),\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    data: result,\n  });\n}\n","import { earcut as _earcut } from \"@math.gl/polygon\";\nimport { PolygonData } from \"../data\";\nimport { PolygonVector } from \"../vector\";\nimport { getLineStringChild, getPointChild, getPolygonChild } from \"../child\";\n\n/**\n * Run earcut on polygon input\n */\nexport function earcut(input: PolygonData): Uint32Array;\nexport function earcut(input: PolygonVector): Uint32Array[];\n\nexport function earcut(\n  input: PolygonData | PolygonVector,\n): Uint32Array | Uint32Array[] {\n  if (\"data\" in input) {\n    return input.data.map((data) => earcut(data));\n  }\n\n  const trianglesResults: number[][] = [];\n  let outputSize = 0;\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    const triangles = earcutSinglePolygon(input, geomIndex);\n    trianglesResults.push(triangles);\n    outputSize += triangles.length;\n  }\n\n  const outputArray = new Uint32Array(outputSize);\n  let idx = 0;\n  for (const triangles of trianglesResults) {\n    for (const value of triangles) {\n      outputArray[idx] = value;\n      idx += 1;\n    }\n  }\n\n  return outputArray;\n}\n\nfunction earcutSinglePolygon(data: PolygonData, geomIndex: number): number[] {\n  const geomOffsets = data.valueOffsets;\n  const rings = getPolygonChild(data);\n  const ringOffsets = rings.valueOffsets;\n\n  const coords = getLineStringChild(rings);\n  const dim = coords.type.listSize;\n  const flatCoords = getPointChild(coords);\n\n  const ringBegin = geomOffsets[geomIndex];\n  const ringEnd = geomOffsets[geomIndex + 1];\n\n  const coordsBegin = ringOffsets[ringBegin];\n  const coordsEnd = ringOffsets[ringEnd];\n\n  const slicedFlatCoords = flatCoords.values.subarray(\n    coordsBegin * dim,\n    coordsEnd * dim,\n  );\n\n  const initialCoordIndex = ringOffsets[ringBegin];\n  const holeIndices = [];\n  for (let holeRingIdx = ringBegin + 1; holeRingIdx < ringEnd; holeRingIdx++) {\n    holeIndices.push(ringOffsets[holeRingIdx] - initialCoordIndex);\n  }\n  const triangles = _earcut(slicedFlatCoords, holeIndices, dim);\n\n  for (let i = 0; i < triangles.length; i++) {\n    triangles[i] += initialCoordIndex;\n  }\n\n  return triangles;\n}\n","import * as arrow from \"apache-arrow\";\nimport {\n  LineStringVector,\n  MultiLineStringVector,\n  MultiPolygonVector,\n  PolygonVector,\n} from \"../vector\";\nimport {\n  LineStringData,\n  MultiLineStringData,\n  MultiPolygonData,\n  PolygonData,\n} from \"../data\";\nimport { getMultiPolygonChild, getPolygonChild } from \"../child\";\n\n/**\n * Get the exterior of a PolygonVector or PolygonData\n */\nexport function getPolygonExterior(input: PolygonVector): LineStringVector;\nexport function getPolygonExterior(input: PolygonData): LineStringData;\n\nexport function getPolygonExterior(\n  input: PolygonVector | PolygonData,\n): LineStringVector | LineStringData {\n  if (\"data\" in input) {\n    return new arrow.Vector(input.data.map((data) => getPolygonExterior(data)));\n  }\n\n  return getPolygonChild(input);\n}\n\n/**\n * Get the exterior of a MultiPolygonVector or MultiPolygonData\n */\nexport function getMultiPolygonExterior(\n  input: MultiPolygonVector,\n): MultiLineStringVector;\nexport function getMultiPolygonExterior(\n  input: MultiPolygonData,\n): MultiLineStringData;\n\nexport function getMultiPolygonExterior(\n  input: MultiPolygonVector | MultiPolygonData,\n): MultiLineStringVector | MultiLineStringData {\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((data) => getMultiPolygonExterior(data)),\n    );\n  }\n\n  return getMultiPolygonChild(input);\n}\n","import {\n  Binary,\n  Struct,\n  Float,\n  List,\n  FixedSizeList,\n  DataType,\n} from \"apache-arrow\";\n\n// Note: this apparently has to be arrow.Float and not arrow.Float64 to ensure\n// that recreating a data instance with arrow.makeData type checks using the\n// input's data type.\nexport type InterleavedCoord = FixedSizeList<Float>;\nexport type SeparatedCoord = Struct<{\n  x: Float;\n  y: Float;\n}>;\n// TODO: support separated coords\nexport type Coord = InterleavedCoord; // | SeparatedCoord;\nexport type Point = Coord;\nexport type LineString = List<Coord>;\nexport type Polygon = List<List<Coord>>;\nexport type MultiPoint = List<Coord>;\nexport type MultiLineString = List<List<Coord>>;\nexport type MultiPolygon = List<List<List<Coord>>>;\nexport type GeoArrowType =\n  | Point\n  | LineString\n  | Polygon\n  | MultiPoint\n  | MultiLineString\n  | MultiPolygon;\nexport type WKB = Binary;\n\n/** Check that the given type is a Point data type */\nexport function isPoint(type: DataType): type is Point {\n  if (DataType.isFixedSizeList(type)) {\n    // Check list size\n    if (![2, 3, 4].includes(type.listSize)) {\n      return false;\n    }\n\n    // Check child of FixedSizeList is floating type\n    if (!DataType.isFloat(type.children[0])) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (DataType.isStruct(type)) {\n    // Check number of children\n    if (![2, 3, 4].includes(type.children.length)) {\n      return false;\n    }\n\n    // Check that children have correct field names\n    if (\n      !type.children.every((field) => [\"x\", \"y\", \"z\", \"m\"].includes(field.name))\n    ) {\n      return false;\n    }\n\n    if (!type.children.every((field) => DataType.isFloat(field))) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nexport function isLineString(type: DataType): type is LineString {\n  // Check the outer type is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a point type\n  if (!isPoint(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isPolygon(type: DataType): type is Polygon {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a linestring vector\n  if (!isLineString(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isMultiPoint(type: DataType): type is MultiPoint {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a point vector\n  if (!isPoint(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isMultiLineString(type: DataType): type is MultiLineString {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a linestring vector\n  if (!isLineString(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isMultiPolygon(type: DataType): type is MultiPolygon {\n  // Check the outer vector is a List\n  if (!DataType.isList(type)) {\n    return false;\n  }\n\n  // Check the child is a polygon vector\n  if (!isPolygon(type.children[0].type)) {\n    return false;\n  }\n\n  return true;\n}\n","import { Data } from \"apache-arrow\";\nimport {\n  WKB,\n  Point,\n  LineString,\n  Polygon,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n  isPoint,\n  isLineString,\n  isPolygon,\n  isMultiPoint,\n  isMultiLineString,\n  isMultiPolygon,\n} from \"./type\";\n\nexport type PointData = Data<Point>;\nexport type LineStringData = Data<LineString>;\nexport type PolygonData = Data<Polygon>;\nexport type MultiPointData = Data<MultiPoint>;\nexport type MultiLineStringData = Data<MultiLineString>;\nexport type MultiPolygonData = Data<MultiPolygon>;\nexport type GeoArrowData =\n  | PointData\n  | LineStringData\n  | PolygonData\n  | MultiPointData\n  | MultiLineStringData\n  | MultiPolygonData;\nexport type WKBData = Data<WKB>;\n\nexport function isPointData(data: Data): data is PointData {\n  return isPoint(data.type);\n}\n\nexport function isLineStringData(data: Data): data is LineStringData {\n  return isLineString(data.type);\n}\n\nexport function isPolygonData(data: Data): data is PolygonData {\n  return isPolygon(data.type);\n}\n\nexport function isMultiPointData(data: Data): data is MultiPointData {\n  return isMultiPoint(data.type);\n}\n\nexport function isMultiLineStringData(data: Data): data is MultiLineStringData {\n  return isMultiLineString(data.type);\n}\n\nexport function isMultiPolygonData(data: Data): data is MultiPolygonData {\n  return isMultiPolygon(data.type);\n}\n","export function assert(condition: boolean, message?: string) {\n  if (!condition) {\n    throw new Error(`assertion failed ${message}`);\n  }\n}\n\nexport function assertFalse(message?: string): never {\n  throw new Error(`assertion failed ${message}`);\n}\n","import * as arrow from \"apache-arrow\";\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from \"../type\";\nimport {\n  GeoArrowData,\n  LineStringData,\n  MultiLineStringData,\n  MultiPointData,\n  MultiPolygonData,\n  PointData,\n  PolygonData,\n  isLineStringData,\n  isMultiLineStringData,\n  isMultiPointData,\n  isMultiPolygonData,\n  isPointData,\n  isPolygonData,\n} from \"../data\";\nimport {\n  getLineStringChild,\n  getMultiPolygonChild,\n  getPointChild,\n  getPolygonChild,\n} from \"../child\";\nimport { assert, assertFalse } from \"./utils/assert\";\n\n// For now, simplify our lives by focusing on 2D\ntype MapCoordsCallback = (x: number, y: number) => [number, number];\n\nexport function mapCoords(\n  input: PointData,\n  callback: MapCoordsCallback,\n): PointData;\nexport function mapCoords(\n  input: LineStringData,\n  callback: MapCoordsCallback,\n): LineStringData;\nexport function mapCoords(\n  input: PolygonData,\n  callback: MapCoordsCallback,\n): PolygonData;\nexport function mapCoords(\n  input: MultiPointData,\n  callback: MapCoordsCallback,\n): MultiPointData;\nexport function mapCoords(\n  input: MultiLineStringData,\n  callback: MapCoordsCallback,\n): MultiLineStringData;\nexport function mapCoords(\n  input: MultiPolygonData,\n  callback: MapCoordsCallback,\n): MultiPolygonData;\n\n// TODO: ideally I could use <T extends GeoArrowType> here...\nexport function mapCoords(\n  input: GeoArrowData,\n  callback: MapCoordsCallback,\n): GeoArrowData {\n  if (isPointData(input)) {\n    return mapCoords0(input, callback);\n  }\n  if (isLineStringData(input)) {\n    return mapCoords1(input, callback);\n  }\n  if (isPolygonData(input)) {\n    return mapCoords2(input, callback);\n  }\n  if (isMultiPointData(input)) {\n    return mapCoords1(input, callback);\n  }\n  if (isMultiLineStringData(input)) {\n    return mapCoords2(input, callback);\n  }\n  if (isMultiPolygonData(input)) {\n    return mapCoords3(input, callback);\n  }\n\n  assertFalse();\n}\n\nexport function mapCoords0<T extends Point>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  assert(input.type.listSize === 2, \"expected 2D\");\n  const coordsData = getPointChild(input);\n  const flatCoords = coordsData.values;\n\n  const outputCoords = new Float64Array(flatCoords.length);\n  for (let coordIdx = 0; coordIdx < input.length; coordIdx++) {\n    const x = flatCoords[coordIdx * 2];\n    const y = flatCoords[coordIdx * 2 + 1];\n    const [newX, newY] = callback(x, y);\n    outputCoords[coordIdx * 2] = newX;\n    outputCoords[coordIdx * 2 + 1] = newY;\n  }\n\n  const newCoordsData = arrow.makeData({\n    type: coordsData.type,\n    length: coordsData.length,\n    nullCount: coordsData.nullCount,\n    nullBitmap: coordsData.nullBitmap,\n    data: outputCoords,\n  });\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newCoordsData,\n  });\n}\n\n/**\n * NOTE: the callback must be infallible as this does not take geometry validity\n * into effect for operating on coords\n */\nexport function mapCoords1<T extends LineString | MultiPoint>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  const pointData = getLineStringChild(input);\n  const newPointData = mapCoords0(pointData, callback);\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newPointData,\n    valueOffsets: input.valueOffsets,\n  });\n}\n\n/**\n * NOTE: the callback must be infallible as this does not take geometry validity\n * into effect for operating on coords\n */\nexport function mapCoords2<T extends Polygon | MultiLineString>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  const linestringData = getPolygonChild(input);\n  const newLinestringData = mapCoords1(linestringData, callback);\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newLinestringData,\n    valueOffsets: input.valueOffsets,\n  });\n}\n\n/**\n * NOTE: the callback must be infallible as this does not take geometry validity\n * into effect for operating on coords\n */\nexport function mapCoords3<T extends MultiPolygon>(\n  input: arrow.Data<T>,\n  callback: MapCoordsCallback,\n): arrow.Data<T> {\n  const polygonData = getMultiPolygonChild(input);\n  const newPolygonData = mapCoords2(polygonData, callback);\n\n  return arrow.makeData({\n    type: input.type,\n    length: input.length,\n    nullCount: input.nullCount,\n    nullBitmap: input.nullBitmap,\n    child: newPolygonData,\n    valueOffsets: input.valueOffsets,\n  });\n}\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), \"+proj=utm +zone=\" + i + \" +datum=WGS84 +units=m\");\n    defs('EPSG:' + (32700 + i), \"+proj=utm +zone=\" + i + \" +south +datum=WGS84 +units=m\");\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  'mm': {to_meter: 0.001},\n  'cm': {to_meter: 0.01},\n  'ft': {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937},\n  'fath': {to_meter: 1.8288},\n  'kmi': {to_meter: 1852},\n  'us-ch': {to_meter: 20.1168402336805},\n  'us-mi': {to_meter: 1609.34721869444},\n  'km': {to_meter: 1000},\n  'ind-ft': {to_meter: 0.30479841},\n  'ind-yd': {to_meter: 0.91439523},\n  'mi': {to_meter: 1609.344},\n  'yd': {to_meter: 0.9144},\n  'ch': {to_meter: 20.1168},\n  'link': {to_meter: 0.201168},\n  'dm': {to_meter: 0.01},\n  'in': {to_meter: 0.0254},\n  'ind-ch': {to_meter: 20.11669506},\n  'us-in': {to_meter: 0.025400050800101},\n  'us-yd': {to_meter: 0.914401828803658}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r: function(v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var datums = {\n  wgs84: {\n    towgs84: \"0,0,0\",\n    ellipse: \"WGS84\",\n    datumName: \"WGS84\"\n  },\n  ch1903: {\n    towgs84: \"674.374,15.056,405.346\",\n    ellipse: \"bessel\",\n    datumName: \"swiss\"\n  },\n  ggrs87: {\n    towgs84: \"-199.87,74.79,246.62\",\n    ellipse: \"GRS80\",\n    datumName: \"Greek_Geodetic_Reference_System_1987\"\n  },\n  nad83: {\n    towgs84: \"0,0,0\",\n    ellipse: \"GRS80\",\n    datumName: \"North_American_Datum_1983\"\n  },\n  nad27: {\n    nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n    ellipse: \"clrk66\",\n    datumName: \"North_American_Datum_1927\"\n  },\n  potsdam: {\n    towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n    ellipse: \"bessel\",\n    datumName: \"Potsdam Rauenberg 1950 DHDN\"\n  },\n  carthage: {\n    towgs84: \"-263.0,6.0,431.0\",\n    ellipse: \"clark80\",\n    datumName: \"Carthage 1934 Tunisia\"\n  },\n  hermannskogel: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Hermannskogel\"\n  },\n  mgi: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Militar-Geographische Institut\",\n  },\n  osni52: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"airy\",\n    datumName: \"Irish National\"\n  },\n  ire65: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"mod_airy\",\n    datumName: \"Ireland 1965\"\n  },\n  rassadiran: {\n    towgs84: \"-133.63,-157.5,-158.62\",\n    ellipse: \"intl\",\n    datumName: \"Rassadiran\"\n  },\n  nzgd49: {\n    towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n    ellipse: \"intl\",\n    datumName: \"New Zealand Geodetic Datum 1949\"\n  },\n  osgb36: {\n    towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n    ellipse: \"airy\",\n    datumName: \"Ordnance Survey of Great Britain 1936\"\n  },\n  s_jtsk: {\n    towgs84: \"589,76,480\",\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n    ellipse: \"intl\",\n    datumName: \"Reseau National Belge 1972\"\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.slice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from \"../common/adjust_lon\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n  paramLatSq = paramLat * paramLat,\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat) /\n  (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n      NITER = 12,\n      paramLat = p.y,\n      paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n        break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)) /\n          Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"eqearth\", \"Equal Earth\", \"Equal_Earth\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lat from \"../common/adjust_lat\";\nimport adjust_lon from \"../common/adjust_lon\";\nimport hypot from \"../common/hypot\";\nimport pj_enfn from \"../common/pj_enfn\";\nimport pj_inv_mlfn from \"../common/pj_inv_mlfn\";\nimport pj_mlfn from \"../common/pj_mlfn\";\nimport { HALF_PI } from \"../constants/values\";\n\nvar EPS10 = 1e-10;\n\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    }\n    else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  }\n  else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = [\"bonne\", \"Bonne (Werner lat_1=90)\"];\nexport default {\n  init: init,\n  names: names\n};","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import * as arrow from \"apache-arrow\";\nimport proj4 from \"proj4\";\nimport { GeoArrowType } from \"../type\";\nimport { mapCoords } from \"./coords\";\n\n/**\n * Reproject using proj4\n */\nexport function reproject<T extends GeoArrowType>(\n  input: arrow.Data<T>,\n  fromProjection: string,\n  toProjection: string,\n): arrow.Data<T>;\nexport function reproject<T extends GeoArrowType>(\n  input: arrow.Vector<T>,\n  fromProjection: string,\n  toProjection: string,\n): arrow.Vector<T>;\n\nexport function reproject<T extends GeoArrowType>(\n  input: arrow.Data<T> | arrow.Vector<T>,\n  fromProjection: string,\n  toProjection: string,\n): arrow.Data<T> | arrow.Vector<T> {\n  const projectionFn = proj4(fromProjection, toProjection);\n  // Check if an arrow.Vector\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((data) => reprojectData(data, projectionFn)),\n    );\n  }\n\n  return reprojectData(input, projectionFn);\n}\n\n/**\n * Reproject a single Data instance\n */\nfunction reprojectData<T extends GeoArrowType>(\n  input: arrow.Data<T>,\n  projectionFn: proj4.Converter,\n): arrow.Data<T> {\n  // Avoid extra object creation\n  const stack = [0, 0];\n  const callback = (x: number, y: number) => {\n    stack[0] = x;\n    stack[1] = y;\n    return projectionFn.forward(stack) as [number, number];\n  };\n\n  // @ts-expect-error I have a mismatch between generic T extends GeoArrowType\n  // and concrete GeoArrowData typing\n  return mapCoords(input, callback);\n}\n","/**\n * Enum holding GeoArrow extension type names\n */\nexport enum EXTENSION_NAME {\n  POINT = \"geoarrow.point\",\n  LINESTRING = \"geoarrow.linestring\",\n  POLYGON = \"geoarrow.polygon\",\n  MULTIPOINT = \"geoarrow.multipoint\",\n  MULTILINESTRING = \"geoarrow.multilinestring\",\n  MULTIPOLYGON = \"geoarrow.multipolygon\",\n}\n","import * as arrow from \"apache-arrow\";\nimport {\n  LineStringVector,\n  MultiPolygonVector,\n  PointVector,\n  PolygonVector,\n} from \"../vector.js\";\nimport { PointData } from \"../data.js\";\nimport {\n  getLineStringChild,\n  getMultiPolygonChild,\n  getPointChild,\n  getPolygonChild,\n} from \"../child.js\";\nimport { EXTENSION_NAME } from \"../constants.js\";\n\nclass Bbox {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n\n  constructor() {\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = -Infinity;\n    this.maxY = -Infinity;\n  }\n\n  updateBbox(other: Bbox) {\n    if (other.minX < this.minX) {\n      this.minX = other.minX;\n    }\n    if (other.minY < this.minY) {\n      this.minY = other.minY;\n    }\n    if (other.maxX > this.maxX) {\n      this.maxX = other.maxX;\n    }\n    if (other.maxY > this.maxY) {\n      this.maxY = other.maxY;\n    }\n  }\n\n  updateCoord(x: number, y: number) {\n    if (x < this.minX) {\n      this.minX = x;\n    }\n    if (y < this.minY) {\n      this.minY = y;\n    }\n    if (x > this.maxX) {\n      this.maxX = x;\n    }\n    if (y > this.maxY) {\n      this.maxY = y;\n    }\n  }\n}\n\nexport function totalBounds(vector: arrow.Vector, field: arrow.Field): Bbox {\n  switch (field.metadata.get(\"ARROW:extension:name\")) {\n    case EXTENSION_NAME.POINT:\n      return totalBoundsNest0(vector);\n    case EXTENSION_NAME.LINESTRING:\n    case EXTENSION_NAME.MULTIPOINT:\n      return totalBoundsNest1(vector);\n    case EXTENSION_NAME.POLYGON:\n    case EXTENSION_NAME.MULTILINESTRING:\n      return totalBoundsNest2(vector);\n    case EXTENSION_NAME.MULTIPOLYGON:\n      return totalBoundsNest3(vector);\n    default:\n      throw new Error(\"Unknown ext type name\");\n  }\n}\n\nfunction coordsBbox(data: PointData): Bbox {\n  const coordsData = getPointChild(data);\n  const flatCoords = coordsData.values;\n  const bbox = new Bbox();\n\n  for (let coordIdx = 0; coordIdx < data.length; coordIdx++) {\n    const x = flatCoords[coordIdx * 2];\n    const y = flatCoords[coordIdx * 2 + 1];\n    bbox.updateCoord(x, y);\n  }\n\n  return bbox;\n}\n\nfunction totalBoundsNest0(vector: PointVector): Bbox {\n  const bbox = new Bbox();\n  for (const data of vector.data) {\n    bbox.updateBbox(coordsBbox(data));\n  }\n\n  return bbox;\n}\n\nfunction totalBoundsNest1(vector: LineStringVector): Bbox {\n  const pointVector = getLineStringChild(vector);\n  return totalBoundsNest0(pointVector);\n}\n\nfunction totalBoundsNest2(vector: PolygonVector): Bbox {\n  const lineStringVector = getPolygonChild(vector);\n  return totalBoundsNest1(lineStringVector);\n}\n\nfunction totalBoundsNest3(vector: MultiPolygonVector): Bbox {\n  const polygonVector = getMultiPolygonChild(vector);\n  return totalBoundsNest2(polygonVector);\n}\n","import * as arrow from \"apache-arrow\";\nimport { PolygonData } from \"../data\";\nimport { PolygonVector } from \"../vector\";\nimport { makeMathGlPolygon } from \"./utils/polygon\";\nimport { WINDING as _WINDING } from \"@math.gl/polygon\";\n\nexport enum Winding {\n  CLOCKWISE = _WINDING.CLOCKWISE,\n  COUNTER_CLOCKWISE = _WINDING.COUNTER_CLOCKWISE,\n}\n\n/**\n * Compute the winding direction of the polygon input.\n *\n * The result is a boolean Data or Vector, where `true` means **Clockwise**\n * winding order and `false` means **Counter Clockwise** winding order.\n */\nexport function windingDirection(input: PolygonData): arrow.Data<arrow.Bool>;\nexport function windingDirection(\n  input: PolygonVector,\n): arrow.Vector<arrow.Bool>;\n\nexport function windingDirection(\n  input: PolygonData | PolygonVector,\n): arrow.Data<arrow.Bool> | arrow.Vector<arrow.Bool> {\n  if (\"data\" in input) {\n    return new arrow.Vector(\n      input.data.map((polygonData) => windingDirection(polygonData)),\n    );\n  }\n\n  let builder = new arrow.BoolBuilder({\n    type: new arrow.Bool(),\n    nullValues: [null],\n  });\n  // Force-allocate once for length of buffer\n  builder.set(input.length - 1, null);\n\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    if (!input.getValid(geomIndex)) {\n      builder.setValid(geomIndex, false);\n      continue;\n    }\n\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    let winding = polygon.getWindingDirection();\n    builder.set(geomIndex, winding === Winding.CLOCKWISE);\n  }\n\n  return builder.finish().flush();\n}\n\n/**\n * **Mutate** the existing Polygon data or vector with the desired winding\n */\nexport function modifyWindingDirection(\n  input: PolygonData,\n  winding: Winding,\n): void;\nexport function modifyWindingDirection(\n  input: PolygonVector,\n  winding: Winding,\n): void;\n\nexport function modifyWindingDirection(\n  input: PolygonData | PolygonVector,\n  winding: Winding,\n): void {\n  if (\"data\" in input) {\n    input.data.forEach((polygonData) =>\n      modifyWindingDirection(polygonData, winding),\n    );\n    return;\n  }\n\n  for (let geomIndex = 0; geomIndex < input.length; geomIndex++) {\n    // This polygon is a reference onto the PolygonData, so mutating it will\n    // mutate the PolygonData\n    let polygon = makeMathGlPolygon(input, geomIndex);\n    polygon.modifyWindingDirection(winding);\n  }\n}\n","import { Vector } from \"apache-arrow\";\nimport {\n  Point,\n  LineString,\n  Polygon,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n  isPoint,\n  isLineString,\n  isPolygon,\n  isMultiPoint,\n  isMultiLineString,\n  isMultiPolygon,\n} from \"./type\";\n\nexport type PointVector = Vector<Point>;\nexport type LineStringVector = Vector<LineString>;\nexport type PolygonVector = Vector<Polygon>;\nexport type MultiPointVector = Vector<MultiPoint>;\nexport type MultiLineStringVector = Vector<MultiLineString>;\nexport type MultiPolygonVector = Vector<MultiPolygon>;\nexport type GeoArrowVector =\n  | PointVector\n  | LineStringVector\n  | PolygonVector\n  | MultiPointVector\n  | MultiLineStringVector\n  | MultiPolygonVector;\n\nexport function isPointVector(vector: Vector): vector is PointVector {\n  return isPoint(vector.type);\n}\n\nexport function isLineStringVector(vector: Vector): vector is LineStringVector {\n  return isLineString(vector.type);\n}\n\nexport function isPolygonVector(vector: Vector): vector is PolygonVector {\n  return isPolygon(vector.type);\n}\n\nexport function isMultiPointVector(vector: Vector): vector is MultiPointVector {\n  return isMultiPoint(vector.type);\n}\n\nexport function isMultiLineStringVector(\n  vector: Vector,\n): vector is MultiLineStringVector {\n  return isMultiLineString(vector.type);\n}\n\nexport function isMultiPolygonVector(\n  vector: Vector,\n): vector is MultiPolygonVector {\n  return isMultiPolygon(vector.type);\n}\n","import { Data } from \"apache-arrow\";\nimport { DataType } from \"apache-arrow\";\nimport { Vector } from \"apache-arrow\";\nimport { BufferType } from \"apache-arrow\";\nimport type { Buffers } from \"apache-arrow/data\";\n\ntype TypedArray =\n  | Uint8Array\n  | Uint8ClampedArray\n  | Uint16Array\n  | Uint32Array\n  | Int8Array\n  | Int16Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n\n/**\n * Clone an Arrow JS Data or Vector, detaching from an existing ArrayBuffer if\n * it is shared with other.\n *\n * The purpose of this function is to enable transferring a `Data` instance,\n * e.g. to a web worker, without neutering any other data.\n *\n * Any internal buffers that are a slice of a larger `ArrayBuffer` (i.e. where\n * the typed array's `byteOffset` is not `0` and where its `byteLength` does not\n * match its `array.buffer.byteLength`) are copied into new `ArrayBuffers`.\n *\n * If `force` is `true`, always clone internal buffers, even if not shared. If\n * the default, `false`, any internal buffers that are **not** a slice of a\n * larger `ArrayBuffer` will not be copied.\n */\nexport function hardClone<T extends DataType>(\n  input: Data<T>,\n  force?: boolean,\n): Data<T>;\nexport function hardClone<T extends DataType>(\n  input: Vector<T>,\n  force?: boolean,\n): Vector<T>;\n\nexport function hardClone<T extends DataType>(\n  data: Data<T> | Vector<T>,\n  force: boolean = false,\n): Data<T> | Vector<T> {\n  // Check if `data` is an arrow.Vector\n  if (\"data\" in data) {\n    return new Vector(data.data.map((data) => hardClone(data, force)));\n  }\n\n  // Clone each of the children, recursively\n  const clonedChildren: Data[] = [];\n  for (const childData of data.children) {\n    clonedChildren.push(hardClone(childData, force));\n  }\n\n  // Clone the dictionary if there is one\n  let clonedDictionary: Vector | undefined = undefined;\n  if (data.dictionary !== undefined) {\n    clonedDictionary = hardClone(data.dictionary, force);\n  }\n\n  // Buffers can have up to four entries. Each of these can be `undefined` for\n  // one or more array types.\n  //\n  // - OFFSET: value offsets for variable size list types\n  // - DATA: the underlying data\n  // - VALIDITY: the null buffer. This may be empty or undefined if all elements\n  //   are non-null/valid.\n  // - TYPE: type ids for a union type.\n  const clonedBuffers: Buffers<T> = {\n    [BufferType.OFFSET]: cloneBuffer(data.buffers[BufferType.OFFSET], force),\n    [BufferType.DATA]: cloneBuffer(data.buffers[BufferType.DATA], force),\n    [BufferType.VALIDITY]: cloneBuffer(\n      data.buffers[BufferType.VALIDITY],\n      force,\n    ),\n    [BufferType.TYPE]: cloneBuffer(data.buffers[BufferType.TYPE], force),\n  };\n\n  // Note: the data.offset is passed on so that a sliced Data instance will not\n  // be \"un-sliced\". However keep in mind that this means we're cloning the\n  // _original backing buffer_, not only the portion of the Data that was\n  // sliced.\n  return new Data(\n    data.type,\n    data.offset,\n    data.length,\n    // @ts-expect-error _nullCount is protected. We're using it here to mimic\n    // `Data.clone`\n    data._nullCount,\n    clonedBuffers,\n    clonedChildren,\n    clonedDictionary,\n  );\n}\n\n/**\n * Test whether an Data instance is a slice of a larger `ArrayBuffer`.\n */\nexport function isShared<T extends DataType>(\n  data: Data<T> | Vector<T>,\n): boolean {\n  // Loop over arrow.Vector\n  if (\"data\" in data) {\n    return data.data.some((data) => isShared(data));\n  }\n\n  // Check child data\n  for (const childData of data.children) {\n    if (isShared(childData)) {\n      return true;\n    }\n  }\n\n  // Check dictionary\n  if (data.dictionary !== undefined) {\n    if (isShared(data.dictionary)) {\n      return true;\n    }\n  }\n\n  const bufferTypes = [\n    BufferType.OFFSET,\n    BufferType.DATA,\n    BufferType.VALIDITY,\n    BufferType.TYPE,\n  ];\n  for (const bufferType of bufferTypes) {\n    if (\n      data.buffers[bufferType] !== undefined &&\n      isTypedArraySliced(data.buffers[bufferType])\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the current typed array is a partial slice on a larger\n * ArrayBuffer\n */\nfunction isTypedArraySliced(arr: TypedArray): boolean {\n  return !(arr.byteOffset === 0 && arr.byteLength === arr.buffer.byteLength);\n}\n\n/**\n * If a slice of a larger ArrayBuffer, clone to a fresh `ArrayBuffer`.\n *\n * If `force` is `true`, always clone the array, even if not shared.\n */\nfunction cloneBuffer<A extends TypedArray | undefined>(\n  arr: A,\n  force: boolean,\n): A {\n  // Not all buffer types are defined for every type of Arrow array. E.g.\n  // `arrow.BufferType.TYPE` is only defined for the Union type.\n  if (arr === undefined) {\n    return arr;\n  }\n\n  // The current array is not a part of a larger ArrayBuffer, don't clone it\n  if (!force && !isTypedArraySliced(arr)) {\n    return arr;\n  }\n\n  // Note: TypedArray.slice() **copies** into a new ArrayBuffer\n\n  // @ts-expect-error 'Uint8Array' is assignable to the constraint of type 'A',\n  // but 'A' could be instantiated with a different subtype of constraint\n  // 'TypedArray'\n  // We know from arr.slice that it will always return the same\n  return arr.slice();\n}\n","import { DataType } from \"apache-arrow\";\nimport { BufferType } from \"apache-arrow\";\nimport { Data } from \"apache-arrow\";\nimport { Vector } from \"apache-arrow\";\nimport { hardClone } from \"./hard-clone\";\n\n/**\n * Prepare a `Data` or `Vector` for a `postMessage` or `structuredClone`.\n */\nexport function preparePostMessage<T extends DataType>(\n  input: Data<T>,\n  forceClone?: boolean,\n): [Data<T>, ArrayBuffer[]];\nexport function preparePostMessage<T extends DataType>(\n  input: Vector<T>,\n  forceClone?: boolean,\n): [Vector<T>, ArrayBuffer[]];\n\nexport function preparePostMessage<T extends DataType>(\n  input: Data<T> | Vector<T>,\n  forceClone: boolean = false,\n): [Data<T> | Vector<T>, ArrayBuffer[]] {\n  // Check if `input` is an arrow.Vector\n  if (\"data\" in input) {\n    const postMessageDatas: Data<T>[] = [];\n    const transferArrayBuffers: ArrayBuffer[] = [];\n    for (const data of input.data) {\n      const [postMessageData, arrayBuffers] = preparePostMessage(data);\n      postMessageDatas.push(postMessageData);\n      transferArrayBuffers.push(...arrayBuffers);\n    }\n    const vector = new Vector(postMessageDatas);\n    return [vector, transferArrayBuffers];\n  }\n\n  // Force clone into non-shared backing ArrayBuffers\n  // Note: this only clones if necessary, unless forceClone is `true`.\n  input = hardClone(input, forceClone);\n\n  const transferArrayBuffers: ArrayBuffer[] = [];\n\n  // Handle children\n  for (let childIdx = 0; childIdx < input.children.length; childIdx++) {\n    const childData = input.children[childIdx];\n    const [postMessageData, arrayBuffers] = preparePostMessage(childData);\n    input.children[childIdx] = postMessageData;\n    transferArrayBuffers.push(...arrayBuffers);\n  }\n\n  // Handle dictionary\n  if (input.dictionary !== undefined) {\n    const [postMessageVector, arrayBuffers] = preparePostMessage(\n      input.dictionary,\n    );\n    input.dictionary = postMessageVector;\n    transferArrayBuffers.push(...arrayBuffers);\n  }\n\n  // Get references to the underlying buffers.\n\n  // We don't use a loop over these four to ensure accurate typing (well, typing\n  // doesn't seem to work on `DATA` and `TYPE`.)\n  if (input.buffers[BufferType.OFFSET] !== undefined) {\n    // @ts-expect-error\n    transferArrayBuffers.push(input.buffers[BufferType.OFFSET].buffer);\n  }\n  if (input.buffers[BufferType.DATA] !== undefined) {\n    // @ts-expect-error\n    transferArrayBuffers.push(input.buffers[BufferType.DATA].buffer);\n  }\n  if (input.buffers[BufferType.VALIDITY] !== undefined) {\n    transferArrayBuffers.push(input.buffers[BufferType.VALIDITY].buffer);\n  }\n  if (input.buffers[BufferType.TYPE] !== undefined) {\n    // @ts-expect-error\n    transferArrayBuffers.push(input.buffers[BufferType.TYPE].buffer);\n  }\n\n  return [input, transferArrayBuffers];\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/**\n * Converts an integer as a number or bigint to a number, throwing an error if the input cannot safely be represented as a number.\n */\nexport function bigIntToNumber(number) {\n    if (typeof number === 'bigint' && (number < Number.MIN_SAFE_INTEGER || number > Number.MAX_SAFE_INTEGER)) {\n        throw new TypeError(`${number} is not safe to convert to a number.`);\n    }\n    return Number(number);\n}\n\n//# sourceMappingURL=bigint.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var UnionMode;\n(function (UnionMode) {\n    UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n    UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n})(UnionMode || (UnionMode = {}));\n\n//# sourceMappingURL=union-mode.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var Precision;\n(function (Precision) {\n    Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n    Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n    Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n})(Precision || (Precision = {}));\n\n//# sourceMappingURL=precision.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var DateUnit;\n(function (DateUnit) {\n    DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n    DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n})(DateUnit || (DateUnit = {}));\n\n//# sourceMappingURL=date-unit.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n    TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n    TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n    TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n})(TimeUnit || (TimeUnit = {}));\n\n//# sourceMappingURL=time-unit.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nexport var IntervalUnit;\n(function (IntervalUnit) {\n    IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n    IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n    IntervalUnit[IntervalUnit[\"MONTH_DAY_NANO\"] = 2] = \"MONTH_DAY_NANO\";\n})(IntervalUnit || (IntervalUnit = {}));\n\n//# sourceMappingURL=interval-unit.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport { MetadataVersion } from './fb/metadata-version.mjs';\nexport { UnionMode } from './fb/union-mode.mjs';\nexport { Precision } from './fb/precision.mjs';\nexport { DateUnit } from './fb/date-unit.mjs';\nexport { TimeUnit } from './fb/time-unit.mjs';\nexport { IntervalUnit } from './fb/interval-unit.mjs';\nexport { MessageHeader } from './fb/message-header.mjs';\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only non-negative enum values are written to an Arrow IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport var Type;\n(function (Type) {\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    Type[Type[\"Float\"] = 3] = \"Float\";\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    Type[Type[\"List\"] = 12] = \"List\";\n    Type[Type[\"Struct\"] = 13] = \"Struct\";\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    Type[Type[\"Duration\"] = 18] = \"Duration\";\n    Type[Type[\"LargeBinary\"] = 19] = \"LargeBinary\";\n    Type[Type[\"LargeUtf8\"] = 20] = \"LargeUtf8\";\n    Type[Type[\"Dictionary\"] = -1] = \"Dictionary\";\n    Type[Type[\"Int8\"] = -2] = \"Int8\";\n    Type[Type[\"Int16\"] = -3] = \"Int16\";\n    Type[Type[\"Int32\"] = -4] = \"Int32\";\n    Type[Type[\"Int64\"] = -5] = \"Int64\";\n    Type[Type[\"Uint8\"] = -6] = \"Uint8\";\n    Type[Type[\"Uint16\"] = -7] = \"Uint16\";\n    Type[Type[\"Uint32\"] = -8] = \"Uint32\";\n    Type[Type[\"Uint64\"] = -9] = \"Uint64\";\n    Type[Type[\"Float16\"] = -10] = \"Float16\";\n    Type[Type[\"Float32\"] = -11] = \"Float32\";\n    Type[Type[\"Float64\"] = -12] = \"Float64\";\n    Type[Type[\"DateDay\"] = -13] = \"DateDay\";\n    Type[Type[\"DateMillisecond\"] = -14] = \"DateMillisecond\";\n    Type[Type[\"TimestampSecond\"] = -15] = \"TimestampSecond\";\n    Type[Type[\"TimestampMillisecond\"] = -16] = \"TimestampMillisecond\";\n    Type[Type[\"TimestampMicrosecond\"] = -17] = \"TimestampMicrosecond\";\n    Type[Type[\"TimestampNanosecond\"] = -18] = \"TimestampNanosecond\";\n    Type[Type[\"TimeSecond\"] = -19] = \"TimeSecond\";\n    Type[Type[\"TimeMillisecond\"] = -20] = \"TimeMillisecond\";\n    Type[Type[\"TimeMicrosecond\"] = -21] = \"TimeMicrosecond\";\n    Type[Type[\"TimeNanosecond\"] = -22] = \"TimeNanosecond\";\n    Type[Type[\"DenseUnion\"] = -23] = \"DenseUnion\";\n    Type[Type[\"SparseUnion\"] = -24] = \"SparseUnion\";\n    Type[Type[\"IntervalDayTime\"] = -25] = \"IntervalDayTime\";\n    Type[Type[\"IntervalYearMonth\"] = -26] = \"IntervalYearMonth\";\n    Type[Type[\"DurationSecond\"] = -27] = \"DurationSecond\";\n    Type[Type[\"DurationMillisecond\"] = -28] = \"DurationMillisecond\";\n    Type[Type[\"DurationMicrosecond\"] = -29] = \"DurationMicrosecond\";\n    Type[Type[\"DurationNanosecond\"] = -30] = \"DurationNanosecond\";\n})(Type || (Type = {}));\nexport var BufferType;\n(function (BufferType) {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    BufferType[BufferType[\"OFFSET\"] = 0] = \"OFFSET\";\n    /**\n     * actual data, either fixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    BufferType[BufferType[\"DATA\"] = 1] = \"DATA\";\n    /**\n     * Bit vector indicating if each value is null\n     */\n    BufferType[BufferType[\"VALIDITY\"] = 2] = \"VALIDITY\";\n    /**\n     * Type vector used in Union type\n     */\n    BufferType[BufferType[\"TYPE\"] = 3] = \"TYPE\";\n})(BufferType || (BufferType = {}));\n\n//# sourceMappingURL=enum.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x;\nimport { bigIntToNumber } from './util/bigint.mjs';\nimport { Type, Precision, UnionMode, DateUnit, TimeUnit, IntervalUnit } from './enum.mjs';\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport class DataType {\n    /** @nocollapse */ static isNull(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Null; }\n    /** @nocollapse */ static isInt(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Int; }\n    /** @nocollapse */ static isFloat(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Float; }\n    /** @nocollapse */ static isBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Binary; }\n    /** @nocollapse */ static isLargeBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.LargeBinary; }\n    /** @nocollapse */ static isUtf8(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Utf8; }\n    /** @nocollapse */ static isLargeUtf8(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.LargeUtf8; }\n    /** @nocollapse */ static isBool(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Bool; }\n    /** @nocollapse */ static isDecimal(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Decimal; }\n    /** @nocollapse */ static isDate(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Date; }\n    /** @nocollapse */ static isTime(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Time; }\n    /** @nocollapse */ static isTimestamp(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Interval; }\n    /** @nocollapse */ static isDuration(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Duration; }\n    /** @nocollapse */ static isList(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.List; }\n    /** @nocollapse */ static isStruct(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Struct; }\n    /** @nocollapse */ static isUnion(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Map; }\n    /** @nocollapse */ static isDictionary(x) { return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Dictionary; }\n    /** @nocollapse */ static isDenseUnion(x) { return DataType.isUnion(x) && x.mode === UnionMode.Dense; }\n    /** @nocollapse */ static isSparseUnion(x) { return DataType.isUnion(x) && x.mode === UnionMode.Sparse; }\n    constructor(typeId) {\n        this.typeId = typeId;\n    }\n}\n_a = Symbol.toStringTag;\nDataType[_a] = ((proto) => {\n    proto.children = null;\n    proto.ArrayType = Array;\n    proto.OffsetArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'DataType';\n})(DataType.prototype);\n/** @ignore */\nexport class Null extends DataType {\n    constructor() {\n        super(Type.Null);\n    }\n    toString() { return `Null`; }\n}\n_b = Symbol.toStringTag;\nNull[_b] = ((proto) => proto[Symbol.toStringTag] = 'Null')(Null.prototype);\n/** @ignore */\nclass Int_ extends DataType {\n    constructor(isSigned, bitWidth) {\n        super(Type.Int);\n        this.isSigned = isSigned;\n        this.bitWidth = bitWidth;\n    }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? BigInt64Array : BigUint64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n}\n_c = Symbol.toStringTag;\nInt_[_c] = ((proto) => {\n    proto.isSigned = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Int';\n})(Int_.prototype);\nexport { Int_ as Int };\n/** @ignore */\nexport class Int8 extends Int_ {\n    constructor() { super(true, 8); }\n    get ArrayType() { return Int8Array; }\n}\n/** @ignore */\nexport class Int16 extends Int_ {\n    constructor() { super(true, 16); }\n    get ArrayType() { return Int16Array; }\n}\n/** @ignore */\nexport class Int32 extends Int_ {\n    constructor() { super(true, 32); }\n    get ArrayType() { return Int32Array; }\n}\n/** @ignore */\nexport class Int64 extends Int_ {\n    constructor() { super(true, 64); }\n    get ArrayType() { return BigInt64Array; }\n}\n/** @ignore */\nexport class Uint8 extends Int_ {\n    constructor() { super(false, 8); }\n    get ArrayType() { return Uint8Array; }\n}\n/** @ignore */\nexport class Uint16 extends Int_ {\n    constructor() { super(false, 16); }\n    get ArrayType() { return Uint16Array; }\n}\n/** @ignore */\nexport class Uint32 extends Int_ {\n    constructor() { super(false, 32); }\n    get ArrayType() { return Uint32Array; }\n}\n/** @ignore */\nexport class Uint64 extends Int_ {\n    constructor() { super(false, 64); }\n    get ArrayType() { return BigUint64Array; }\n}\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: BigInt64Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: BigUint64Array });\n/** @ignore */\nexport class Float extends DataType {\n    constructor(precision) {\n        super(Type.Float);\n        this.precision = precision;\n    }\n    get ArrayType() {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `Float${(this.precision << 5) || 16}`; }\n}\n_d = Symbol.toStringTag;\nFloat[_d] = ((proto) => {\n    proto.precision = null;\n    return proto[Symbol.toStringTag] = 'Float';\n})(Float.prototype);\n/** @ignore */\nexport class Float16 extends Float {\n    constructor() { super(Precision.HALF); }\n}\n/** @ignore */\nexport class Float32 extends Float {\n    constructor() { super(Precision.SINGLE); }\n}\n/** @ignore */\nexport class Float64 extends Float {\n    constructor() { super(Precision.DOUBLE); }\n}\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n/** @ignore */\nexport class Binary extends DataType {\n    constructor() {\n        super(Type.Binary);\n    }\n    toString() { return `Binary`; }\n}\n_e = Symbol.toStringTag;\nBinary[_e] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Binary';\n})(Binary.prototype);\n/** @ignore */\nexport class LargeBinary extends DataType {\n    constructor() {\n        super(Type.LargeBinary);\n    }\n    toString() { return `LargeBinary`; }\n}\n_f = Symbol.toStringTag;\nLargeBinary[_f] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    proto.OffsetArrayType = BigInt64Array;\n    return proto[Symbol.toStringTag] = 'LargeBinary';\n})(LargeBinary.prototype);\n/** @ignore */\nexport class Utf8 extends DataType {\n    constructor() {\n        super(Type.Utf8);\n    }\n    toString() { return `Utf8`; }\n}\n_g = Symbol.toStringTag;\nUtf8[_g] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Utf8';\n})(Utf8.prototype);\n/** @ignore */\nexport class LargeUtf8 extends DataType {\n    constructor() {\n        super(Type.LargeUtf8);\n    }\n    toString() { return `LargeUtf8`; }\n}\n_h = Symbol.toStringTag;\nLargeUtf8[_h] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    proto.OffsetArrayType = BigInt64Array;\n    return proto[Symbol.toStringTag] = 'LargeUtf8';\n})(LargeUtf8.prototype);\n/** @ignore */\nexport class Bool extends DataType {\n    constructor() {\n        super(Type.Bool);\n    }\n    toString() { return `Bool`; }\n}\n_j = Symbol.toStringTag;\nBool[_j] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Bool';\n})(Bool.prototype);\n/** @ignore */\nexport class Decimal extends DataType {\n    constructor(scale, precision, bitWidth = 128) {\n        super(Type.Decimal);\n        this.scale = scale;\n        this.precision = precision;\n        this.bitWidth = bitWidth;\n    }\n    toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n}\n_k = Symbol.toStringTag;\nDecimal[_k] = ((proto) => {\n    proto.scale = null;\n    proto.precision = null;\n    proto.ArrayType = Uint32Array;\n    return proto[Symbol.toStringTag] = 'Decimal';\n})(Decimal.prototype);\n/** @ignore */\nexport class Date_ extends DataType {\n    constructor(unit) {\n        super(Type.Date);\n        this.unit = unit;\n    }\n    toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n}\n_l = Symbol.toStringTag;\nDate_[_l] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Date';\n})(Date_.prototype);\n/** @ignore */\nexport class DateDay extends Date_ {\n    constructor() { super(DateUnit.DAY); }\n}\n/** @ignore */\nexport class DateMillisecond extends Date_ {\n    constructor() { super(DateUnit.MILLISECOND); }\n}\n/** @ignore */\nclass Time_ extends DataType {\n    constructor(unit, bitWidth) {\n        super(Type.Time);\n        this.unit = unit;\n        this.bitWidth = bitWidth;\n    }\n    toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 32: return Int32Array;\n            case 64: return BigInt64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n}\n_m = Symbol.toStringTag;\nTime_[_m] = ((proto) => {\n    proto.unit = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Time';\n})(Time_.prototype);\nexport { Time_ as Time };\n/** @ignore */\nexport class TimeSecond extends Time_ {\n    constructor() { super(TimeUnit.SECOND, 32); }\n}\n/** @ignore */\nexport class TimeMillisecond extends Time_ {\n    constructor() { super(TimeUnit.MILLISECOND, 32); }\n}\n/** @ignore */\nexport class TimeMicrosecond extends Time_ {\n    constructor() { super(TimeUnit.MICROSECOND, 64); }\n}\n/** @ignore */\nexport class TimeNanosecond extends Time_ {\n    constructor() { super(TimeUnit.NANOSECOND, 64); }\n}\n/** @ignore */\nclass Timestamp_ extends DataType {\n    constructor(unit, timezone) {\n        super(Type.Timestamp);\n        this.unit = unit;\n        this.timezone = timezone;\n    }\n    toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n}\n_o = Symbol.toStringTag;\nTimestamp_[_o] = ((proto) => {\n    proto.unit = null;\n    proto.timezone = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Timestamp';\n})(Timestamp_.prototype);\nexport { Timestamp_ as Timestamp };\n/** @ignore */\nexport class TimestampSecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.SECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MILLISECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MICROSECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.NANOSECOND, timezone); }\n}\n/** @ignore */\nclass Interval_ extends DataType {\n    constructor(unit) {\n        super(Type.Interval);\n        this.unit = unit;\n    }\n    toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n}\n_p = Symbol.toStringTag;\nInterval_[_p] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Interval';\n})(Interval_.prototype);\nexport { Interval_ as Interval };\n/** @ignore */\nexport class IntervalDayTime extends Interval_ {\n    constructor() { super(IntervalUnit.DAY_TIME); }\n}\n/** @ignore */\nexport class IntervalYearMonth extends Interval_ {\n    constructor() { super(IntervalUnit.YEAR_MONTH); }\n}\n/** @ignore */\nexport class Duration extends DataType {\n    constructor(unit) {\n        super(Type.Duration);\n        this.unit = unit;\n    }\n    toString() { return `Duration<${TimeUnit[this.unit]}>`; }\n}\n_q = Symbol.toStringTag;\nDuration[_q] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = BigInt64Array;\n    return proto[Symbol.toStringTag] = 'Duration';\n})(Duration.prototype);\n/** @ignore */\nexport class DurationSecond extends Duration {\n    constructor() { super(TimeUnit.SECOND); }\n}\n/** @ignore */\nexport class DurationMillisecond extends Duration {\n    constructor() { super(TimeUnit.MILLISECOND); }\n}\n/** @ignore */\nexport class DurationMicrosecond extends Duration {\n    constructor() { super(TimeUnit.MICROSECOND); }\n}\n/** @ignore */\nexport class DurationNanosecond extends Duration {\n    constructor() { super(TimeUnit.NANOSECOND); }\n}\n/** @ignore */\nexport class List extends DataType {\n    constructor(child) {\n        super(Type.List);\n        this.children = [child];\n    }\n    toString() { return `List<${this.valueType}>`; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n}\n_r = Symbol.toStringTag;\nList[_r] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'List';\n})(List.prototype);\n/** @ignore */\nexport class Struct extends DataType {\n    constructor(children) {\n        super(Type.Struct);\n        this.children = children;\n    }\n    toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\n_s = Symbol.toStringTag;\nStruct[_s] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'Struct';\n})(Struct.prototype);\n/** @ignore */\nclass Union_ extends DataType {\n    constructor(mode, typeIds, children) {\n        super(Type.Union);\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex, Object.create(null));\n    }\n    toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)}>`;\n    }\n}\n_t = Symbol.toStringTag;\nUnion_[_t] = ((proto) => {\n    proto.mode = null;\n    proto.typeIds = null;\n    proto.children = null;\n    proto.typeIdToChildIndex = null;\n    proto.ArrayType = Int8Array;\n    return proto[Symbol.toStringTag] = 'Union';\n})(Union_.prototype);\nexport { Union_ as Union };\n/** @ignore */\nexport class DenseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n/** @ignore */\nexport class SparseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n/** @ignore */\nexport class FixedSizeBinary extends DataType {\n    constructor(byteWidth) {\n        super(Type.FixedSizeBinary);\n        this.byteWidth = byteWidth;\n    }\n    toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n}\n_u = Symbol.toStringTag;\nFixedSizeBinary[_u] = ((proto) => {\n    proto.byteWidth = null;\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n})(FixedSizeBinary.prototype);\n/** @ignore */\nexport class FixedSizeList extends DataType {\n    constructor(listSize, child) {\n        super(Type.FixedSizeList);\n        this.listSize = listSize;\n        this.children = [child];\n    }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n    toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n}\n_v = Symbol.toStringTag;\nFixedSizeList[_v] = ((proto) => {\n    proto.children = null;\n    proto.listSize = null;\n    return proto[Symbol.toStringTag] = 'FixedSizeList';\n})(FixedSizeList.prototype);\n/** @ignore */\nexport class Map_ extends DataType {\n    constructor(entries, keysSorted = false) {\n        var _y, _z, _0;\n        super(Type.Map);\n        this.children = [entries];\n        this.keysSorted = keysSorted;\n        // ARROW-8716\n        // https://github.com/apache/arrow/issues/17168\n        if (entries) {\n            entries['name'] = 'entries';\n            if ((_y = entries === null || entries === void 0 ? void 0 : entries.type) === null || _y === void 0 ? void 0 : _y.children) {\n                const key = (_z = entries === null || entries === void 0 ? void 0 : entries.type) === null || _z === void 0 ? void 0 : _z.children[0];\n                if (key) {\n                    key['name'] = 'key';\n                }\n                const val = (_0 = entries === null || entries === void 0 ? void 0 : entries.type) === null || _0 === void 0 ? void 0 : _0.children[1];\n                if (val) {\n                    val['name'] = 'value';\n                }\n            }\n        }\n    }\n    get keyType() { return this.children[0].type.children[0].type; }\n    get valueType() { return this.children[0].type.children[1].type; }\n    get childType() { return this.children[0].type; }\n    toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\n_w = Symbol.toStringTag;\nMap_[_w] = ((proto) => {\n    proto.children = null;\n    proto.keysSorted = null;\n    return proto[Symbol.toStringTag] = 'Map_';\n})(Map_.prototype);\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n/** @ignore */\nexport class Dictionary extends DataType {\n    constructor(dictionary, indices, id, isOrdered) {\n        super(Type.Dictionary);\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : bigIntToNumber(id);\n    }\n    get children() { return this.dictionary.children; }\n    get valueType() { return this.dictionary; }\n    get ArrayType() { return this.dictionary.ArrayType; }\n    toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n}\n_x = Symbol.toStringTag;\nDictionary[_x] = ((proto) => {\n    proto.id = null;\n    proto.indices = null;\n    proto.isOrdered = null;\n    proto.dictionary = null;\n    return proto[Symbol.toStringTag] = 'Dictionary';\n})(Dictionary.prototype);\n/** @ignore */\nexport function strideForType(type) {\n    const t = type;\n    switch (type.typeId) {\n        case Type.Decimal: return type.bitWidth / 32;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + t.unit;\n        case Type.Interval: return 1 + t.unit;\n        // case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        // case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return t.listSize;\n        case Type.FixedSizeBinary: return t.byteWidth;\n        default: return 1;\n    }\n}\n\n//# sourceMappingURL=type.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport function getBool(_data, _index, byte, bit) {\n    return (byte & 1 << bit) !== 0;\n}\n/** @ignore */\nexport function getBit(_data, _index, byte, bit) {\n    return (byte & 1 << bit) >> bit;\n}\n/** @ignore */\nexport function setBool(bytes, index, value) {\n    return value ?\n        !!(bytes[index >> 3] |= (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false;\n}\n/** @ignore */\nexport function truncateBitmap(offset, length, bitmap) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(new BitIterator(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n/** @ignore */\nexport function packBools(values) {\n    const xs = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) {\n        xs[i++] = byte;\n    }\n    const b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n/** @ignore */\nexport class BitIterator {\n    constructor(bytes, begin, length, context, get) {\n        this.bytes = bytes;\n        this.length = length;\n        this.context = context;\n        this.get = get;\n        this.bit = begin % 8;\n        this.byteIndex = begin >> 3;\n        this.byte = bytes[this.byteIndex++];\n        this.index = 0;\n    }\n    next() {\n        if (this.index < this.length) {\n            if (this.bit === 8) {\n                this.bit = 0;\n                this.byte = this.bytes[this.byteIndex++];\n            }\n            return {\n                value: this.get(this.context, this.index++, this.byte, this.bit++)\n            };\n        }\n        return { done: true, value: null };\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data, lhs, rhs) {\n    if (rhs - lhs <= 0) {\n        return 0;\n    }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of new BitIterator(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n    // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n    popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3));\n}\n/** @ignore */\nexport function popcnt_array(arr, byteOffset, byteLength) {\n    let cnt = 0, pos = Math.trunc(byteOffset);\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len = byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n/** @ignore */\nexport function popcnt_uint32(uint32) {\n    let i = Math.trunc(uint32);\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n\n//# sourceMappingURL=bit.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from './vector.mjs';\nimport { BufferType, Type, UnionMode } from './enum.mjs';\nimport { DataType, strideForType } from './type.mjs';\nimport { popcnt_bit_range, truncateBitmap } from './util/bit.mjs';\n/** @ignore */ export const kUnknownNullCount = -1;\n/**\n * Data structure underlying {@link Vector}s. Use the convenience method {@link makeData}.\n */\nexport class Data {\n    get typeId() { return this.type.typeId; }\n    get ArrayType() { return this.type.ArrayType; }\n    get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];\n    }\n    get nullable() {\n        if (this._nullCount !== 0) {\n            const { type } = this;\n            if (DataType.isSparseUnion(type)) {\n                return this.children.some((child) => child.nullable);\n            }\n            else if (DataType.isDenseUnion(type)) {\n                return this.children.some((child) => child.nullable);\n            }\n            return this.nullBitmap && this.nullBitmap.byteLength > 0;\n        }\n        return true;\n    }\n    get byteLength() {\n        let byteLength = 0;\n        const { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values && (byteLength += values.byteLength);\n        nullBitmap && (byteLength += nullBitmap.byteLength);\n        typeIds && (byteLength += typeIds.byteLength);\n        return this.children.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n    get nullCount() {\n        if (DataType.isUnion(this.type)) {\n            return this.children.reduce((nullCount, child) => nullCount + child.nullCount, 0);\n        }\n        let nullCount = this._nullCount;\n        let nullBitmap;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n    constructor(type, offset, length, nullCount, buffers, children = [], dictionary) {\n        this.type = type;\n        this.children = children;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        let buffer;\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        }\n        else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = buffers[0]) && (this.valueOffsets = buffer);\n                (buffer = buffers[1]) && (this.values = buffer);\n                (buffer = buffers[2]) && (this.nullBitmap = buffer);\n                (buffer = buffers[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n    getValid(index) {\n        const { type } = this;\n        if (DataType.isUnion(type)) {\n            const union = type;\n            const child = this.children[union.typeIdToChildIndex[this.typeIds[index]]];\n            const indexInChild = union.mode === UnionMode.Dense ? this.valueOffsets[index] : index;\n            return child.getValid(indexInChild);\n        }\n        if (this.nullable && this.nullCount > 0) {\n            const pos = this.offset + index;\n            const val = this.nullBitmap[pos >> 3];\n            return (val & (1 << (pos % 8))) !== 0;\n        }\n        return true;\n    }\n    setValid(index, value) {\n        let prev;\n        const { type } = this;\n        if (DataType.isUnion(type)) {\n            const union = type;\n            const child = this.children[union.typeIdToChildIndex[this.typeIds[index]]];\n            const indexInChild = union.mode === UnionMode.Dense ? this.valueOffsets[index] : index;\n            prev = child.getValid(indexInChild);\n            child.setValid(indexInChild, value);\n        }\n        else {\n            let { nullBitmap } = this;\n            const { offset, length } = this;\n            const idx = offset + index;\n            const mask = 1 << (idx % 8);\n            const byteOffset = idx >> 3;\n            // If no null bitmap, initialize one on the fly\n            if (!nullBitmap || nullBitmap.byteLength <= byteOffset) {\n                nullBitmap = new Uint8Array((((offset + length) + 63) & ~63) >> 3).fill(255);\n                // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n                if (this.nullCount > 0) {\n                    nullBitmap.set(truncateBitmap(offset, length, this.nullBitmap), 0);\n                }\n                Object.assign(this, { nullBitmap, _nullCount: -1 });\n            }\n            const byte = nullBitmap[byteOffset];\n            prev = (byte & mask) !== 0;\n            value ?\n                (nullBitmap[byteOffset] = byte | mask) :\n                (nullBitmap[byteOffset] = byte & ~mask);\n        }\n        if (prev !== !!value) {\n            // Update `_nullCount` if the new value is different from the old value.\n            this._nullCount = this.nullCount + (value ? -1 : 1);\n        }\n        return value;\n    }\n    clone(type = this.type, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers = this, children = this.children) {\n        return new Data(type, offset, length, nullCount, buffers, children, this.dictionary);\n    }\n    slice(offset, length) {\n        const { stride, typeId, children } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone(this.type, this.offset + offset, length, nullCount, buffers, \n        // Don't slice children if we have value offsets (the variable-width types)\n        (children.length === 0 || this.valueOffsets) ? children : this._sliceChildren(children, childStride * offset, childStride * length));\n    }\n    _changeLengthAndBackfillNullBitmap(newLength) {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n    _sliceBuffers(offset, length, stride, typeId) {\n        let arr;\n        const { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n            // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n            (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n    _sliceChildren(children, offset, length) {\n        return children.map((child) => child.slice(offset, length));\n    }\n}\nData.prototype.children = Object.freeze([]);\nimport { Visitor } from './visitor.mjs';\nimport { toArrayBufferView, toBigInt64Array, toInt32Array, toUint8Array } from './util/buffer.mjs';\nclass MakeDataVisitor extends Visitor {\n    visit(props) {\n        return this.getVisitFn(props['type']).call(this, props);\n    }\n    visitNull(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['length']: length = 0, } = props;\n        return new Data(type, offset, length, length);\n    }\n    visitBool(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length >> 3, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitInt(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitFloat(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitUtf8(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitLargeUtf8(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toBigInt64Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitBinary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitLargeBinary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toBigInt64Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    visitFixedSizeBinary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitDate(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitTimestamp(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitTime(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitDecimal(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitList(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap], [child]);\n    }\n    visitStruct(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['children']: children = [] } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const { length = children.reduce((len, { length }) => Math.max(len, length), 0), nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap], children);\n    }\n    visitUnion(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['children']: children = [] } = props;\n        const typeIds = toArrayBufferView(type.ArrayType, props['typeIds']);\n        const { ['length']: length = typeIds.length, ['nullCount']: nullCount = -1, } = props;\n        if (DataType.isSparseUnion(type)) {\n            return new Data(type, offset, length, nullCount, [undefined, undefined, undefined, typeIds], children);\n        }\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, undefined, typeIds], children);\n    }\n    visitDictionary(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.indices.ArrayType, props['data']);\n        const { ['dictionary']: dictionary = new Vector([new MakeDataVisitor().visit({ type: type.dictionary })]) } = props;\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap], [], dictionary);\n    }\n    visitInterval(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitDuration(props) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    visitFixedSizeList(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child = new MakeDataVisitor().visit({ type: type.valueType }) } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const { ['length']: length = child.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap], [child]);\n    }\n    visitMap(props) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child = new MakeDataVisitor().visit({ type: type.childType }) } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap], [child]);\n    }\n}\nconst makeDataVisitor = new MakeDataVisitor();\nexport function makeData(props) {\n    return makeDataVisitor.visit(props);\n}\n\n//# sourceMappingURL=data.mjs.map\n","import {\n  DataType,\n  Null,\n  Int,\n  Float,\n  Binary,\n  Utf8,\n  Bool,\n  Decimal,\n  Date_,\n  Time,\n  Timestamp,\n  Interval,\n  List,\n  Struct,\n  Union,\n  FixedSizeBinary,\n  FixedSizeList,\n  Map_,\n  Duration,\n} from \"apache-arrow/type\";\nimport { BufferType, Type } from \"apache-arrow\";\nimport { Data } from \"apache-arrow/data\";\nimport { Vector } from \"apache-arrow\";\nimport { Field } from \"apache-arrow\";\nimport type { Buffers } from \"apache-arrow/data\";\nimport { Polygon, isPolygon } from \"../type\";\nimport { PolygonData } from \"../data\";\n\n// Typedefs that include only the information kept from a structuredClone\ntype PostMessageDataType = Pick<DataType, \"children\" | \"typeId\">;\ntype PostMessageField = Pick<Field, \"name\" | \"nullable\" | \"metadata\"> & {\n  type: PostMessageDataType;\n};\ntype PostMessageData<T extends DataType> = Pick<\n  Data<T>,\n  | \"type\"\n  | \"length\"\n  | \"offset\"\n  | \"stride\"\n  | \"children\"\n  | \"dictionary\"\n  | \"values\"\n  | \"typeIds\"\n  | \"nullBitmap\"\n  | \"valueOffsets\"\n> & {\n  type: PostMessageDataType;\n};\ntype PostMessageVector<T extends DataType> = Pick<\n  Vector,\n  \"data\" | \"length\" | \"stride\" | \"numChildren\"\n> & { type: PostMessageDataType };\n\nfunction rehydrateType<T extends Type>(type: PostMessageDataType): DataType<T> {\n  switch (type.typeId) {\n    case Type.Null:\n      return new Null() as DataType<T>;\n    case Type.Int:\n      // @ts-expect-error\n      return new Int(type.isSigned, type.bitWidth);\n    case Type.Float:\n      // @ts-expect-error\n      return new Float(type.precision);\n    case Type.Binary:\n      // @ts-expect-error\n      return new Binary();\n    case Type.Utf8:\n      // @ts-expect-error\n      return new Utf8();\n    case Type.Bool:\n      // @ts-expect-error\n      return new Bool();\n    case Type.Decimal:\n      // @ts-expect-error\n      return new Decimal(type.scale, type.precision, type.bitWidth);\n    case Type.Date:\n      // @ts-expect-error\n      return new Date_(type.unit);\n    // return new Date\n    case Type.Time:\n      // @ts-expect-error\n      return new Time(type.unit, type.bitWidth);\n    case Type.Timestamp:\n      // @ts-expect-error\n      return new Timestamp(type.unit, type.timezone);\n    case Type.Interval:\n      // @ts-expect-error\n      return new Interval(type.unit);\n    case Type.List: {\n      const children = type.children.map(rehydrateField);\n      if (children.length > 1) throw new Error(\"expected 1 field\");\n      // @ts-expect-error\n      return new List(children[0]);\n    }\n    case Type.Struct: {\n      const children = type.children.map(rehydrateField);\n      // @ts-expect-error\n      return new Struct(children);\n    }\n    case Type.Union: {\n      const children = type.children.map(rehydrateField);\n      // @ts-expect-error\n      return new Union(type.mode, type.typeIds, children);\n    }\n    case Type.FixedSizeBinary:\n      // @ts-expect-error\n      return new FixedSizeBinary(type.byteWidth);\n    case Type.FixedSizeList: {\n      const children = type.children.map(rehydrateField);\n      if (children.length > 1) throw new Error(\"expected 1 field\");\n      // @ts-expect-error\n      return new FixedSizeList(type.listSize, children[0]);\n    }\n    case Type.Map: {\n      const children = type.children.map(rehydrateField);\n      if (children.length > 1) throw new Error(\"expected 1 field\");\n      const entries = children[0];\n      // @ts-expect-error\n      return new Map_(entries, type.keysSorted);\n    }\n    case Type.Duration:\n      // @ts-expect-error\n      return new Duration(type.unit);\n    default:\n      throw new Error(`unknown type ${type}`);\n  }\n}\n\nfunction rehydrateField(field: PostMessageField): Field {\n  const type = rehydrateType(field.type);\n  return new Field(field.name, type, field.nullable, field.metadata);\n}\n\n/**\n * Rehydrate a `Data` object that has been `structuredClone`'d or\n * `postMessage`'d. The `Data` **must** have been prepared with\n * `preparePostMessage` to be accurately recreated.\n */\nexport function rehydrateData<T extends DataType>(\n  data: PostMessageData<T>,\n): Data<T> {\n  const children = data.children.map((childData) => rehydrateData(childData));\n  const dictionary = data.dictionary\n    ? rehydrateVector(data.dictionary)\n    : undefined;\n\n  // data.buffers is a getter, so we need to recreate Buffers from the\n  // attributes on data\n  const buffers: Buffers<T> = {\n    [BufferType.OFFSET]: data.valueOffsets,\n    [BufferType.DATA]: data.values,\n    [BufferType.VALIDITY]: data.nullBitmap,\n    [BufferType.TYPE]: data.typeIds,\n  };\n\n  // @ts-expect-error\n  return new Data(\n    rehydrateType(data.type),\n    data.offset,\n    data.length,\n    // @ts-expect-error\n    data._nullCount,\n    buffers,\n    children,\n    dictionary,\n  );\n}\n\n/**\n * Rehydrate a `Vector` object that has been `structuredClone`'d or\n * `postMessage`'d. The `Vector` **must** have been prepared with\n * `preparePostMessage` to be accurately recreated.\n */\nexport function rehydrateVector<T extends DataType>(\n  vector: PostMessageVector<T>,\n): Vector<T> {\n  return new Vector(vector.data.map((data) => rehydrateData(data)));\n}\n\nexport function rehydratePolygonData(\n  data: PostMessageData<Polygon>,\n): PolygonData {\n  if (!isPolygon(data.type)) {\n    throw new Error(\"Expected PolygonData\");\n  }\n\n  // @ts-expect-error\n  // For now, we allow this, even though we never fully recreate the prototypes\n  // on the JS side.\n  return data;\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Convert binary geometry representation to GeoJSON\n * @param data   geometry data in binary representation\n * @param options\n * @param options.type  Input data type: Point, LineString, or Polygon\n * @param options.featureId  Global feature id. If specified, only a single feature is extracted\n * @return GeoJSON objects\n */\nexport function binaryToGeojson(data, options) {\n    const globalFeatureId = options?.globalFeatureId;\n    if (globalFeatureId !== undefined) {\n        return getSingleFeature(data, globalFeatureId);\n    }\n    return parseFeatures(data, options?.type);\n}\n/**\n * Return a single feature from a binary geometry representation as GeoJSON\n * @param data   geometry data in binary representation\n * @return GeoJSON feature\n */\nfunction getSingleFeature(data, globalFeatureId) {\n    const dataArray = normalizeInput(data);\n    for (const data of dataArray) {\n        let lastIndex = 0;\n        let lastValue = data.featureIds.value[0];\n        // Scan through data until we find matching feature\n        for (let i = 0; i < data.featureIds.value.length; i++) {\n            const currValue = data.featureIds.value[i];\n            if (currValue === lastValue) {\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n            if (globalFeatureId === data.globalFeatureIds.value[lastIndex]) {\n                return parseFeature(data, lastIndex, i);\n            }\n            lastIndex = i;\n            lastValue = currValue;\n        }\n        if (globalFeatureId === data.globalFeatureIds.value[lastIndex]) {\n            return parseFeature(data, lastIndex, data.featureIds.value.length);\n        }\n    }\n    throw new Error(`featureId:${globalFeatureId} not found`);\n}\nfunction parseFeatures(data, type) {\n    const dataArray = normalizeInput(data, type);\n    return parseFeatureCollection(dataArray);\n}\n/** Parse input binary data and return a valid GeoJSON geometry object */\nexport function binaryToGeometry(data, startIndex, endIndex) {\n    switch (data.type) {\n        case 'Point':\n            return pointToGeoJson(data, startIndex, endIndex);\n        case 'LineString':\n            return lineStringToGeoJson(data, startIndex, endIndex);\n        case 'Polygon':\n            return polygonToGeoJson(data, startIndex, endIndex);\n        default:\n            const unexpectedInput = data;\n            throw new Error(`Unsupported geometry type: ${unexpectedInput?.type}`);\n    }\n}\n// Normalize features\n// Return an array of data objects, each of which have a type key\nfunction normalizeInput(data, type) {\n    const features = [];\n    if (data.points) {\n        data.points.type = 'Point';\n        features.push(data.points);\n    }\n    if (data.lines) {\n        data.lines.type = 'LineString';\n        features.push(data.lines);\n    }\n    if (data.polygons) {\n        data.polygons.type = 'Polygon';\n        features.push(data.polygons);\n    }\n    return features;\n}\n/** Parse input binary data and return an array of GeoJSON Features */\nfunction parseFeatureCollection(dataArray) {\n    const features = [];\n    for (const data of dataArray) {\n        if (data.featureIds.value.length === 0) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        let lastIndex = 0;\n        let lastValue = data.featureIds.value[0];\n        // Need to deduce start, end indices of each feature\n        for (let i = 0; i < data.featureIds.value.length; i++) {\n            const currValue = data.featureIds.value[i];\n            if (currValue === lastValue) {\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n            features.push(parseFeature(data, lastIndex, i));\n            lastIndex = i;\n            lastValue = currValue;\n        }\n        // Last feature\n        features.push(parseFeature(data, lastIndex, data.featureIds.value.length));\n    }\n    return features;\n}\n/** Parse input binary data and return a single GeoJSON Feature */\nfunction parseFeature(data, startIndex, endIndex) {\n    const geometry = binaryToGeometry(data, startIndex, endIndex);\n    const properties = parseProperties(data, startIndex, endIndex);\n    const fields = parseFields(data, startIndex, endIndex);\n    return { type: 'Feature', geometry, properties, ...fields };\n}\n/** Parse input binary data and return an object of fields */\nfunction parseFields(data, startIndex = 0, endIndex) {\n    return data.fields && data.fields[data.featureIds.value[startIndex]];\n}\n/** Parse input binary data and return an object of properties */\nfunction parseProperties(data, startIndex = 0, endIndex) {\n    const properties = Object.assign({}, data.properties[data.featureIds.value[startIndex]]);\n    for (const key in data.numericProps) {\n        properties[key] = data.numericProps[key].value[startIndex];\n    }\n    return properties;\n}\n/** Parse binary data of type Polygon */\nfunction polygonToGeoJson(data, startIndex = -Infinity, endIndex = Infinity) {\n    const { positions } = data;\n    const polygonIndices = data.polygonIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n    const primitivePolygonIndices = data.primitivePolygonIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n    const multi = polygonIndices.length > 2;\n    // Polygon\n    if (!multi) {\n        const coordinates = [];\n        for (let i = 0; i < primitivePolygonIndices.length - 1; i++) {\n            const startRingIndex = primitivePolygonIndices[i];\n            const endRingIndex = primitivePolygonIndices[i + 1];\n            const ringCoordinates = ringToGeoJson(positions, startRingIndex, endRingIndex);\n            coordinates.push(ringCoordinates);\n        }\n        return { type: 'Polygon', coordinates };\n    }\n    // MultiPolygon\n    const coordinates = [];\n    for (let i = 0; i < polygonIndices.length - 1; i++) {\n        const startPolygonIndex = polygonIndices[i];\n        const endPolygonIndex = polygonIndices[i + 1];\n        const polygonCoordinates = polygonToGeoJson(data, startPolygonIndex, endPolygonIndex).coordinates;\n        coordinates.push(polygonCoordinates);\n    }\n    return { type: 'MultiPolygon', coordinates };\n}\n/** Parse binary data of type LineString */\nfunction lineStringToGeoJson(data, startIndex = -Infinity, endIndex = Infinity) {\n    const { positions } = data;\n    const pathIndices = data.pathIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n    const multi = pathIndices.length > 2;\n    if (!multi) {\n        const coordinates = ringToGeoJson(positions, pathIndices[0], pathIndices[1]);\n        return { type: 'LineString', coordinates };\n    }\n    const coordinates = [];\n    for (let i = 0; i < pathIndices.length - 1; i++) {\n        const ringCoordinates = ringToGeoJson(positions, pathIndices[i], pathIndices[i + 1]);\n        coordinates.push(ringCoordinates);\n    }\n    return { type: 'MultiLineString', coordinates };\n}\n/** Parse binary data of type Point */\nfunction pointToGeoJson(data, startIndex, endIndex) {\n    const { positions } = data;\n    const coordinates = ringToGeoJson(positions, startIndex, endIndex);\n    const multi = coordinates.length > 1;\n    if (multi) {\n        return { type: 'MultiPoint', coordinates };\n    }\n    return { type: 'Point', coordinates: coordinates[0] };\n}\n/**\n * Parse a linear ring of positions to a GeoJSON linear ring\n *\n * @param positions Positions TypedArray\n * @param startIndex Start index to include in ring\n * @param endIndex End index to include in ring\n * @returns GeoJSON ring\n */\nfunction ringToGeoJson(positions, startIndex, endIndex) {\n    startIndex = startIndex || 0;\n    endIndex = endIndex || positions.value.length / positions.size;\n    const ringCoordinates = [];\n    for (let j = startIndex; j < endIndex; j++) {\n        const coord = Array();\n        for (let k = j * positions.size; k < (j + 1) * positions.size; k++) {\n            coord.push(Number(positions.value[k]));\n        }\n        ringCoordinates.push(coord);\n    }\n    return ringCoordinates;\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst EWKB_FLAG_Z = 0x80000000;\nconst EWKB_FLAG_M = 0x40000000;\nconst EWKB_FLAG_SRID = 0x20000000;\nconst MAX_SRID = 10000; // TBD: Assume no more than 10K SRIDs are defined\n/**\n * Integer code for geometry types in WKB and related formats\n * Reference: https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry#Well-known_binary\n */\nexport var WKBGeometryType;\n(function (WKBGeometryType) {\n    WKBGeometryType[WKBGeometryType[\"Point\"] = 1] = \"Point\";\n    WKBGeometryType[WKBGeometryType[\"LineString\"] = 2] = \"LineString\";\n    WKBGeometryType[WKBGeometryType[\"Polygon\"] = 3] = \"Polygon\";\n    WKBGeometryType[WKBGeometryType[\"MultiPoint\"] = 4] = \"MultiPoint\";\n    WKBGeometryType[WKBGeometryType[\"MultiLineString\"] = 5] = \"MultiLineString\";\n    WKBGeometryType[WKBGeometryType[\"MultiPolygon\"] = 6] = \"MultiPolygon\";\n    WKBGeometryType[WKBGeometryType[\"GeometryCollection\"] = 7] = \"GeometryCollection\";\n})(WKBGeometryType || (WKBGeometryType = {}));\n/** Sanity checks that first to 5-9 bytes could represent a supported WKB dialect header */\nexport function isWKB(arrayBuffer) {\n    const dataView = new DataView(arrayBuffer);\n    let byteOffset = 0;\n    const endianness = dataView.getUint8(byteOffset);\n    byteOffset += 1;\n    // Check valid endianness (only 0 or 1 are allowed)\n    if (endianness > 1) {\n        return false;\n    }\n    const littleEndian = endianness === 1;\n    const geometry = dataView.getUint32(byteOffset, littleEndian);\n    byteOffset += 4;\n    // check valid geometry type (we don't support extension geometries)\n    const geometryType = geometry & 0x07;\n    if (geometryType === 0 || geometryType > 7) {\n        return false;\n    }\n    const geometryFlags = geometry - geometryType;\n    // Accept iso-wkb flags\n    if (geometryFlags === 0 ||\n        geometryFlags === 1000 ||\n        geometryFlags === 2000 ||\n        geometryFlags === 3000) {\n        return true;\n    }\n    // Accept ewkb flags but reject otherwise\n    if ((geometryFlags & ~(EWKB_FLAG_Z | EWKB_FLAG_M | EWKB_FLAG_SRID)) !== 0) {\n        return false;\n    }\n    if (geometryFlags & EWKB_FLAG_SRID) {\n        const srid = dataView.getUint32(byteOffset, littleEndian);\n        byteOffset += 4;\n        if (srid > MAX_SRID) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Parses header and provides a byteOffset to start of geometry data\n * @param dataView\n * @param target optionally supply a WKBHeader object to avoid creating a new object for every call\n * @returns a header object describing the WKB data\n */\n// eslint-disable-next-line max-statements\nexport function parseWKBHeader(dataView, target) {\n    const wkbHeader = Object.assign(target || {}, {\n        type: 'wkb',\n        geometryType: 1,\n        dimensions: 2,\n        coordinates: 'xy',\n        littleEndian: true,\n        byteOffset: 0\n    });\n    // Check endianness of data\n    wkbHeader.littleEndian = dataView.getUint8(wkbHeader.byteOffset) === 1;\n    wkbHeader.byteOffset++;\n    // 4-digit code representing dimension and type of geometry\n    const geometryCode = dataView.getUint32(wkbHeader.byteOffset, wkbHeader.littleEndian);\n    wkbHeader.byteOffset += 4;\n    wkbHeader.geometryType = (geometryCode & 0x7);\n    // Check if iso-wkb variant: iso-wkb adds 1000, 2000 or 3000 to the geometry code\n    const isoType = (geometryCode - wkbHeader.geometryType) / 1000;\n    switch (isoType) {\n        case 0:\n            break;\n        case 1:\n            wkbHeader.type = 'iso-wkb';\n            wkbHeader.dimensions = 3;\n            wkbHeader.coordinates = 'xyz';\n            break;\n        case 2:\n            wkbHeader.type = 'iso-wkb';\n            wkbHeader.dimensions = 3;\n            wkbHeader.coordinates = 'xym';\n            break;\n        case 3:\n            wkbHeader.type = 'iso-wkb';\n            wkbHeader.dimensions = 4;\n            wkbHeader.coordinates = 'xyzm';\n            break;\n        default:\n            throw new Error(`WKB: Unsupported iso-wkb type: ${isoType}`);\n    }\n    // Check if EWKB variant. Uses bitmasks for Z&M dimensions as well as optional SRID field\n    const ewkbZ = geometryCode & EWKB_FLAG_Z;\n    const ewkbM = geometryCode & EWKB_FLAG_M;\n    const ewkbSRID = geometryCode & EWKB_FLAG_SRID;\n    if (ewkbZ && ewkbM) {\n        wkbHeader.type = 'ewkb';\n        wkbHeader.dimensions = 4;\n        wkbHeader.coordinates = 'xyzm';\n    }\n    else if (ewkbZ) {\n        wkbHeader.type = 'ewkb';\n        wkbHeader.dimensions = 3;\n        wkbHeader.coordinates = 'xyz';\n    }\n    else if (ewkbM) {\n        wkbHeader.type = 'ewkb';\n        wkbHeader.dimensions = 3;\n        wkbHeader.coordinates = 'xym';\n    }\n    // If SRID present read four more bytes\n    if (ewkbSRID) {\n        wkbHeader.type = 'ewkb';\n        // 4-digit code representing dimension and type of geometry\n        wkbHeader.srid = dataView.getUint32(wkbHeader.byteOffset, wkbHeader.littleEndian);\n        wkbHeader.byteOffset += 4;\n    }\n    return wkbHeader;\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { binaryToGeometry } from '@loaders.gl/gis';\nimport { parseWKBHeader, WKBGeometryType } from \"./parse-wkb-header.js\";\nexport function parseWKB(arrayBuffer, options) {\n    const binaryGeometry = parseWKBToBinary(arrayBuffer, options);\n    const shape = options?.wkb?.shape || 'binary-geometry';\n    switch (shape) {\n        case 'binary-geometry':\n            return binaryGeometry;\n        case 'geojson-geometry':\n            return binaryToGeometry(binaryGeometry);\n        case 'geometry':\n            // eslint-disable-next-line no-console\n            console.error('WKBLoader: \"geometry\" shape is deprecated, use \"binary-geometry\" instead');\n            return binaryToGeometry(binaryGeometry);\n        default:\n            throw new Error(shape);\n    }\n}\nexport function parseWKBToBinary(arrayBuffer, options) {\n    const dataView = new DataView(arrayBuffer);\n    const wkbHeader = parseWKBHeader(dataView);\n    const { geometryType, dimensions, littleEndian } = wkbHeader;\n    const offset = wkbHeader.byteOffset;\n    switch (geometryType) {\n        case WKBGeometryType.Point:\n            const point = parsePoint(dataView, offset, dimensions, littleEndian);\n            return point.geometry;\n        case WKBGeometryType.LineString:\n            const line = parseLineString(dataView, offset, dimensions, littleEndian);\n            return line.geometry;\n        case WKBGeometryType.Polygon:\n            const polygon = parsePolygon(dataView, offset, dimensions, littleEndian);\n            return polygon.geometry;\n        case WKBGeometryType.MultiPoint:\n            const multiPoint = parseMultiPoint(dataView, offset, dimensions, littleEndian);\n            multiPoint.type = 'Point';\n            return multiPoint;\n        case WKBGeometryType.MultiLineString:\n            const multiLine = parseMultiLineString(dataView, offset, dimensions, littleEndian);\n            multiLine.type = 'LineString';\n            return multiLine;\n        case WKBGeometryType.MultiPolygon:\n            const multiPolygon = parseMultiPolygon(dataView, offset, dimensions, littleEndian);\n            multiPolygon.type = 'Polygon';\n            return multiPolygon;\n        // case WKBGeometryType.GeometryCollection:\n        // TODO: handle GeometryCollections\n        // return parseGeometryCollection(dataView, offset, dimensions, littleEndian);\n        default:\n            throw new Error(`WKB: Unsupported geometry type: ${geometryType}`);\n    }\n}\n// Primitives; parse point and linear ring\nfunction parsePoint(dataView, offset, dimension, littleEndian) {\n    const positions = new Float64Array(dimension);\n    for (let i = 0; i < dimension; i++) {\n        positions[i] = dataView.getFloat64(offset, littleEndian);\n        offset += 8;\n    }\n    return {\n        geometry: { type: 'Point', positions: { value: positions, size: dimension } },\n        offset\n    };\n}\nfunction parseLineString(dataView, offset, dimension, littleEndian) {\n    const nPoints = dataView.getUint32(offset, littleEndian);\n    offset += 4;\n    // Instantiate array\n    const positions = new Float64Array(nPoints * dimension);\n    for (let i = 0; i < nPoints * dimension; i++) {\n        positions[i] = dataView.getFloat64(offset, littleEndian);\n        offset += 8;\n    }\n    const pathIndices = [0];\n    if (nPoints > 0) {\n        pathIndices.push(nPoints);\n    }\n    return {\n        geometry: {\n            type: 'LineString',\n            positions: { value: positions, size: dimension },\n            pathIndices: { value: new Uint32Array(pathIndices), size: 1 }\n        },\n        offset\n    };\n}\n// https://stackoverflow.com/a/55261098\nconst cumulativeSum = (sum) => (value) => (sum += value);\nfunction parsePolygon(dataView, offset, dimension, littleEndian) {\n    const nRings = dataView.getUint32(offset, littleEndian);\n    offset += 4;\n    const rings = [];\n    for (let i = 0; i < nRings; i++) {\n        const parsed = parseLineString(dataView, offset, dimension, littleEndian);\n        const { positions } = parsed.geometry;\n        offset = parsed.offset;\n        rings.push(positions.value);\n    }\n    const concatenatedPositions = new Float64Array(concatTypedArrays(rings).buffer);\n    const polygonIndices = [0];\n    if (concatenatedPositions.length > 0) {\n        polygonIndices.push(concatenatedPositions.length / dimension);\n    }\n    const primitivePolygonIndices = rings.map((l) => l.length / dimension).map(cumulativeSum(0));\n    primitivePolygonIndices.unshift(0);\n    return {\n        geometry: {\n            type: 'Polygon',\n            positions: { value: concatenatedPositions, size: dimension },\n            polygonIndices: {\n                value: new Uint32Array(polygonIndices),\n                size: 1\n            },\n            primitivePolygonIndices: { value: new Uint32Array(primitivePolygonIndices), size: 1 }\n        },\n        offset\n    };\n}\nfunction parseMultiPoint(dataView, offset, dimension, littleEndian) {\n    const nPoints = dataView.getUint32(offset, littleEndian);\n    offset += 4;\n    const binaryPointGeometries = [];\n    for (let i = 0; i < nPoints; i++) {\n        // Byte order for point\n        const littleEndianPoint = dataView.getUint8(offset) === 1;\n        offset++;\n        // Assert point type\n        if (dataView.getUint32(offset, littleEndianPoint) % 1000 !== 1) {\n            throw new Error('WKB: Inner geometries of MultiPoint not of type Point');\n        }\n        offset += 4;\n        const parsed = parsePoint(dataView, offset, dimension, littleEndianPoint);\n        offset = parsed.offset;\n        binaryPointGeometries.push(parsed.geometry);\n    }\n    return concatenateBinaryPointGeometries(binaryPointGeometries, dimension);\n}\nfunction parseMultiLineString(dataView, offset, dimension, littleEndian) {\n    const nLines = dataView.getUint32(offset, littleEndian);\n    offset += 4;\n    const binaryLineGeometries = [];\n    for (let i = 0; i < nLines; i++) {\n        // Byte order for line\n        const littleEndianLine = dataView.getUint8(offset) === 1;\n        offset++;\n        // Assert type LineString\n        if (dataView.getUint32(offset, littleEndianLine) % 1000 !== 2) {\n            throw new Error('WKB: Inner geometries of MultiLineString not of type LineString');\n        }\n        offset += 4;\n        const parsed = parseLineString(dataView, offset, dimension, littleEndianLine);\n        offset = parsed.offset;\n        binaryLineGeometries.push(parsed.geometry);\n    }\n    return concatenateBinaryLineGeometries(binaryLineGeometries, dimension);\n}\nfunction parseMultiPolygon(dataView, offset, dimension, littleEndian) {\n    const nPolygons = dataView.getUint32(offset, littleEndian);\n    offset += 4;\n    const binaryPolygonGeometries = [];\n    for (let i = 0; i < nPolygons; i++) {\n        // Byte order for polygon\n        const littleEndianPolygon = dataView.getUint8(offset) === 1;\n        offset++;\n        // Assert type Polygon\n        if (dataView.getUint32(offset, littleEndianPolygon) % 1000 !== 3) {\n            throw new Error('WKB: Inner geometries of MultiPolygon not of type Polygon');\n        }\n        offset += 4;\n        const parsed = parsePolygon(dataView, offset, dimension, littleEndianPolygon);\n        offset = parsed.offset;\n        binaryPolygonGeometries.push(parsed.geometry);\n    }\n    return concatenateBinaryPolygonGeometries(binaryPolygonGeometries, dimension);\n}\n// TODO - move to loaders.gl/schema/gis\nfunction concatenateBinaryPointGeometries(binaryPointGeometries, dimension) {\n    const positions = binaryPointGeometries.map((geometry) => geometry.positions.value);\n    const concatenatedPositions = new Float64Array(concatTypedArrays(positions).buffer);\n    return {\n        type: 'Point',\n        positions: { value: concatenatedPositions, size: dimension }\n    };\n}\nfunction concatenateBinaryLineGeometries(binaryLineGeometries, dimension) {\n    const lines = binaryLineGeometries.map((geometry) => geometry.positions.value);\n    const concatenatedPositions = new Float64Array(concatTypedArrays(lines).buffer);\n    const pathIndices = lines.map((line) => line.length / dimension).map(cumulativeSum(0));\n    pathIndices.unshift(0);\n    return {\n        type: 'LineString',\n        positions: { value: concatenatedPositions, size: dimension },\n        pathIndices: { value: new Uint32Array(pathIndices), size: 1 }\n    };\n}\nfunction concatenateBinaryPolygonGeometries(binaryPolygonGeometries, dimension) {\n    const polygons = [];\n    const primitivePolygons = [];\n    for (const binaryPolygon of binaryPolygonGeometries) {\n        const { positions, primitivePolygonIndices } = binaryPolygon;\n        polygons.push(positions.value);\n        primitivePolygons.push(primitivePolygonIndices.value);\n    }\n    const concatenatedPositions = new Float64Array(concatTypedArrays(polygons).buffer);\n    const polygonIndices = polygons.map((p) => p.length / dimension).map(cumulativeSum(0));\n    polygonIndices.unshift(0);\n    // Combine primitivePolygonIndices from each individual polygon\n    const primitivePolygonIndices = [0];\n    for (const primitivePolygon of primitivePolygons) {\n        primitivePolygonIndices.push(...primitivePolygon\n            .filter((x) => x > 0)\n            .map((x) => x + primitivePolygonIndices[primitivePolygonIndices.length - 1]));\n    }\n    return {\n        type: 'Polygon',\n        positions: { value: concatenatedPositions, size: dimension },\n        polygonIndices: { value: new Uint32Array(polygonIndices), size: 1 },\n        primitivePolygonIndices: { value: new Uint32Array(primitivePolygonIndices), size: 1 }\n    };\n}\n// TODO: remove copy; import from typed-array-utils\n// modules/math/src/geometry/typed-arrays/typed-array-utils.js\nfunction concatTypedArrays(arrays) {\n    let byteLength = 0;\n    for (let i = 0; i < arrays.length; ++i) {\n        byteLength += arrays[i].byteLength;\n    }\n    const buffer = new Uint8Array(byteLength);\n    let byteOffset = 0;\n    for (let i = 0; i < arrays.length; ++i) {\n        const data = new Uint8Array(arrays[i].buffer);\n        byteLength = data.length;\n        for (let j = 0; j < byteLength; ++j) {\n            buffer[byteOffset++] = data[j];\n        }\n    }\n    return buffer;\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { VERSION } from \"./lib/utils/version.js\";\nimport { parseWKB } from \"./lib/parse-wkb.js\";\nimport { isWKB } from \"./lib/parse-wkb-header.js\";\n/**\n * Worker loader for WKB (Well-Known Binary)\n */\nexport const WKBWorkerLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'WKB',\n    id: 'wkb',\n    module: 'wkt',\n    version: VERSION,\n    worker: true,\n    category: 'geometry',\n    extensions: ['wkb'],\n    mimeTypes: [],\n    // TODO can we define static, serializable tests, eg. some binary strings?\n    tests: [isWKB],\n    options: {\n        wkb: {\n            shape: 'binary-geometry' // 'geojson-geometry'\n        }\n    }\n};\n/**\n * Loader for WKB (Well-Known Binary)\n */\nexport const WKBLoader = {\n    ...WKBWorkerLoader,\n    parse: async (arrayBuffer) => parseWKB(arrayBuffer),\n    parseSync: parseWKB\n};\n","import { makeData, Data } from \"apache-arrow\";\nimport {\n  GeoArrowData,\n  LineStringData,\n  PointData,\n  PolygonData,\n  WKBData,\n} from \"../data\";\nimport { WKBLoader } from \"@loaders.gl/wkt\";\nimport type {\n  BinaryGeometry,\n  BinaryPointGeometry,\n  BinaryLineGeometry,\n  BinaryPolygonGeometry,\n} from \"@loaders.gl/schema\";\nimport { assert, assertFalse } from \"../algorithm/utils/assert\";\nimport { FixedSizeList, Float64, List } from \"apache-arrow\";\nimport { Field } from \"apache-arrow\";\n\nexport enum WKBType {\n  Point,\n  LineString,\n  Polygon,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n}\n\n/**\n * Parse an Arrow array of WKB\n *\n * @return  {[type]}  [return description]\n */\nexport function parseWkb(\n  data: WKBData,\n  type: WKBType,\n  dim: number,\n): GeoArrowData {\n  const parsedGeometries: BinaryGeometry[] = [];\n\n  for (const item of iterBinary(data)) {\n    if (item === null) {\n      throw new Error(\"Null entries are not currently supported\");\n    }\n    const arrayBuffer = copyViewToArrayBuffer(item);\n    const parsed = WKBLoader.parseSync(arrayBuffer, {\n      wkb: { shape: \"binary-geometry\" },\n    }) as BinaryGeometry;\n    parsedGeometries.push(parsed);\n  }\n\n  switch (type) {\n    case WKBType.Point:\n      return repackPoints(parsedGeometries as BinaryPointGeometry[], dim);\n\n    case WKBType.LineString:\n      return repackLineStrings(parsedGeometries as BinaryLineGeometry[], dim);\n\n    case WKBType.Polygon:\n      const repackedPolygons = repackPolygons(\n        parsedGeometries as BinaryPolygonGeometry[],\n        dim,\n      );\n      console.log(\"here\");\n      console.log(repackedPolygons instanceof Data);\n\n      return repackedPolygons;\n\n    default:\n      assertFalse(\"Not yet implemented for this geometry type\");\n  }\n}\n\nfunction* iterBinary(data: WKBData): IterableIterator<Uint8Array | null> {\n  const values = data.values;\n  const valueOffsets = data.valueOffsets;\n  for (let i = 0; i < data.length; i++) {\n    if (!data.getValid(i)) {\n      yield null;\n    } else {\n      const startOffset = valueOffsets[i];\n      const endOffset = valueOffsets[i + 1];\n      yield values.subarray(startOffset, endOffset);\n    }\n  }\n}\n\n// TODO: update loaders.gl parseWKB to accept Uint8Array, not just ArrayBuffer.\nfunction copyViewToArrayBuffer(view: Uint8Array): ArrayBuffer {\n  const buffer = new ArrayBuffer(view.byteLength);\n  new Uint8Array(buffer).set(view);\n  return buffer;\n}\n\nfunction repackPoints(geoms: BinaryPointGeometry[], dim: number): PointData {\n  const geomLength = geoms.length;\n  const coords = new Float64Array(geomLength * dim);\n  let coordOffset = 0;\n  for (const geom of geoms) {\n    assert(geom.positions.value instanceof Float64Array);\n    coords.set(geom.positions.value, coordOffset * dim);\n    coordOffset += 1;\n  }\n\n  const coordsData = makeData({\n    type: new Float64(),\n    data: coords,\n  });\n  return makeData({\n    type: new FixedSizeList(\n      dim,\n      new Field(coordFieldName(dim), new Float64(), false),\n    ),\n    child: coordsData,\n  });\n}\n\ntype LineStringCapacity = {\n  coordCapacty: number;\n  geomCapacity: number;\n};\n\nfunction repackLineStrings(\n  geoms: BinaryLineGeometry[],\n  dim: number,\n): LineStringData {\n  const capacity = inferLineStringCapacity(geoms);\n  const coords = new Float64Array(capacity.coordCapacty * dim);\n  const geomOffsets = new Int32Array(capacity.geomCapacity + 1);\n\n  let geomIndex = 0;\n  let coordOffset = 0;\n  for (const geom of geoms) {\n    assert(geom.positions.value instanceof Float64Array);\n    const numCoords = geom.positions.value.length / geom.positions.size;\n    coords.set(geom.positions.value, coordOffset * dim);\n    geomIndex += 1;\n    coordOffset += numCoords;\n\n    // Note this is after we've added one\n    geomOffsets[geomIndex] = coordOffset;\n  }\n\n  const coordsData = makeData({\n    type: new Float64(),\n    data: coords,\n  });\n  const verticesData = makeData({\n    type: new FixedSizeList(\n      dim,\n      new Field(coordFieldName(dim), coordsData.type, false),\n    ),\n    child: coordsData,\n  });\n  return makeData({\n    type: new List(new Field(\"vertices\", verticesData.type, false)),\n    valueOffsets: geomOffsets,\n    child: verticesData,\n  });\n}\n\nfunction inferLineStringCapacity(\n  geoms: BinaryLineGeometry[],\n): LineStringCapacity {\n  let capacity: LineStringCapacity = {\n    coordCapacty: 0,\n    geomCapacity: 0,\n  };\n\n  // TODO: check geom.pathIndices to validate that we have a LineString and not\n  // a multi line string\n  for (const geom of geoms) {\n    capacity.geomCapacity += 1;\n    capacity.coordCapacty += geom.positions.value.length / geom.positions.size;\n  }\n\n  return capacity;\n}\n\ntype PolygonCapacity = {\n  coordCapacty: number;\n  /** This is what loaders.gl calls `primitivePolygonIndices` */\n  ringCapacity: number;\n  geomCapacity: number;\n};\n\nfunction repackPolygons(\n  geoms: BinaryPolygonGeometry[],\n  dim: number,\n): PolygonData {\n  const capacity = inferPolygonCapacity(geoms);\n  const coords = new Float64Array(capacity.coordCapacty * dim);\n  const ringOffsets = new Int32Array(capacity.ringCapacity + 1);\n  const geomOffsets = new Int32Array(capacity.geomCapacity + 1);\n\n  let geomIndex = 0;\n  let coordOffset = 0;\n  let ringOffset = 0;\n\n  for (const geom of geoms) {\n    assert(geom.positions.value instanceof Float64Array);\n    const numCoords = geom.positions.value.length / geom.positions.size;\n\n    coords.set(geom.positions.value, coordOffset * dim);\n    coordOffset += numCoords;\n\n    for (\n      let ringIdx = 0;\n      ringIdx < geom.primitivePolygonIndices.value.length - 1;\n      ringIdx++\n    ) {\n      ringOffsets[ringOffset + 1] =\n        (geom.primitivePolygonIndices.value[ringOffset + 1] -\n          geom.primitivePolygonIndices.value[ringOffset]) /\n        geom.positions.size;\n      ringOffset += 1;\n    }\n\n    geomOffsets[geomIndex + 1] = ringOffset;\n    geomIndex += 1;\n  }\n\n  const coordsData = makeData({\n    type: new Float64(),\n    data: coords,\n  });\n  const verticesData = makeData({\n    type: new FixedSizeList(\n      dim,\n      new Field(coordFieldName(dim), coordsData.type, false),\n    ),\n    child: coordsData,\n  });\n\n  const ringsData = makeData({\n    type: new List(new Field(\"vertices\", verticesData.type, false)),\n    valueOffsets: ringOffsets,\n    child: verticesData,\n  });\n\n  return makeData({\n    type: new List(new Field(\"rings\", ringsData.type, false)),\n    valueOffsets: geomOffsets,\n    child: ringsData,\n  });\n}\n\nfunction inferPolygonCapacity(geoms: BinaryPolygonGeometry[]): PolygonCapacity {\n  let capacity: PolygonCapacity = {\n    coordCapacty: 0,\n    ringCapacity: 0,\n    geomCapacity: 0,\n  };\n\n  // TODO: check geom.polygonIndices to validate that we have a Polygon and not\n  // a MultiPolygon\n  for (const geom of geoms) {\n    capacity.geomCapacity += 1;\n    assert(\n      geom.primitivePolygonIndices.value.length >= 1,\n      \"Expected primitivePolygonIndices to always have length at least 1\",\n    );\n    capacity.ringCapacity += geom.primitivePolygonIndices.value.length - 1;\n    capacity.coordCapacty += geom.positions.value.length / geom.positions.size;\n  }\n\n  return capacity;\n}\n\nfunction coordFieldName(dim: number): \"xy\" | \"xyz\" {\n  if (dim === 2) {\n    return \"xy\";\n  } else if (dim === 3) {\n    return \"xyz\";\n  } else {\n    assertFalse(\"expected dimension of 2 or 3\");\n  }\n}\n"],"names":["equals","earcut","area","sign","arrow","_earcut","DataType","D2R","exports","PrimeMeridian","parser","parseProj","init","forward","inverse","names","Ellipsoid","datum","parseCode","Datum","dc_sphere","dc_eccentricity","toPoint","proj","MAX_ITER","Proj","_WINDING","Vector","BufferType","Data","Type","Int","Time","Timestamp","Interval","Union","Field","makeData","Float64","FixedSizeList","List"],"mappings":"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","x_google_ignoreList":[0,1,2,3,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128]}